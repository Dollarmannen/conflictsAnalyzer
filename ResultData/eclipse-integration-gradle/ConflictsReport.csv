==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_2d40e_f609a/rev_2d40e-f609a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_109e4_70ab7/rev_109e4-70ab7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_bbcb5_2631f/rev_bbcb5-2631f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_91b14_0e7ee/rev_91b14-0e7ee.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_ee210_b6cb3/rev_ee210-b6cb3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_f0d2a_dcb7a/rev_f0d2a-dcb7a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_c9fa3_196da/rev_c9fa3-196da.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_75fed_5e516/rev_75fed-5e516.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_a8f33_72832/rev_a8f33-72832.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_ec107_f91ce/rev_ec107-f91ce.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_504f7_615ba/rev_504f7-615ba.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_b8189_9564a/rev_b8189-9564a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_7bdbd_aeb36/rev_7bdbd-aeb36.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_104ad_804d6/rev_104ad-804d6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_29c3f_def7b/rev_29c3f-def7b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_90363_9faed/rev_90363-9faed.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_441d8_9d96f/rev_441d8-9d96f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_38c78_a2f01/rev_38c78-a2f01.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_3e014_3ede3/rev_3e014-3ede3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_662ac_8a6c3/rev_662ac-8a6c3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_428fd_0a0ef/rev_428fd-0a0ef.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_6b541_cac63/rev_6b541-cac63.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_3ede2_5a429/rev_3ede2-5a429.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_852f0_23650/rev_852f0-23650.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_56c57_ed729/rev_56c57-ed729.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_a35cd_5dcbe/rev_a35cd-5dcbe.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430243468360/fstmerge_var1_1366463575533999654
public void refreshDependencies(IProgressMonitor monitor) throws CoreException {
		monitor.beginTask("Refresh dependencies "+getName(), 3);
		try {
			// TODO JON remove this line!
//			refreshProjectDependencies(ProjectMapperFactory.workspaceMapper(), new SubProgressMonitor(monitor, 1));
			refreshClasspathContainer(new SubProgressMonitor(monitor, 1));
//			WTPUtil.addWebLibraries(this); only doing this on project import for now.
		} finally {
			monitor.done();
		}
	}
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430243468360/fstmerge_base_6027306353459137072
public void refreshDependencies(IProgressMonitor monitor) throws CoreException {
		monitor.beginTask("Refresh dependencies "+getName(), 3);
		try {
			refreshProjectDependencies(ProjectMapperFactory.workspaceMapper(), new SubProgressMonitor(monitor, 1));
			refreshClasspathContainer(new SubProgressMonitor(monitor, 1));
//			WTPUtil.addWebLibraries(this); only doing this on project import for now.
		} finally {
			monitor.done();
		}
	}
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430243468360/fstmerge_var2_5812460373024984241

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_a35cd_5dcbe/rev_a35cd-5dcbe/org.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/GradleProject.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430243468387/fstmerge_var1_5033295405187331216
public void convertToGradleProject(IProjectMapper projectMapping, ErrorHandler eh, IProgressMonitor monitor) {
		debug("convertToGradleProject called");
		monitor.beginTask("Convert to Gradle project", 8);
		try {
			//1: natures
			NatureUtils.ensure(getProject(), new SubProgressMonitor(monitor, 1), 
					GradleNature.NATURE_ID, //Must be first to make gradle project icon have gradle nature showing 
					JavaCore.NATURE_ID);
			debug("convertToGradleProject natures added");
			IJavaProject jProject = getJavaProject();

			//2: Configure class path containers for java
			ClassPath classPath = new ClassPath(this, jProject.getRawClasspath());
			classPath.ensureJREContainer(); //TODO: should be based on java preferences from gradle
			classPath.setOn(jProject, new SubProgressMonitor(monitor, 1));
			debug("convertToGradleProject JRE container added");
			
			//3: Refresh source folders
			refreshSourceFolders(eh, new SubProgressMonitor(monitor, 1));
			debug("refreshed source folders");
			
			//4: Force root project cache to be set
			try {
				getRootProject();
				debug("root project cached");
			} catch (FastOperationFailedException e) {
				debug("FAILED to cache root project: " + e.getMessage());
				
				 //Shouldn't happen... because by now, there should already be gradle model available
				throw ExceptionUtil.coreException(e);
			} finally {
				monitor.worked(1);
			}
			
			//5: Enable DSL support
			DSLDSupport.maybeAdd(this, eh, new SubProgressMonitor(monitor, 1));
			debug("DSLDSupport maybe added");
			
			//6: Add classpath container
			GradleClassPathContainer.addTo(getJavaProject(), new SubProgressMonitor(monitor, 1));
			debug("Classpath container added");

			//7: Add WTP fixups
			WTPUtil.addWebLibraries(this);
			monitor.worked(1);
		} catch (CoreException e) {
			eh.handleError(e);
		} finally {
			monitor.done();
		}
	}
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430243468387/fstmerge_base_4098654523551318326
public void convertToGradleProject(IProjectMapper projectMapping, ErrorHandler eh, IProgressMonitor monitor) {
		debug("convertToGradleProject called");
		monitor.beginTask("Convert to Gradle project", 8);
		try {
			//1: natures
			NatureUtils.ensure(getProject(), new SubProgressMonitor(monitor, 1), 
					GradleNature.NATURE_ID, //Must be first to make gradle project icon have gradle nature showing 
					JavaCore.NATURE_ID);
			debug("convertToGradleProject natures added");
			IJavaProject jProject = getJavaProject();

			//2: Configure class path containers for java
			ClassPath classPath = new ClassPath(this, jProject.getRawClasspath());
			classPath.ensureJREContainer(); //TODO: should be based on java preferences from gradle
			classPath.setOn(jProject, new SubProgressMonitor(monitor, 1));
			debug("convertToGradleProject JRE container added");
			
			//3: Refresh source folders
			refreshSourceFolders(eh, new SubProgressMonitor(monitor, 1));
			debug("refreshed source folders");
			
			//4: Refresh project deps
			refreshProjectDependencies(projectMapping, new SubProgressMonitor(monitor, 1));
			debug("refreshed project dependencies");
			
			//5: Force root project cache to be set
			try {
				getRootProject();
				debug("root project cached");
			} catch (FastOperationFailedException e) {
				debug("FAILED to cache root project: " + e.getMessage());
				
				 //Shouldn't happen... because by now, there should already be gradle model available
				throw ExceptionUtil.coreException(e);
			} finally {
				monitor.worked(1);
			}
			
			//6: Enable DSL support
			DSLDSupport.maybeAdd(this, eh, new SubProgressMonitor(monitor, 1));
			debug("DSLDSupport maybe added");
			
			//7: Add classpath container
			GradleClassPathContainer.addTo(getJavaProject(), new SubProgressMonitor(monitor, 1));
			debug("Classpath container added");

			
			//8: Add WTP fixups
			WTPUtil.addWebLibraries(this);
			monitor.worked(1);
		} catch (CoreException e) {
			eh.handleError(e);
		} finally {
			monitor.done();
		}
	}
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430243468387/fstmerge_var2_6390593974636269699

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_a35cd_5dcbe/rev_a35cd-5dcbe/org.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/GradleProject.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_6b8a2_4142f/rev_6b8a2-4142f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_0cd5c_6b8a2/rev_0cd5c-6b8a2.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_24a34_1fbf3/rev_24a34-1fbf3.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430243573426/fstmerge_var1_7387206947941705954
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430243573426/fstmerge_base_3614417841431064276
public void refreshDependencies(IProgressMonitor monitor, CancellationToken cancellationToken) throws CoreException {
		monitor.beginTask("Refresh dependencies "+getName(), 3);
		try {
			refreshProjectDependencies(ProjectMapperFactory.workspaceMapper(), new SubProgressMonitor(monitor, 1), cancellationToken);
			refreshClasspathContainer(new SubProgressMonitor(monitor, 1));
//			WTPUtil.addWebLibraries(this); only doing this on project import for now.
		} finally {
			monitor.done();
		}
	}
=======
public void refreshDependencies(IProgressMonitor monitor, CancellationToken cancellationToken) throws CoreException {
		monitor.beginTask("Refresh dependencies "+getName(), 3);
		try {
			// TODO JON remove this line!
//			refreshProjectDependencies(ProjectMapperFactory.workspaceMapper(), new SubProgressMonitor(monitor, 1), cancellationToken);
			refreshClasspathContainer(new SubProgressMonitor(monitor, 1));
//			WTPUtil.addWebLibraries(this); only doing this on project import for now.
		} finally {
			monitor.done();
		}
	}
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430243573426/fstmerge_var2_774665835831289989

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_24a34_1fbf3/rev_24a34-1fbf3/org.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/GradleProject.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430243573551/fstmerge_var1_3525697289219310157
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430243573551/fstmerge_base_8537022073958556781
public void convertToGradleProject(IProjectMapper projectMapping, ErrorHandler eh, IProgressMonitor monitor, CancellationToken cancellationToken) {
		debug("convertToGradleProject called");
		monitor.beginTask("Convert to Gradle project", 8);
		try {
			//1: natures
			NatureUtils.ensure(getProject(), new SubProgressMonitor(monitor, 1), 
					GradleNature.NATURE_ID, //Must be first to make gradle project icon have gradle nature showing 
					JavaCore.NATURE_ID);
			debug("convertToGradleProject natures added");
			IJavaProject jProject = getJavaProject();

			//2: Configure class path containers for java
			ClassPath classPath = new ClassPath(this, jProject.getRawClasspath());
			classPath.ensureJREContainer(); //TODO: should be based on java preferences from gradle
			classPath.setOn(jProject, new SubProgressMonitor(monitor, 1));
			debug("convertToGradleProject JRE container added");
			
			//3: Refresh source folders
			refreshSourceFolders(eh, new SubProgressMonitor(monitor, 1), cancellationToken);
			debug("refreshed source folders");
			
			//4: Refresh project deps
			refreshProjectDependencies(projectMapping, new SubProgressMonitor(monitor, 1), cancellationToken);
			debug("refreshed project dependencies");
			
			//5: Force root project cache to be set
			try {
				getRootProject();
				debug("root project cached");
			} catch (FastOperationFailedException e) {
				debug("FAILED to cache root project: " + e.getMessage());
				
				 //Shouldn't happen... because by now, there should already be gradle model available
				throw ExceptionUtil.coreException(e);
			} finally {
				monitor.worked(1);
			}
			
			//6: Enable DSL support
			DSLDSupport.maybeAdd(this, eh, new SubProgressMonitor(monitor, 1));
			debug("DSLDSupport maybe added");
			
			//7: Add classpath container
			GradleClassPathContainer.addTo(getJavaProject(), new SubProgressMonitor(monitor, 1));
			debug("Classpath container added");

			
			//8: Add WTP fixups
			WTPUtil.addWebLibraries(this);
			monitor.worked(1);
		} catch (CoreException e) {
			eh.handleError(e);
		} finally {
			monitor.done();
		}
	}
=======
public void convertToGradleProject(IProjectMapper projectMapping, ErrorHandler eh, IProgressMonitor monitor, CancellationToken cancellationToken) {
		debug("convertToGradleProject called");
		monitor.beginTask("Convert to Gradle project", 8);
		try {
			//1: natures
			NatureUtils.ensure(getProject(), new SubProgressMonitor(monitor, 1), 
					GradleNature.NATURE_ID, //Must be first to make gradle project icon have gradle nature showing 
					JavaCore.NATURE_ID);
			debug("convertToGradleProject natures added");
			IJavaProject jProject = getJavaProject();

			//2: Configure class path containers for java
			ClassPath classPath = new ClassPath(this, jProject.getRawClasspath());
			classPath.ensureJREContainer(); //TODO: should be based on java preferences from gradle
			classPath.setOn(jProject, new SubProgressMonitor(monitor, 1));
			debug("convertToGradleProject JRE container added");
			
			//3: Refresh source folders
			refreshSourceFolders(eh, new SubProgressMonitor(monitor, 1), cancellationToken);
			debug("refreshed source folders");
			
			//4: Force root project cache to be set
			try {
				getRootProject();
				debug("root project cached");
			} catch (FastOperationFailedException e) {
				debug("FAILED to cache root project: " + e.getMessage());
				
				 //Shouldn't happen... because by now, there should already be gradle model available
				throw ExceptionUtil.coreException(e);
			} finally {
				monitor.worked(1);
			}
			
			//5: Enable DSL support
			DSLDSupport.maybeAdd(this, eh, new SubProgressMonitor(monitor, 1));
			debug("DSLDSupport maybe added");
			
			//6: Add classpath container
			GradleClassPathContainer.addTo(getJavaProject(), new SubProgressMonitor(monitor, 1));
			debug("Classpath container added");

			//7: Add WTP fixups
			WTPUtil.addWebLibraries(this);
			monitor.worked(1);
		} catch (CoreException e) {
			eh.handleError(e);
		} finally {
			monitor.done();
		}
	}
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430243573551/fstmerge_var2_5834167672377278036

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_24a34_1fbf3/rev_24a34-1fbf3/org.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/GradleProject.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_47296_5d6cc/rev_47296-5d6cc.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_6ba61_04331/rev_6ba61-04331.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_02f9e_e18c9/rev_02f9e-e18c9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_fd90f_b1d28/rev_fd90f-b1d28.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_a5051_054d6/rev_a5051-054d6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_d540d_29e2a/rev_d540d-29e2a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_23caa_5cf1d/rev_23caa-5cf1d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_b5e20_bb33e/rev_b5e20-bb33e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_c04dc_24712/rev_c04dc-24712.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_a976e_b5e20/rev_a976e-b5e20.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_074f2_c7e3e/rev_074f2-c7e3e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_074f2_e5ed7/rev_074f2-e5ed7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_a7548_074f2/rev_a7548-074f2.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_4c1bf_5dee9/rev_4c1bf-5dee9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_76f60_4c165/rev_76f60-4c165.revisions
Conflict type: LineBasedMCFd
Conflict body: 
final public static String[] calculateProgramArgs(String[] pgmArgs, GradleProject project) {
		if (project != null) {
				GradleProject rootProject = project.getRootProjectMaybe();
			/*
			 * Check if the project is a sub-project in a flat multi-project
			 * layout. if there is no settings file provided with the current
			 * arguments add the settings file from the root project if it
			 * exists to CLI arguments
			 */
			if (rootProject != null) {
				if (rootProject != project
						&& !new File(project.getLocation(), GRADLE_SETTINGS_FILE).exists()
						&& !new Path(project.getLocation().getPath()).isPrefixOf(new Path(rootProject.getLocation().getPath()))) {
					boolean addedSettingsFileArgument = false;
					if (pgmArgs != null) {
						for (int i = 0; !addedSettingsFileArgument
								&& i < pgmArgs.length; i++) {
							String arg = pgmArgs[i].trim();
							if (ARG_SETTINGS_FILE_1.equals(arg) || ARG_SETTINGS_FILE_2.equals(arg)) {
								addedSettingsFileArgument = true;
							}
						}
					}
					if (!addedSettingsFileArgument) {
						File settingsFile = new File(rootProject.getLocation(), GRADLE_SETTINGS_FILE);
						if (settingsFile.exists()) {
							ArrayList<String> newArgs = new ArrayList<String>(
									pgmArgs == null ? 2 : pgmArgs.length + 2);
							if (pgmArgs != null) {
								for (String arg : pgmArgs) {
									newArgs.add(arg);
								}
							}
							newArgs.add(ARG_SETTINGS_FILE_1);
							newArgs.add(settingsFile.toString());
							pgmArgs = newArgs.toArray(new String[newArgs.size()]);
						}
					}
				}
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244102976/fstmerge_var1_3211254772185037481
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244102976/fstmerge_base_2367597552194081313
			} catch (FastOperationFailedException e) {
				/*
				 * TODO: evaluate whether ignore or log this exception. It occurs every  time new Gradle project is created.
				 */
				GradleCore.log(e);
=======
			} catch (FastOperationFailedException e) {
				//GradleCore.log(e);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244102976/fstmerge_var2_5469826810913130841
			}
		}
		return pgmArgs;
	}

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_76f60_4c165/rev_76f60-4c165/org.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/GradleProject.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_a8cdb_d81cd/rev_a8cdb-d81cd.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244140985/fstmerge_var1_5257290695404825922
public ProjectPublications getPublications(IProgressMonitor mon) throws CoreException {
		return mgr.getModel(this,ProjectPublications.class, mon);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244140985/fstmerge_base_4557512676897089024
public ProjectPublications getPublications(IProgressMonitor mon) throws Exception {
		synchronized (this) {
			if (publicationsModelProvider==null) {
				publicationsModelProvider = new GenericModelProvider<ProjectPublications>(this, ProjectPublications.class);
			}
		}
		return publicationsModelProvider.get(mon);
=======
public ProjectPublications getPublications(IProgressMonitor mon) throws Exception {
		return getSpecificModel(ProjectPublications.class, mon);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244140985/fstmerge_var2_8936859328742244662
	}

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_a8cdb_d81cd/rev_a8cdb-d81cd/org.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/GradleProject.java
Conflict type: LineBasedMCFd
Conflict body: 
public <T extends HierarchicalEclipseProject> T getGradleModel(Class<T> type) throws FastOperationFailedException, CoreException {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244140990/fstmerge_var1_8526123785790265069
		return mgr.getModel(this, type);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244140990/fstmerge_base_4381120432125120498
		GradleModelProvider provider = getModelProvider();
		T model = provider.getCachedModel(this, type);
		if (model==null) {
			throw ExceptionUtil.coreException("Could not get a Gradle model for '"+this.getDisplayName()+"'. " +
					"This may be because the Gradle project hierarchy changed after the project was imported.");
		} else {
			return model;
		}
=======
		GroupedModelProvider provider = getModelProvider();
		T model = provider.getCachedModel(this, type);
		if (model==null) {
			throw ExceptionUtil.coreException("Could not get a Gradle model for '"+this.getDisplayName()+"'. " +
					"This may be because the Gradle project hierarchy changed after the project was imported.");
		} else {
			return model;
		}
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244140990/fstmerge_var2_622326463978283460
	}

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_a8cdb_d81cd/rev_a8cdb-d81cd/org.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/GradleProject.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244141016/fstmerge_var1_5460726462342830278
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244141016/fstmerge_base_475562344429411460
private <T extends HierarchicalEclipseProject> T getGradleModel(Class<T> type, IProgressMonitor monitor) 
	throws OperationCanceledException, CoreException {
		monitor.beginTask("Get model for '"+getDisplayName()+"'", 2);
		try {
			//1:
			GradleModelProvider provider = getModelProvider(type, new SubProgressMonitor(monitor, 1));
			
			//2:
			while (true) {
				provider.ensureModels(type, new SubProgressMonitor(monitor, 1));
				try {
					return provider.getCachedModel(this, type);
				} catch (FastOperationFailedException e) {
					//Small chance that cache became invalidated before we could fetch model
				}
			}
		} finally {
			monitor.done();
		}
	}
=======
private <T extends HierarchicalEclipseProject> T getGradleModel(Class<T> type, IProgressMonitor monitor) 
	throws OperationCanceledException, CoreException {
		monitor.beginTask("Get model for '"+getDisplayName()+"'", 2);
		try {
			//1:
			GroupedModelProvider provider = getModelProvider(type, new SubProgressMonitor(monitor, 1));
			
			//2:
			while (true) {
				provider.ensureModels(type, new SubProgressMonitor(monitor, 1));
				try {
					return provider.getCachedModel(this, type);
				} catch (FastOperationFailedException e) {
					//Small chance that cache became invalidated before we could fetch model
				}
			}
		} finally {
			monitor.done();
		}
	}
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244141016/fstmerge_var2_4157606443288124285

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_a8cdb_d81cd/rev_a8cdb-d81cd/org.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/GradleProject.java
Conflict type: LineBasedMCFd
Conflict body: 
public void invalidateGradleModel() {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244141038/fstmerge_var1_8254494859654400857
		//TODO model manager: the old behavior invalidated whole project family by invalidating grouped model provider. 
		// Here it only flushes models for this project and not any of its family members.
		//Is this a problem?
		mgr.invalidate(this);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244141038/fstmerge_base_7186655890393753408
		GradleModelProvider provider = modelProvider;
		if (provider!=null) {
			provider.invalidate();
		}
		publicationsModelProvider = null;
=======
		GradleModelProvider provider = modelProvider;
		if (provider!=null) {
			provider.invalidate();
		}
		SPECIFIC_MODEL_LOCK.lock();
		modelProviderMap.clear();
		modelFetchingJobsCache.clear();
		SPECIFIC_MODEL_LOCK.unlock();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244141038/fstmerge_var2_3136066369906330837
	}

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_a8cdb_d81cd/rev_a8cdb-d81cd/org.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/GradleProject.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244141171/fstmerge_var1_1146624032361336046
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244141171/fstmerge_base_1015384645440033794
private synchronized Joinable<T> ensureModel(IProgressMonitor mon) throws Exception {
		mon.beginTask(jobName(project, type), 10);
		try {
			synchronized (this) {
				if (model!=null) {
					return model;
				} 
				model = new JoinableContinuation<T>();
			}
			//We only get here if we created the 'model promise' so its up to us to build it.
			try {
				model.apply(buildModel(project, type, new SubProgressMonitor(mon, 9)));
			} catch (Throwable e) {
				model.error(e);
			}
			return model;
		} finally {
			mon.done();
		}
	}
=======
private synchronized Joinable<T> ensureModel(IProgressMonitor mon) throws Exception {
		mon.beginTask(jobName(project, type), 10);
		try {
			synchronized (this) {
				if (model!=null) {
					return model;
				} 
				model = new JoinableContinuation<T>();
			}
			//We only get here if we created the 'model promise' so its up to us to build it.
			try {
				T result = buildModel(project, type, new SubProgressMonitor(mon, 9));
				synchronized (cacheLock) {
					cached = result;
				}
				model.apply(result);
				project.notifyModelListeners(result);
			} catch (Throwable e) {
				model.error(e);
			}
			
			return model;
		} finally {
			mon.done();
		}
	}
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244141171/fstmerge_var2_8292474585671914557

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_a8cdb_d81cd/rev_a8cdb-d81cd/org.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/GenericModelProvider.java
Conflict type: LineBasedMCFd
Conflict body: 
public void setProject(org.springsource.ide.eclipse.gradle.core.GradleProject project) {
		try {
			if (ideProject != null) {
				ideProject.removeModelListener(MODEL_LISTENER);
			}
			resetIndex();
			if (project != null) {
				ideProject = project;
				ideProject.addModelListener(MODEL_LISTENER);
				initializeIndexRequest(ideProject.requestGradleModel());
			}
		} catch (FastOperationFailedException e) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244142221/fstmerge_var1_4590863786783279285
			project.addModelListener(new IGradleModelListener() {
				@Override
				public <T> void modelChanged(org.springsource.ide.eclipse.gradle.core.GradleProject project, Class<T> type, T model) {
					try {
						initializeIndexRequest(project.getGradleModel());
					} catch (Exception e) {
						// ignore
					}
				}				
			});
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244142221/fstmerge_base_6560881489498879564
			project.addModelListener(new IGradleModelListener() {
				@Override
				public void modelChanged(
						org.springsource.ide.eclipse.gradle.core.GradleProject project) {
					try {
						initializeIndexRequest(project.getGradleModel());
					} catch (Exception e) {
						// ignore
					}
				}				
			});
=======
			// ignore
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244142221/fstmerge_var2_6823103925052545528
		} catch (CoreException e) {
			// ignore
		}
	}

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_a8cdb_d81cd/rev_a8cdb-d81cd/org.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/util/GradleProjectIndex.java
Conflict type: LineBasedMCFd
Conflict body: 
~~FSTMerge~~ private IGradleModelListener modelListener = new IGradleModelListener() {
		@Override
		public <T> void modelChanged(GradleProject p, Class<T> type,
				T model) {
			if (currentProject==p) {
				Display.getDefault().asyncExec(new Runnable() {
					public void run() {
						if (viewer!=null) {
							viewer.refresh();
							Tree tree = viewer.getTree();
							for (TreeColumn col : tree.getColumns()) {
								col.pack();
							}
						}
					}
				});
			}
		}
	}; ##FSTMerge## private IGradleModelListener modelListener = new IGradleModelListener() {
		public void modelChanged(final GradleProject p) {
			if (currentProject==p) {
				Display.getDefault().asyncExec(new Runnable() {
					public void run() {
						if (viewer!=null) {
							viewer.refresh();
							Tree tree = viewer.getTree();
							for (TreeColumn col : tree.getColumns()) {
								col.pack();
							}
						}
					}
				});
			}
		}
	}; ##FSTMerge## private IGradleModelListener modelListener = new IGradleModelListener() {
		public void modelChanged(final GradleProject p, Object model) {
			if (currentProject==p && model instanceof BuildInvocations) {
				Display.getDefault().asyncExec(new Runnable() {
					public void run() {
						if (viewer!=null) {
							viewer.refresh();
							Tree tree = viewer.getTree();
							for (TreeColumn col : tree.getColumns()) {
								col.pack();
							}
						}
					}
				});
			}
		}
	};
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_a8cdb_d81cd/rev_a8cdb-d81cd/org.springsource.ide.eclipse.gradle.ui.taskview/src/org/springsource/ide/eclipse/gradle/ui/taskview/TaskTreeContentProvider.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_a8141_a8cdb/rev_a8141-a8cdb.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_9d35b_aa6cb/rev_9d35b-aa6cb.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_adb05_72551/rev_adb05-72551.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_5903d_adb05/rev_5903d-adb05.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_b9e94_0a550/rev_b9e94-0a550.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_93348_ca0fb/rev_93348-ca0fb.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_76064_d896f/rev_76064-d896f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_a7e37_6aee0/rev_a7e37-6aee0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_0acb4_92d87/rev_0acb4-92d87.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_f0583_860c2/rev_f0583-860c2.revisions
Conflict type: LineBasedMCFd
Conflict body: 
private ClassPath computeEntries() {
		MarkerMaker markers = new MarkerMaker(project, GradleClassPathContainer.ERROR_MARKER_ID);
		try {
			debug("gradleModel ready: "+Integer.toHexString(System.identityHashCode(gradleModel))+" "+gradleModel);
			classpath = new ClassPath(project);
			boolean export = GradleCore.getInstance().getPreferences().isExportDependencies(); //TODO: maybe should be project preference?
			boolean missingPublicationsModels = false;
			
			for (ExternalDependency gEntry : gradleModel.getClasspath()) {
				// Get the location of the jar itself
				File file = gEntry.getFile();
				IPath jarPath = new Path(file.getAbsolutePath()); 
				if (jarPath.lastSegment()!=null && jarPath.lastSegment().endsWith(".jar")) {
					boolean remapped = false;
					if (GradleCore.getInstance().getPreferences().getRemapJarsToMavenProjects()) {	
						IProject projectDep = M2EUtils.getMavenProject(gEntry);
						if (projectDep!=null && projectDep.isAccessible()) {
							addProjectDependency(projectDep, export);
							remapped = true;
						}
					}
					if (!remapped && GradleCore.getInstance().getPreferences().getRemapJarsToGradleProjects()) {
						try {
							IProject projectDep = GradleCore.getGradleProject(gEntry);
							if (projectDep!=null) {
								addProjectDependency(projectDep, export);
								remapped = true;
							}
						} catch (FastOperationFailedException e) {
							missingPublicationsModels = true;
						}
					}
					if (!remapped) {
						addJarEntry(jarPath, gEntry, export);
					}
				} else {
					//'non jar' entries may happen when project has a dependency on a sourceSet's output folder.
					//See http://issues.gradle.org/browse/GRADLE-1766
					boolean isCovered = false;
					IProject containingProject = WorkspaceUtil.getContainingProject(file);
					if (containingProject!=null) {
						GradleProject referredProject = GradleCore.create(containingProject);
						if (referredProject!=null) {
							if (project.conservativeDependsOn(referredProject, false)) {
								//We assume that a project dependeny is adequate representation for the dependency on 
								//an output folder in the project.
								isCovered = true;
							}
						}
					}
					if (!isCovered) {
						if (file.exists()) {
							//We don't know what this is, but it exists. Give it the benefit of the doubt and try to treat it 
							//the same as a 'jar'... pray... and hope for the best. 
							//Note: one possible thing this could be is an output folder containing .class files.
							addJarEntry(jarPath, gEntry, export);
							markers.reportWarning("Unknown type of Gradle Dependency was treated as 'jar' entry: "+jarPath);
						} else {
							//Adding this will cause very wonky behavior see: https://issuetracker.springsource.com/browse/STS-2531
							//So do not add it. Only report it as an error marker on the project.
							markers.reportError("Illegal entry in Gradle Dependencies: "+jarPath);
						}
					}
				}
			}
			
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244547089/fstmerge_var1_822746461255196711
			for (EclipseProjectDependency dep : gradleModel.getProjectDependencies()) {
				GradleProject projectDependency = GradleCore.create(dep.getTargetProject());
				IProject projectInWorkspace = projectDependency.getProject();
				if (projectInWorkspace!=null) {
					addProjectDependency(projectInWorkspace, export);
				} else {
					markers.reportError("Project dependency not in the workspace: "+projectDependency.getDisplayName());
				}
			}
			if (missingPublicationsModels) {
				//We have produced a 'best effort' classpath but some model info was missing so schedule a more
				// complete refresh that will build these models in background (this is slow, so we can not do it here).
				JarRemapRefresher.request();
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244547089/fstmerge_base_3497207324981533223
			for (EclipseProjectDependency dep : gradleModel.getProjectDependencies()) {
				addProjectDependency(GradleCore.create(dep.getTargetProject()).getProject(), export);
=======
			for (StsEclipseProjectDependency dep : gradleModel.getProjectDependencies()) {
				IProject project = GradleCore.create(dep.getTargetProject()).getProject();
				if(project != null && project.isOpen())
					addProjectDependency(project, export);
				else {
					// replace the project dependency with a binary build of the project
					ExternalDependency external = dep.getExternalEquivalent();
					addJarEntry(new Path(external.getFile().getAbsolutePath()), external, export);
				}
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244547089/fstmerge_var2_1061958247549141349
			}
			
			return classpath;
		} finally {
			markers.schedule();
		}
	}

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_f0583_860c2/rev_f0583-860c2/org.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/GradleDependencyComputer.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244547174/fstmerge_var1_8384538718000861318
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244547174/fstmerge_base_1161198263290241388
public static IProject getGradleProject(ExternalDependency gEntry, IProgressMonitor mon) {
		Collection<GradleProject> projects = getGradleProjects();
		File file = gEntry.getFile();
		mon.beginTask("Searching workspace for "+file, 2*projects.size());
		try {
			for (GradleProject gp : projects) {
				IProject p = gp.getProject();
				if (p!=null) { //only projects that exist in the workspace are interesting.
					ProjectPublications publications = gp.getPublications(new SubProgressMonitor(mon, 1));
					for (GradlePublication pub : publications.getPublications()) {
						if (matches(pub.getId(), gEntry.getGradleModuleVersion())) {
							return p;
						}
					}
					mon.worked(1);
				}
			}
		} catch (Throwable e) {
			GradleCore.log(e);
		} finally {
			mon.done();
		}
		return null;
	}
=======
public static IProject getGradleProject(ExternalDependency gEntry, IProgressMonitor mon) {
		Collection<GradleProject> projects = getGradleProjects();
		File file = gEntry.getFile();
		mon.beginTask("Searching workspace for "+file, 2*projects.size());
		try {
			for (GradleProject gp : projects) {
				IProject p = gp.getProject();
				if (p!=null) { //only projects that exist in the workspace are interesting.
					for (GradleModuleVersion pub : gp.getGradleModel().getPublications()) {
						if (matches(pub, gEntry.getGradleModuleVersion()))
							return p;
					}
					mon.worked(1);
				}
			}
		} catch (CoreException e) {
			GradleCore.log(e);
		} catch (FastOperationFailedException e) {
			GradleCore.log(e);
		} finally {
			mon.done();
		}
		return null;
	}
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244547174/fstmerge_var2_3881919952430279771

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_f0583_860c2/rev_f0583-860c2/org.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/GradleCore.java
Conflict type: LineBasedMCFd
Conflict body: 
public void configureOperation(LongRunningOperation gradleOp, ILaunchConfiguration conf) {
		try {
			GradleProjectPreferences projectPrefs = getProjectPreferences();
			File javaHome = projectPrefs.getJavaHome();
			if (javaHome!=null) {
				gradleOp.setJavaHome(javaHome);
			}
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244547344/fstmerge_var1_3717307637210487527
			String[] jvmArgs = projectPrefs.getJVMArgs();
			if (jvmArgs!=null) {
				gradleOp.setJvmArguments(jvmArgs);
			}
			String[] pgmArgs = calculateProgramArgs(projectPrefs.getProgramArgs(), this);
			if (pgmArgs!=null) {
				gradleOp.withArguments(pgmArgs);
			}
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244547344/fstmerge_base_8498043078130627319
			String[] jvmArgs = projectPrefs.getJVMArgs();
			if (jvmArgs!=null) {
				gradleOp.setJvmArguments(jvmArgs);
			}
			String[] pgmArgs = projectPrefs.getProgramArgs();
			if (pgmArgs!=null) {
				gradleOp.withArguments(pgmArgs);
			}
=======
			
			List<String> jvmArguments = new ArrayList<String>();
			jvmArguments.add("-Dorg.springsource.ide.eclipse.gradle.toolingApiRepo=" + getRepo().getAbsolutePath());
			
			// TODO allow the binary version to be controlled via a workspace level property
			jvmArguments.add("-Dorg.springsource.ide.eclipse.gradle.toolingApiEquivalentBinaryVersion=latest.integration");
			
			if(projectPrefs.getJVMArgs() != null)
				jvmArguments.addAll(Arrays.asList(projectPrefs.getJVMArgs()));
			
			gradleOp.setJvmArguments(jvmArguments.toArray(new String[jvmArguments.size()]));
			
			List<String> arguments = new ArrayList<String>();
			arguments.add("--init-script");
			arguments.add(getInitScript().getAbsolutePath());
	
			if(projectPrefs.getProgramArgs() != null)
				arguments.addAll(Arrays.asList(projectPrefs.getProgramArgs()));
			
			gradleOp.withArguments(arguments.toArray(new String[arguments.size()]));
			
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244547344/fstmerge_var2_6733987415526076829
			GradleLaunchConfigurationDelegate.configureOperation(gradleOp, conf);
		} catch (Exception e) {
			//The idea of this catch block is capture 'unsupported' operation exception
			// when running against older version of Gradle. 
			// However, the exception won't be thrown... the exception will only
			// be thrown later on during model build or task execution. 
			// That really doesn't leave us with a practical way to handle the exceptions.
			GradleCore.log(e);
		}
	}

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_f0583_860c2/rev_f0583-860c2/org.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/GradleProject.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244547384/fstmerge_var1_985406463293943877
public EclipseProject getGradleModel() throws FastOperationFailedException, CoreException {
		return mgr.getModel(this, EclipseProject.class);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244547384/fstmerge_base_3572792322904561537
public EclipseProject getGradleModel() throws FastOperationFailedException, CoreException {
		return getGradleModel(EclipseProject.class);
=======
public StsEclipseProject getGradleModel() throws FastOperationFailedException, CoreException {
		return getGradleModel(StsEclipseProject.class);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244547384/fstmerge_var2_5718563589570110069
	}

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_f0583_860c2/rev_f0583-860c2/org.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/GradleProject.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244547419/fstmerge_var1_1558059012723685037
public EclipseProject getGradleModel(IProgressMonitor monitor) throws OperationCanceledException, CoreException {
		return mgr.getModel(this, EclipseProject.class, monitor);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244547419/fstmerge_base_925600656726230374
public EclipseProject getGradleModel(IProgressMonitor monitor) throws OperationCanceledException, CoreException {
		return getGradleModel(EclipseProject.class, monitor);
=======
public StsEclipseProject getGradleModel(IProgressMonitor monitor) throws OperationCanceledException, CoreException {
		return getGradleModel(StsEclipseProject.class, monitor);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244547419/fstmerge_var2_4278077962789817447
	}

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_f0583_860c2/rev_f0583-860c2/org.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/GradleProject.java
Conflict type: LineBasedMCFd
Conflict body: 
public void invalidateGradleModel() {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244547436/fstmerge_var1_4774096735703146534
		//TODO model manager: the old behavior invalidated whole project family by invalidating grouped model provider. 
		// Here it only flushes models for this project and not any of its family members.
		//Is this a problem?
		mgr.invalidate(this);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244547436/fstmerge_base_6085106075440200585
		GradleModelProvider provider = modelProvider;
		if (provider!=null) {
			provider.invalidate();
		}
		publicationsModelProvider = null;
=======
		GradleModelProvider provider = modelProvider;
		if (provider!=null)
			provider.invalidate();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244547436/fstmerge_var2_834549759441427227
	}

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_f0583_860c2/rev_f0583-860c2/org.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/GradleProject.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244547550/fstmerge_var1_6825457126374039081
public ProjectPublications getPublications(IProgressMonitor mon) throws CoreException {
		return mgr.getModel(this,ProjectPublications.class, mon);
	}
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244547550/fstmerge_base_2463526301947167796
public ProjectPublications getPublications(IProgressMonitor mon) throws Exception {
		synchronized (this) {
			if (publicationsModelProvider==null) {
				publicationsModelProvider = new GenericModelProvider<ProjectPublications>(this, ProjectPublications.class);
			}
		}
		return publicationsModelProvider.get(mon);
	}
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244547550/fstmerge_var2_794257883805656082

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_f0583_860c2/rev_f0583-860c2/org.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/GradleProject.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244548661/fstmerge_var1_6574255968136386420
private void initializeIndex(EclipseProject project) {
		lock.writeLock().lock();
		try {
			this.project = project;
			this.initialized = true;
			this.aggregateTasks = Collections.emptyMap();
			this.sortedAggregateTasks = Collections.emptyList();
			this.sortedProjects = Collections.emptyList();
			inverseProjectsMap.clear();
			tasksVisibilityCache.clear();
			while (!trackedProjects.isEmpty()) {
				trackedProjects.pollFirst().removeModelListener(BUILD_INVOCATIONS_LISTENER);
			}
			if (project != null) {
				this.aggregateTasks = new HashMap<String, GradleTask>();
				this.sortedProjects = new ArrayList<GradleProject>();
				collectAggregateTasks(project, this.aggregateTasks, this.sortedProjects);
				
				sortedAggregateTasks = new ArrayList<GradleTask>(aggregateTasks.values());
				Collections.sort(sortedAggregateTasks, TASK_NAME_COMPARATOR);
				
				Collections.sort(this.sortedProjects, PROJECT_PATH_COMPARATOR);
			}
		} finally {
			lock.writeLock().unlock();
		}
	}
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244548661/fstmerge_base_7956043656758045723
private void initializeIndex(EclipseProject project) {
		lock.writeLock().lock();
		try {
			this.project = project;
			this.initialized = true;
			this.aggregateTasks = Collections.emptyMap();
			this.sortedAggregateTasks = Collections.emptyList();
			this.sortedProjects = Collections.emptyList();
			if (project != null) {
				this.aggregateTasks = new HashMap<String, GradleTask>();
				this.sortedProjects = new ArrayList<GradleProject>();
				collectAggregateTasks(project, this.aggregateTasks, this.sortedProjects);
				
				sortedAggregateTasks = new ArrayList<GradleTask>(aggregateTasks.values());
				Collections.sort(sortedAggregateTasks, TASK_NAME_COMPARATOR);
				
				Collections.sort(this.sortedProjects, PROJECT_PATH_COMPARATOR);
			}
		} finally {
			lock.writeLock().unlock();
		}
	}
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244548661/fstmerge_var2_1186997462402029326

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_f0583_860c2/rev_f0583-860c2/org.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/util/GradleProjectIndex.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244548665/fstmerge_var1_7149057476019426604
private void collectAggregateTasks(EclipseProject model, Map<String, GradleTask> tasksMap, List<GradleProject> sortedProjects) {
		inverseProjectsMap.put(model.getGradleProject(), model);
		DomainObjectSet<? extends EclipseProject> projects = model.getChildren();
		for (EclipseProject p : projects) {
			collectAggregateTasks(p, tasksMap, sortedProjects);
		}
		GradleProject project = model.getGradleProject();
		sortedProjects.add(project);
		DomainObjectSet<? extends GradleTask> tasks = project.getTasks();
		for (GradleTask t : tasks) {
			tasksMap.put(t.getName(), t);
		}	
	}
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244548665/fstmerge_base_8773592932504066424
private static void collectAggregateTasks(EclipseProject model, Map<String, GradleTask> tasksMap, List<GradleProject> sortedProjects) {
		DomainObjectSet<? extends EclipseProject> projects = model.getChildren();
		for (EclipseProject p : projects) {
			collectAggregateTasks(p, tasksMap, sortedProjects);
		}
		GradleProject project = model.getGradleProject();
		sortedProjects.add(project);
		DomainObjectSet<? extends GradleTask> tasks = project.getTasks();
		for (GradleTask t : tasks) {
			tasksMap.put(t.getName(), t);
		}	
	}
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244548665/fstmerge_var2_7132019298002376535

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_f0583_860c2/rev_f0583-860c2/org.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/util/GradleProjectIndex.java
Conflict type: LineBasedMCFd
Conflict body: 
public Image getColumnImage(Object element, int columnIndex) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244556550/fstmerge_var1_5131369174189860212
		if (columnIndex == 0) {
			if (element instanceof EclipseProject) {
				return projectLabelProvider.getColumnImage(element, columnIndex);
			} else if (element instanceof Launchable) {
				Launchable task = (Launchable) element;
				return task.isPublic() ? GradleUI.getDefault().getImageRegistry()
						.get(GradleUI.IMAGE_PUBLIC_TASK) : GradleUI.getDefault()
						.getImageRegistry().get(GradleUI.IMAGE_INTERNAL_TASK);
			}
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244556550/fstmerge_base_375740045676447511
		if (element instanceof EclipseProject) {
			return projectLabelProvider.getColumnImage(element, columnIndex);
		} else if (element instanceof Task) {
			return columnIndex==0? GradleUI.getDefault().getImageRegistry().get(GradleUI.IMAGE_TARGET) : null;
=======
		if (element instanceof StsEclipseProject) {
			return projectLabelProvider.getColumnImage(element, columnIndex);
		} else if (element instanceof Task) {
			return columnIndex==0? GradleUI.getDefault().getImageRegistry().get(GradleUI.IMAGE_TARGET) : null;
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244556550/fstmerge_var2_4102856696453998259
		}
		return null;
	}

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_f0583_860c2/rev_f0583-860c2/org.springsource.ide.eclipse.gradle.ui.taskview/src/org/springsource/ide/eclipse/gradle/ui/taskview/TaskLabelProvider.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_35ff5_6ce79/rev_35ff5-6ce79.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_5ba42_16ac9/rev_5ba42-16ac9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_bb0c2_d9ab2/rev_bb0c2-d9ab2.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_7b302_b8a3d/rev_7b302-b8a3d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_39d76_593ee/rev_39d76-593ee.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_f7b23_51e57/rev_f7b23-51e57.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_7992a_21eb3/rev_7992a-21eb3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_06e4a_f7b23/rev_06e4a-f7b23.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_f35e7_a1e2c/rev_f35e7-a1e2c.revisions
Conflict type: LineBasedMCFd
Conflict body: 
public synchronized Job requestUpdate(boolean popupProgress) {
		if (job!=null) {
			return job; // A job is already scheduled. Don't schedule another job!
		}

		GradleRunnable runnable = new GradleRunnable("Update Gradle Classpath for "+project.getName()) {
			
			@Override
			public void doit(IProgressMonitor monitor) throws Exception {
				monitor.beginTask("Initializing Gradle Classpath Container", IProgressMonitor.UNKNOWN);
				try {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244938682/fstmerge_var1_7352850113389049330
					project.getGradleModel(monitor); // Forces initialisation of the model.
					JobUtil.withRule(JobUtil.buildRule(), monitor, 1, new GradleRunnable("Set classpath "+project.getDisplayName()) {
						public void doit(IProgressMonitor mon) throws Exception {
							notifyJDT();
						}
					});
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244938682/fstmerge_base_216856092866048711
					project.getGradleModel(monitor); // Forces initialisation of the model.
					notifyJDT();
=======
					ClassPathModel.getClassPathModel(project, monitor); // Forces initialisation of the model.
					notifyJDT();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1430244938682/fstmerge_var2_2070430855410481398
				} catch (Exception e) {
					throw ExceptionUtil.coreException(e);
				} finally {
					monitor.done();
					job = null;
				}
			}
		};
		job = popupProgress ? JobUtil.userJob(runnable) : JobUtil.schedule(JobUtil.NO_RULE, runnable);
		return job;
	}

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_f35e7_a1e2c/rev_f35e7-a1e2c/org.springsource.ide.eclipse.gradle.core/src/org/springsource/ide/eclipse/gradle/core/classpathcontainer/GradleClassPathContainer.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_9c6ff_f35e7/rev_9c6ff-f35e7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_9b37f_41bfa/rev_9b37f-41bfa.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_c08a6_71e7e/rev_c08a6-71e7e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_44cf9_a31ba/rev_44cf9-a31ba.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/eclipse-integration-gradle/revisions/rev_65beb_221d3/rev_65beb-221d3.revisions