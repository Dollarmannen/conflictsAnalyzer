=========================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_73e81_8297f/rev_73e81-8297f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_687e5_33ae0/rev_687e5-33ae0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_dabb3_d38f7/rev_dabb3-d38f7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7ba1b_ab7b9/rev_7ba1b-ab7b9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_02c8a_d3244/rev_02c8a-d3244.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_15e4a_3f9a6/rev_15e4a-3f9a6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f8644_44788/rev_f8644-44788.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ea0ed_ba87a/rev_ea0ed-ba87a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c59e4_fb0be/rev_c59e4-fb0be.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e1ab1_a0432/rev_e1ab1-a0432.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_dee46_2ae2e/rev_dee46-2ae2e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b52d7_1ee09/rev_b52d7-1ee09.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_12eec_0594b/rev_12eec-0594b.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271121150/fstmerge_var1_2237073776443976104
public ArgumentListBuilder add(String a) {
        return add(a,false);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271121150/fstmerge_base_954527525835218480
public ArgumentListBuilder add(String a) {
        if(a!=null)
            args.add(a);
        return this;
=======
public ArgumentListBuilder add(String... args) {
        for (String arg : args) {
            add(arg);
        }
        return this;
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271121150/fstmerge_var2_8813852393863024745
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_12eec_0594b/rev_12eec-0594b/core/src/main/java/hudson/util/ArgumentListBuilder.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d4882_7da58/rev_d4882-7da58.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271305570/fstmerge_var1_1397572809337751834
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271305570/fstmerge_base_5839119046325815321
@SuppressWarnings({"unchecked"})
    public <T extends TopLevelItem> T copy(T src, String name) throws IOException {
        T result = (T)createProject(src.getDescriptor(),name);

        // copy config
        Util.copyFile(Items.getConfigFile(src).getFile(),Items.getConfigFile(result).getFile());

        // reload from the new config
        result = (T)Items.load(this,result.getRootDir());
        result.onCopiedFrom(src);
        items.put(name,result);

        for (ItemListener l : ItemListener.all())
            l.onCreated(result);

        return result;
    }
=======
public <T extends AbstractProject<?,?>> T copy(T src, String name) throws IOException {
        return (T)copy((TopLevelItem)src,name);
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271305570/fstmerge_var2_3180593157083748884

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d4882_7da58/rev_d4882-7da58/core/src/main/java/hudson/model/Hudson.java
Conflict type: LineBasedMCFd
Conflict body: 
public static ProcessTreeKiller get() {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271310820/fstmerge_var1_4232230313085250690
        return new ProcessTreeKiller();
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271310820/fstmerge_base_1529602925680025439
        if(!enabled)
            return DEFAULT;

        try {
            if(File.pathSeparatorChar==';')
            return new Windows();

            String os = Util.fixNull(System.getProperty("os.name"));
            if(os.equals("Linux"))
            return new Linux();
            if(os.equals("SunOS"))
            return new Solaris();
            if(os.equals("Mac OS X"))
                return new Darwin();
        } catch (LinkageError e) {
            LOGGER.warning("Failed to load winp. Reverting to the default");
            enabled = false;
        }

        return DEFAULT;
=======
        if(!enabled)
            return DEFAULT;

        try {
            if(File.pathSeparatorChar==';')
                return new Windows();

            String os = Util.fixNull(System.getProperty("os.name"));
            if(os.equals("Linux"))
                return new Linux();
            if(os.equals("SunOS"))
                return new Solaris();
            if(os.equals("Mac OS X"))
                return new Darwin();
        } catch (LinkageError e) {
            LOGGER.log(Level.WARNING,"Failed to load winp. Reverting to the default",e);
            enabled = false;
        }

        return DEFAULT;
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271310820/fstmerge_var2_531433044438316768
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d4882_7da58/rev_d4882-7da58/core/src/main/java/hudson/util/ProcessTreeKiller.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271312193/fstmerge_var1_7650990379244949773
public ArgumentListBuilder add(String a) {
        return add(a,false);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271312193/fstmerge_base_79470296332293959
public ArgumentListBuilder add(String a) {
        if(a!=null)
            args.add(a);
        return this;
=======
public ArgumentListBuilder add(String... args) {
        for (String arg : args) {
            add(arg);
        }
        return this;
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271312193/fstmerge_var2_8224991788991374268
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d4882_7da58/rev_d4882-7da58/core/src/main/java/hudson/util/ArgumentListBuilder.java
Conflict type: LineBasedMCFd
Conflict body: 
public Void invoke(File d, VirtualChannel channel) throws IOException {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271319862/fstmerge_var1_6680126954939312741
            if(!Functions.isWindows())
                process(d);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271319862/fstmerge_base_7056478587008565188
            process(d);
=======
            if(!Hudson.isWindows())
                process(d);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271319862/fstmerge_var2_9154439202004893790
            return null;
        }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d4882_7da58/rev_d4882-7da58/core/src/main/java/hudson/tools/ZipExtractionInstaller.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271319866/fstmerge_base_4153251735488859302
private void process(File f) {
=======
@IgnoreJRERequirement
        private void process(File f) {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271319866/fstmerge_var2_7130103147788890139
            if (f.isFile()) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271319866/fstmerge_var1_4180817759741037378
                if(Functions.isMustangOrAbove())
                    f.setExecutable(true, false);
                else {
                    try {
                        GNUCLibrary.LIBC.chmod(f.getAbsolutePath(),0755);
                    } catch (LinkageError e) {
                        // if JNA is unavailable, fall back.
                        // we still prefer to try JNA first as PosixAPI supports even smaller platforms.
                        PosixAPI.get().chmod(f.getAbsolutePath(),0755);
                    }
                }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271319866/fstmerge_base_4153251735488859302
                f.setExecutable(true, false); // XXX JDK 6-specific
=======
                if(Functions.isMustangOrAbove())
                    f.setExecutable(true, false);
                else
                    GNUCLibrary.LIBC.chmod(f.getAbsolutePath(),0755);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271319866/fstmerge_var2_7130103147788890139
            } else {
                File[] kids = f.listFiles();
                if (kids != null) {
                    for (File kid : kids) {
                        process(kid);
                    }
                }
            }
        }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d4882_7da58/rev_d4882-7da58/core/src/main/java/hudson/tools/ZipExtractionInstaller.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271321931/fstmerge_var1_4876554246393811050
@Bug(3497)
    public void testSiteBuild() throws Exception {
        MavenModuleSet project = createSimpleProject();
        project.setGoals("site");

        buildAndAssertSuccess(project);

        // this should succeed
        HudsonTestCase.WebClient wc = new WebClient();
        wc.getPage(project,"site");
        try {
            wc.getPage(project,"site/no-such-file");
            fail("should have resulted in 404");
        } catch (FailingHttpStatusCodeException e) {
            assertEquals(404,e.getStatusCode());
        }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271321931/fstmerge_base_5790775952045222652
@Bug(2154)
    public void testSiteBuild() throws Exception {
        MavenModuleSet project = createSimpleProject();
        project.setGoals("site");

        assertBuildStatusSuccess(project.scheduleBuild2(0).get());
=======
@Bug(3497)
    public void testSiteBuild() throws Exception {
        MavenModuleSet project = createSimpleProject();
        project.setGoals("site");

        assertBuildStatusSuccess(project.scheduleBuild2(0).get());

        // this should succeed
        HudsonTestCase.WebClient wc = new WebClient();
        wc.getPage(project,"site");
        try {
            wc.getPage(project,"site/no-such-file");
            fail("should have resulted in 404");
        } catch (FailingHttpStatusCodeException e) {
            assertEquals(404,e.getStatusCode());
        }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271321931/fstmerge_var2_885119100646833433
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d4882_7da58/rev_d4882-7da58/test/src/test/java/hudson/maven/MavenProjectTest.java
Conflict type: LineBasedMCFd
Conflict body: 
public static MavenEmbedder createEmbedder(TaskListener listener, File mavenHome, String profiles, Properties systemProperties) throws MavenEmbedderException, IOException {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271323615/fstmerge_var1_6696724603152659846
        return createEmbedder(listener,mavenHome,profiles,systemProperties,null);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271323615/fstmerge_base_6658615580643281209
        MavenEmbedder maven = new MavenEmbedder(mavenHome);

        ClassLoader cl = MavenUtil.class.getClassLoader();
        maven.setClassLoader(new MaskingClassLoader(cl));
        EmbedderLoggerImpl logger = new EmbedderLoggerImpl(listener);
        if(debugMavenEmbedder)  logger.setThreshold(MavenEmbedderLogger.LEVEL_DEBUG);
        maven.setLogger(logger);

        // make sure ~/.m2 exists to avoid http://www.nabble.com/BUG-Report-tf3401736.html
        File m2Home = new File(MavenEmbedder.userHome, ".m2");
        m2Home.mkdirs();
        if(!m2Home.exists())
            throw new AbortException("Failed to create "+m2Home+
                "\nSee https://hudson.dev.java.net/cannot-create-.m2.html");

        maven.setProfiles(profiles);
        maven.setSystemProperties(systemProperties);
        maven.start();

        return maven;
=======
        MavenEmbedder maven = new MavenEmbedder(mavenHome);

        ClassLoader cl = MavenUtil.class.getClassLoader();
        maven.setClassLoader(new MaskingClassLoader(cl));
        EmbedderLoggerImpl logger = new EmbedderLoggerImpl(listener);
        if(debugMavenEmbedder)  logger.setThreshold(MavenEmbedderLogger.LEVEL_DEBUG);
        maven.setLogger(logger);

        {
            Enumeration<URL> e = cl.getResources("META-INF/plexus/components.xml");
            while (e.hasMoreElements()) {
                URL url = e.nextElement();
                LOGGER.fine("components.xml from "+url);
            }
        }
        // make sure ~/.m2 exists to avoid http://www.nabble.com/BUG-Report-tf3401736.html
        File m2Home = new File(MavenEmbedder.userHome, ".m2");
        m2Home.mkdirs();
        if(!m2Home.exists())
            throw new AbortException("Failed to create "+m2Home+
                "\nSee https://hudson.dev.java.net/cannot-create-.m2.html");

        maven.setProfiles(profiles);
        maven.setSystemProperties(systemProperties);
        maven.start();

        return maven;
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271323615/fstmerge_var2_3619326277402356278
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d4882_7da58/rev_d4882-7da58/maven-plugin/src/main/java/hudson/maven/MavenUtil.java
Conflict type: LineBasedMCFd
Conflict body: 
public Enumeration<URL> getResources(String name) throws IOException {
            final Enumeration<URL> e = super.getResources(name);
            return new Enumeration<URL>() {
                URL next;

                public boolean hasMoreElements() {
                    fetch();
                    return next!=null;
                }

                public URL nextElement() {
                    fetch();
                    URL r = next;
                    next = null;
                    return r;
                }

                private void fetch() {
                    while(next==null && e.hasMoreElements()) {
                        next = e.nextElement();
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271323629/fstmerge_base_8072925810271986809
                        if(next.toExternalForm().contains("maven-plugin-tools-api"))
=======
                        if(shouldBeIgnored(next))
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271323629/fstmerge_var2_1291133846315256808
                            next = null;
                    }
                }
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271323629/fstmerge_var1_3570446620563434636

                private boolean shouldBeIgnored(URL url) {
                    String s = url.toExternalForm();
                    if(s.contains("maven-plugin-tools-api"))
                        return true;
                    // because RemoteClassLoader mangles the path, we can't check for plexus/components.xml,
                    // which would have otherwise made the test cheaper.
                    if(s.endsWith("components.xml")) {
                        BufferedReader r=null;
                        try {
                            // is this designated for interception purpose? If so, don't load them in the MavenEmbedder
                            // earlier I tried to use a marker file in the same directory, but that won't work
                            r = new BufferedReader(new InputStreamReader(url.openStream()));
                            for (int i=0; i<2; i++) {
                                String l = r.readLine();
                                if(l!=null && l.contains("MAVEN-INTERCEPTION-TO-BE-MASKED"))
                                    return true;
                            }
                        } catch (IOException _) {
                            // let whoever requesting this resource re-discover an error and report it
                        } finally {
                            IOUtils.closeQuietly(r);
                        }
                    }
                    return false;
                }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271323629/fstmerge_base_8072925810271986809
=======

                private boolean shouldBeIgnored(URL url) {
                    String s = url.toExternalForm();
                    if(s.contains("maven-plugin-tools-api"))
                        return true;
                    if(s.endsWith("plexus/components.xml")) {
                        try {
                            // is this designated for interception purpose? If so, don't load them in the MavenEmbedder
                            IOUtils.closeQuietly(new URL(s + ".interception").openStream());
                            return true;
                        } catch (IOException _) {
                            // no such resource exists
                        }
                    }
                    return false;
                }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271323629/fstmerge_var2_1291133846315256808
            };
        }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d4882_7da58/rev_d4882-7da58/maven-plugin/src/main/java/hudson/maven/MavenUtil.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_607ea_2f7f5/rev_607ea-2f7f5.revisions
Conflict type: LineBasedMCFd
Conflict body: 
public void encodeTo(OutputStream out) throws IOException {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271521342/fstmerge_var1_8793861430219295580
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271521342/fstmerge_base_7800442537422173751
        ByteArrayOutputStream buf = new ByteArrayOutputStream();
        ObjectOutputStream oos = new ObjectOutputStream(new GZIPOutputStream(buf));
        oos.writeObject(this);
        oos.close();

        ByteArrayOutputStream buf2 = new ByteArrayOutputStream();

        DataOutputStream dos = new DataOutputStream(new Base64OutputStream(buf2,true,-1,null));
        dos.write(PREAMBLE);
        dos.writeInt(buf.size());
        buf.writeTo(dos);
        dos.write(POSTAMBLE);
        dos.close();

=======
        ByteArrayOutputStream buf = new ByteArrayOutputStream();
        ObjectOutputStream oos = new ObjectOutputStream(new GZIPOutputStream(buf));
        oos.writeObject(this);
        oos.close();

        ByteArrayOutputStream buf2 = new ByteArrayOutputStream();
        DataOutputStream dos = new DataOutputStream(new Base64OutputStream(buf2,true,-1,null));
        dos.writeInt(buf.size());
        buf.writeTo(dos);
        dos.close();

>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271521342/fstmerge_var2_1595424234424026311
        // atomically write to the final output, to minimize the chance of something else getting in between the output.
        // even with this, it is still technically possible to get such a mix-up to occur (for example,
        // if Java program is reading stdout/stderr separately and copying them into the same final stream.)
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271521342/fstmerge_var1_8793861430219295580
        out.write(encodeToBytes().toByteArray());
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271521342/fstmerge_base_7800442537422173751
        out.write(buf2.toByteArray());
=======
        byte[] buf3 = buf2.toByteArray(),
               buf4 = new byte[PREAMBLE.length + buf3.length + POSTAMBLE.length];
        System.arraycopy(PREAMBLE, 0, buf4, 0, PREAMBLE.length);
        System.arraycopy(buf3, 0, buf4, PREAMBLE.length, buf3.length);
        System.arraycopy(POSTAMBLE, 0, buf4, PREAMBLE.length + buf3.length, POSTAMBLE.length);
        out.write(buf4);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271521342/fstmerge_var2_1595424234424026311
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_607ea_2f7f5/rev_607ea-2f7f5/core/src/main/java/hudson/console/ConsoleNote.java
Conflict type: LineBasedMCFd
Conflict body: 
public void encodeTo(Writer out) throws IOException {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271521346/fstmerge_var1_1910650918186186166
        out.write(encodeToBytes().toString());
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271521346/fstmerge_base_2789855225968713006
        out.write(PREAMBLE_STR);
        ByteArrayOutputStream buf = new ByteArrayOutputStream();
        ObjectOutputStream oos = new ObjectOutputStream(new GZIPOutputStream(buf));
        oos.writeObject(this);
        oos.close();

        ByteArrayOutputStream encoded = new ByteArrayOutputStream();
        DataOutputStream dos = new DataOutputStream(new Base64OutputStream(encoded,true,-1,null));
        dos.writeInt(buf.size());
        buf.writeTo(dos);
        dos.close();

        out.write(encoded.toString());

        out.write(POSTAMBLE_STR);
=======
        ByteArrayOutputStream buf = new ByteArrayOutputStream();
        ObjectOutputStream oos = new ObjectOutputStream(new GZIPOutputStream(buf));
        oos.writeObject(this);
        oos.close();

        ByteArrayOutputStream encoded = new ByteArrayOutputStream();
        DataOutputStream dos = new DataOutputStream(new Base64OutputStream(encoded,true,-1,null));
        dos.writeInt(buf.size());
        buf.writeTo(dos);
        dos.close();

        out.write(PREAMBLE_STR + encoded.toString() + POSTAMBLE_STR);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271521346/fstmerge_var2_6482811001264105454
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_607ea_2f7f5/rev_607ea-2f7f5/core/src/main/java/hudson/console/ConsoleNote.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_55b7d_494ac/rev_55b7d-494ac.revisions
Conflict type: LineBasedMCFd
Conflict body: 
public EnvVars getEnvironment(TaskListener log) throws IOException, InterruptedException {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271711519/fstmerge_var1_361300627223008274
        Computer currentComputer = Computer.currentComputer();
        EnvVars env = new EnvVars();
        if (currentComputer != null) {
        	// currentComputer == null when this is called outside a running build
        	env.overrideAll(currentComputer.getEnvironment());;
        }
        env.overrideAll(getCharacteristicEnvVars());
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271711519/fstmerge_base_1681274203840527642
        EnvVars env = Computer.currentComputer().getEnvironment().overrideAll(getCharacteristicEnvVars());
=======
        EnvVars env = getCharacteristicEnvVars();
        Computer c = Computer.currentComputer();
        if (c!=null)
            env = c.getEnvironment().overrideAll(env);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417271711519/fstmerge_var2_5338787701712156551
        String rootUrl = Hudson.getInstance().getRootUrl();
        if(rootUrl!=null) {
            env.put("HUDSON_URL", rootUrl);
            env.put("BUILD_URL", rootUrl+getUrl());
            env.put("JOB_URL", rootUrl+getParent().getUrl());
        }
        
        if(!env.containsKey("HUDSON_HOME"))
            env.put("HUDSON_HOME", Hudson.getInstance().getRootDir().getPath() );

        Thread t = Thread.currentThread();
        if (t instanceof Executor) {
            Executor e = (Executor) t;
            env.put("EXECUTOR_NUMBER",String.valueOf(e.getNumber()));
            env.put("NODE_NAME",e.getOwner().getName());
            Node n = e.getOwner().getNode();
            if (n!=null)
                env.put("NODE_LABELS",Util.join(n.getAssignedLabels()," "));
        }

        return env;
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_55b7d_494ac/rev_55b7d-494ac/core/src/main/java/hudson/model/Run.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_99cca_ab80d/rev_99cca-ab80d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e605d_6e011/rev_e605d-6e011.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f3b00_06cec/rev_f3b00-06cec.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_77600_73395/rev_77600-73395.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417272582617/fstmerge_base_8948682273754377216
private void includeCulpritsOf(AbstractProject upstreamBuild, AbstractBuild<?, ?> currentBuild, BuildListener listener, Set<InternetAddress> recipientList) throws AddressException {
        AbstractBuild<?,?> pb = currentBuild.getPreviousBuild();
        AbstractBuild<?,?> ub = currentBuild.getUpstreamRelationshipBuild(upstreamBuild);
        AbstractBuild<?,?> upb = pb!=null ? pb.getUpstreamRelationshipBuild(upstreamBuild) : null;
        if(pb==null && ub==null && upb==null) {
            listener.getLogger().println("Unable to compute the changesets in "+ upstreamBuild +". Is the fingerprint configured?");
=======
private void includeCulpritsOf(AbstractProject upstreamProject, AbstractBuild<?, ?> currentBuild, BuildListener listener, Set<InternetAddress> recipientList) throws AddressException {
        AbstractBuild<?,?> upstreamBuild = currentBuild.getUpstreamRelationshipBuild(upstreamProject);
        AbstractBuild<?,?> previousBuild = currentBuild.getPreviousBuild();
        AbstractBuild<?,?> previousBuildUpstreamBuild = previousBuild!=null ? previousBuild.getUpstreamRelationshipBuild(upstreamProject) : null;
        if(previousBuild==null && upstreamBuild==null && previousBuildUpstreamBuild==null) {
            listener.getLogger().println("Unable to compute the changesets in "+ upstreamProject +". Is the fingerprint configured?");
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417272582617/fstmerge_var2_6200375890549058248
            return;
        }
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417272582617/fstmerge_base_8948682273754377216
        if(pb==null || ub==null || upb==null) {
            listener.getLogger().println("Unable to compute the changesets in "+ upstreamBuild);
=======
        if(previousBuild==null || upstreamBuild==null || previousBuildUpstreamBuild==null) {
            listener.getLogger().println("Unable to compute the changesets in "+ upstreamProject);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417272582617/fstmerge_var2_6200375890549058248
            return;
        }
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417272582617/fstmerge_var1_2613749127899445075
        AbstractBuild<?,?> b=previousBuildUpstreamBuild;
        do {
            recipientList.addAll( buildCulpritList( listener, b.getCulprits() ) );
            b = b.getNextBuild();
        } while ( b != upstreamBuild && b != null );
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417272582617/fstmerge_base_8948682273754377216
        for( AbstractBuild<?,?> b=upb; b!=ub && b!=null; b=b.getNextBuild())
            recipientList.addAll(buildCulpritList(listener,b.getCulprits()));
=======
        AbstractBuild<?,?> b=previousBuildUpstreamBuild;
        do {
            recipientList.addAll(buildCulpritList(listener,b.getCulprits()));
            b = b.getNextBuild();
        } while ( b != upstreamBuild && b != null );
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417272582617/fstmerge_var2_6200375890549058248
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_77600_73395/rev_77600-73395/core/src/main/java/hudson/tasks/MailSender.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_56ebe_bdb4d/rev_56ebe-bdb4d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9a45f_6be06/rev_9a45f-6be06.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_10e9f_e78bd/rev_10e9f-e78bd.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_10e9f_6629e/rev_10e9f-6629e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5d1ea_2e798/rev_5d1ea-2e798.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_89f15_fb38f/rev_89f15-fb38f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3d5d5_2d2f3/rev_3d5d5-2d2f3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_fa228_b57b0/rev_fa228-b57b0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_90dbe_e64b6/rev_90dbe-e64b6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4b9fb_fc01d/rev_4b9fb-fc01d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7cf3f_226b3/rev_7cf3f-226b3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c4ad9_535e9/rev_c4ad9-535e9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_18f4a_c85e6/rev_18f4a-c85e6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5465f_b4bba/rev_5465f-b4bba.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_53e68_1b6b8/rev_53e68-1b6b8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6cd23_81736/rev_6cd23-81736.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6643d_350f5/rev_6643d-350f5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ce362_3f72e/rev_ce362-3f72e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a09a7_0a3f6/rev_a09a7-0a3f6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ec84e_fcbc0/rev_ec84e-fcbc0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e9fe9_b97ad/rev_e9fe9-b97ad.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4895d_89d0d/rev_4895d-89d0d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1a9f3_62cb0/rev_1a9f3-62cb0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4470c_c490e/rev_4470c-c490e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_de920_0f4a7/rev_de920-0f4a7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1f2ba_4add6/rev_1f2ba-4add6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_872c6_f9255/rev_872c6-f9255.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5b8f4_52090/rev_5b8f4-52090.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_92be0_32a34/rev_92be0-32a34.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_64b8e_fbb54/rev_64b8e-fbb54.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9ef8a_8a3d9/rev_9ef8a-8a3d9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f0ed3_46f2f/rev_f0ed3-46f2f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_945d0_2951e/rev_945d0-2951e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0a0f0_84115/rev_0a0f0-84115.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cd293_dc7e0/rev_cd293-dc7e0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0ffa0_237db/rev_0ffa0-237db.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b167b_d14ca/rev_b167b-d14ca.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_31b9a_d44ee/rev_31b9a-d44ee.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_46631_3dad9/rev_46631-3dad9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ec3fb_31a76/rev_ec3fb-31a76.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5de5b_5c91e/rev_5de5b-5c91e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5150e_8fdbe/rev_5150e-8fdbe.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c3e7b_020a4/rev_c3e7b-020a4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a41c8_c3e7b/rev_a41c8-c3e7b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_28720_657c4/rev_28720-657c4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a8892_a70f6/rev_a8892-a70f6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f40b4_a8892/rev_f40b4-a8892.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c628b_46961/rev_c628b-46961.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f134b_91f79/rev_f134b-91f79.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_329a0_fd93c/rev_329a0-fd93c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_36d9b_6c521/rev_36d9b-6c521.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_85a8d_9005e/rev_85a8d-9005e.revisions
Conflict type: LineBasedMCFd
Conflict body: 
public void doAjax( StaplerRequest req, StaplerResponse rsp,
                  @Header("n") String n ) throws IOException, ServletException {

<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417284739035/fstmerge_var1_2247266111059444521
        if (n==null)    throw HttpResponses.error(SC_BAD_REQUEST,new Exception("Missing the 'n' HTTP header"));

||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417284739035/fstmerge_base_4188034158853749791
=======
        // FIXME n can be null if the client behave incorrectly. We should fail gracefully (404?) instead of NPEing

>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417284739035/fstmerge_var2_6492339845526010190
        rsp.setContentType("text/html;charset=UTF-8");

        // pick up builds to send back
        List<T> items = new ArrayList<T>();

        String nn=null; // we'll compute next n here

        // list up all builds >=n.
        for (T t : baseList) {
            if(adapter.compare(t,n)>=0) {
                items.add(t);
                if(adapter.isBuilding(t))
                    nn = adapter.getKey(t); // the next fetch should start from youngest build in progress
            } else
                break;
        }

        if (nn==null) {
            if (items.isEmpty()) {
                // nothing to report back. next fetch should retry the same 'n'
                nn=n;
            } else {
                // every record fetched this time is frozen. next fetch should start from the next build
                nn=adapter.getNextKey(adapter.getKey(items.get(0)));
            }
        }

        baseList = items;

        rsp.setHeader("n",nn);
        firstTransientBuildKey = nn; // all builds >= nn should be marked transient

        req.getView(this,"ajaxBuildHistory.jelly").forward(req,rsp);
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_85a8d_9005e/rev_85a8d-9005e/core/src/main/java/hudson/widgets/HistoryWidget.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_63f67_1d650/rev_63f67-1d650.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e7d0b_8e692/rev_e7d0b-8e692.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_97681_d1d81/rev_97681-d1d81.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f6bd1_e0879/rev_f6bd1-e0879.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e0879_bf8f2/rev_e0879-bf8f2.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9c965_fa9c5/rev_9c965-fa9c5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_fa9c5_997bf/rev_fa9c5-997bf.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a402e_99bf8/rev_a402e-99bf8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_35495_028e7/rev_35495-028e7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_042a4_028e7/rev_042a4-028e7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0c196_ec382/rev_0c196-ec382.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_53a26_c3077/rev_53a26-c3077.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9a629_6e8e2/rev_9a629-6e8e2.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f1884_f757e/rev_f1884-f757e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6938d_cc40a/rev_6938d-cc40a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b7a6c_88969/rev_b7a6c-88969.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6d966_8de9d/rev_6d966-8de9d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_49ca4_c1284/rev_49ca4-c1284.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8eea7_a95c3/rev_8eea7-a95c3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a545a_ebf41/rev_a545a-ebf41.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1d1c1_be543/rev_1d1c1-be543.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_077aa_5e86a/rev_077aa-5e86a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6c793_1b67e/rev_6c793-1b67e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_24460_f9349/rev_24460-f9349.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_543dc_e71bf/rev_543dc-e71bf.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0be28_3a97d/rev_0be28-3a97d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6f636_9f09e/rev_6f636-9f09e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ed44c_8045c/rev_ed44c-8045c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ef3fd_ea990/rev_ef3fd-ea990.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_70d10_cf87c/rev_70d10-cf87c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a9252_51beb/rev_a9252-51beb.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_32456_5e300/rev_32456-5e300.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7d46b_836fc/rev_7d46b-836fc.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cbe26_18eb9/rev_cbe26-18eb9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c3fc0_4a6b5/rev_c3fc0-4a6b5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_803d1_5c4cc/rev_803d1-5c4cc.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d6a95_3e0b5/rev_d6a95-3e0b5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_95158_c5bc4/rev_95158-c5bc4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_283cb_81d51/rev_283cb-81d51.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c9d54_9e788/rev_c9d54-9e788.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_04584_dfead/rev_04584-dfead.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3f811_20661/rev_3f811-20661.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_df0b5_29dc1/rev_df0b5-29dc1.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4b635_ea345/rev_4b635-ea345.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_33b79_d5c28/rev_33b79-d5c28.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c2191_04584/rev_c2191-04584.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c2191_b22a0/rev_c2191-b22a0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_174ad_8403e/rev_174ad-8403e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c2191_eadb7/rev_c2191-eadb7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_39eb8_af04d/rev_39eb8-af04d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cf7bc_2b9b4/rev_cf7bc-2b9b4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_40983_51562/rev_40983-51562.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d8096_cd083/rev_d8096-cd083.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_55deb_92e7a/rev_55deb-92e7a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4129a_e9992/rev_4129a-e9992.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4129a_afa9e/rev_4129a-afa9e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_55deb_049c0/rev_55deb-049c0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_205fe_9194d/rev_205fe-9194d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_97f1d_4129a/rev_97f1d-4129a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_782f7_ff05a/rev_782f7-ff05a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_bafc4_821bf/rev_bafc4-821bf.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_205fe_bafc4/rev_205fe-bafc4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ff05a_6b3b5/rev_ff05a-6b3b5.revisions
Conflict type: LineBasedMCFd
Conflict body: 
protected ServletContext createWebServer() throws Exception {
        server = new Server();

        WebAppContext context = new WebAppContext(WarExploder.getExplodedDir().getPath(), contextPath);
        context.setClassLoader(getClass().getClassLoader());
        context.setConfigurations(new Configuration[]{new WebXmlConfiguration(),new NoListenerConfiguration()});
        server.setHandler(context);
        context.setMimeTypes(MIME_TYPES);

        SocketConnector connector = new SocketConnector();
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417300961769/fstmerge_var1_8739294784334696152
        server.setThreadPool(new ThreadPoolImpl(new ThreadPoolExecutor(1, 10, 10L, TimeUnit.SECONDS, new SynchronousQueue<Runnable>(),new ThreadFactory() {
            public Thread newThread(Runnable r) {
                Thread t = new Thread(r);
                t.setName("Jetty Thread Pool");
                return t;
            }
        })));
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417300961769/fstmerge_base_6475092127402903161
=======
        connector.setHeaderBufferSize(12*1024); // use a bigger buffer as Stapler traces can get pretty large on deeply nested URL

>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417300961769/fstmerge_var2_4597593003241247119
        server.addConnector(connector);
        server.addUserRealm(configureUserRealm());
        server.start();

        localPort = connector.getLocalPort();

        return context.getServletContext();
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ff05a_6b3b5/rev_ff05a-6b3b5/test/src/main/java/org/jvnet/hudson/test/HudsonTestCase.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_782f7_5bbc7/rev_782f7-5bbc7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_55d1f_427a8/rev_55d1f-427a8.revisions
Conflict type: LineBasedMCFd
Conflict body: 
protected ServletContext createWebServer() throws Exception {
        server = new Server();

        WebAppContext context = new WebAppContext(WarExploder.getExplodedDir().getPath(), contextPath);
        context.setClassLoader(getClass().getClassLoader());
        context.setConfigurations(new Configuration[]{new WebXmlConfiguration(),new NoListenerConfiguration()});
        server.setHandler(context);
        context.setMimeTypes(MIME_TYPES);

        SocketConnector connector = new SocketConnector();
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417301493391/fstmerge_var1_3456473315154756140
        server.setThreadPool(new ThreadPoolImpl(new ThreadPoolExecutor(1, 10, 10L, TimeUnit.SECONDS, new SynchronousQueue<Runnable>(),new ThreadFactory() {
            public Thread newThread(Runnable r) {
                Thread t = new Thread(r);
                t.setName("Jetty Thread Pool");
                return t;
            }
        })));
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417301493391/fstmerge_base_7643366641528163065
=======
        connector.setHeaderBufferSize(12*1024); // use a bigger buffer as Stapler traces can get pretty large on deeply nested URL

        server.setThreadPool(new ThreadPoolImpl(new ThreadPoolExecutor(1, 10, 10L, TimeUnit.SECONDS, new SynchronousQueue<Runnable>(),new ThreadFactory() {
            public Thread newThread(Runnable r) {
                Thread t = new Thread(r);
                t.setName("Jetty Thread Pool");
                return t;
            }
        })));
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417301493391/fstmerge_var2_3493001279209883971
        server.addConnector(connector);
        server.addUserRealm(configureUserRealm());
        server.start();

        localPort = connector.getLocalPort();

        return context.getServletContext();
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_55d1f_427a8/rev_55d1f-427a8/test/src/main/java/org/jvnet/hudson/test/HudsonTestCase.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ad343_995f4/rev_ad343-995f4.revisions
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417301739674/fstmerge_var1_8936766341441415393
public Node reconfigure(final StaplerRequest req, JSONObject form) throws FormException {
        if (form==null)     return null;

        final JSONObject jsonForProperties = form.optJSONObject("nodeProperties");
        BindInterceptor old = req.setBindListener(new BindInterceptor() {
            @Override
            public Object onConvert(Type targetType, Class targetTypeErasure, Object jsonSource) {
                if (jsonForProperties!=jsonSource)  return DEFAULT;

                try {
                    DescribableList<NodeProperty<?>, NodePropertyDescriptor> tmp = new DescribableList<NodeProperty<?>, NodePropertyDescriptor>(Saveable.NOOP,getNodeProperties().toList());
                    tmp.rebuild(req, jsonForProperties, NodeProperty.all());
                    return tmp.toList();
                } catch (FormException e) {
                    throw new IllegalArgumentException(e);
                } catch (IOException e) {
                    throw new IllegalArgumentException(e);
                }
            }
        });

        try {
            return getDescriptor().newInstance(req, form);
        } finally {
            req.setBindListener(old);
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417301739674/fstmerge_base_8559250369498625231
=======
public Node reconfigure(StaplerRequest req, JSONObject form) throws FormException {
        return form==null ? null : getDescriptor().newInstance(req, form);
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417301739674/fstmerge_var2_1053992398476958216

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ad343_995f4/rev_ad343-995f4/core/src/main/java/hudson/model/Node.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9b03b_9a9ac/rev_9b03b-9a9ac.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2b7eb_9b03b/rev_2b7eb-9b03b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f987e_177a9/rev_f987e-177a9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_be85b_5cbe1/rev_be85b-5cbe1.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6065a_54d98/rev_6065a-54d98.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ff1f6_b8152/rev_ff1f6-b8152.revisions
Conflict type: LineBasedMCFd
Conflict body: 
protected ServletContext createWebServer() throws Exception {
        server = new Server();

        WebAppContext context = new WebAppContext(WarExploder.getExplodedDir().getPath(), contextPath);
        context.setClassLoader(getClass().getClassLoader());
        context.setConfigurations(new Configuration[]{new WebXmlConfiguration(),new NoListenerConfiguration()});
        server.setHandler(context);
        context.setMimeTypes(MIME_TYPES);

        SocketConnector connector = new SocketConnector();
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417303372071/fstmerge_var1_2961750680360792659

        server.setThreadPool(new ThreadPoolImpl(new ThreadPoolExecutor(10, 10, 10L, TimeUnit.SECONDS, new LinkedBlockingQueue<Runnable>(),new ThreadFactory() {
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417303372071/fstmerge_base_6817871392000600241
        server.setThreadPool(new ThreadPoolImpl(new ThreadPoolExecutor(1, 10, 10L, TimeUnit.SECONDS, new SynchronousQueue<Runnable>(),new ThreadFactory() {
=======
        connector.setHeaderBufferSize(12*1024); // use a bigger buffer as Stapler traces can get pretty large on deeply nested URL

        server.setThreadPool(new ThreadPoolImpl(new ThreadPoolExecutor(1, 10, 10L, TimeUnit.SECONDS, new SynchronousQueue<Runnable>(),new ThreadFactory() {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417303372071/fstmerge_var2_5343977762002615880
            public Thread newThread(Runnable r) {
                Thread t = new Thread(r);
                t.setName("Jetty Thread Pool");
                return t;
            }
        })));
        server.addConnector(connector);
        server.addUserRealm(configureUserRealm());
        server.start();

        localPort = connector.getLocalPort();

        return context.getServletContext();
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ff1f6_b8152/rev_ff1f6-b8152/test/src/main/java/org/jvnet/hudson/test/HudsonTestCase.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d3d56_5b0fc/rev_d3d56-5b0fc.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5c990_7e14d/rev_5c990-7e14d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f3c44_fcf7f/rev_f3c44-fcf7f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_31e7d_f3c44/rev_31e7d-f3c44.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ffcf4_ebcc7/rev_ffcf4-ebcc7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5c21f_0ecb0/rev_5c21f-0ecb0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2d629_9c7e0/rev_2d629-9c7e0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b013c_4bf8f/rev_b013c-4bf8f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1d4ab_d1f86/rev_1d4ab-d1f86.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1d4ab_b013c/rev_1d4ab-b013c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_31bb9_1369c/rev_31bb9-1369c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_071c5_3755b/rev_071c5-3755b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f5209_f2840/rev_f5209-f2840.revisions
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417306880191/fstmerge_var1_2343729611561362681
public AutoCompletionCandidates doAutoCompleteCopyNewItemFrom(@QueryParameter final String value) {
        final AutoCompletionCandidates r = new AutoCompletionCandidates();

        new ItemVisitor() {
            @Override
            public void onItemGroup(ItemGroup<?> group) {
                // only dig deep when the path matches what's typed.
                // for example, if 'foo/bar' is typed, we want to show 'foo/barcode'
                if (value.startsWith(group.getFullName()))
                    super.onItemGroup(group);
            }

            @Override
            public void onItem(Item i) {
                r.add(i.getFullName());
                super.onItem(i);
            }
        }.onItemGroup(Hudson.getInstance());

        return r;
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417306880191/fstmerge_base_885220734376374771
=======
public AutoCompletionCandidates doAutoCompleteCopyNewItemFrom(@QueryParameter final String value) {
        final AutoCompletionCandidates r = new AutoCompletionCandidates();

        new ItemVisitor() {
            @Override
            public void onItemGroup(ItemGroup<?> group) {
                // only dig deep when the path matches what's typed.
                // for example, if 'foo/bar' is typed, we want to show 'foo/barcode'
                if (value.startsWith(group.getFullName()))
                    super.onItemGroup(group);
            }

            @Override
            public void onItem(Item i) {
                if (i.getFullName().startsWith(value)) {
                    r.add((i.getFullName()));
                    super.onItem(i);
                }
            }
        }.onItemGroup(Hudson.getInstance());

        return r;
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417306880191/fstmerge_var2_5449406127072177593

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f5209_f2840/rev_f5209-f2840/core/src/main/java/hudson/model/ViewDescriptor.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c5da_50f7a/rev_7c5da-50f7a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2220b_23dae/rev_2220b-23dae.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ac1c0_7540d/rev_ac1c0-7540d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_95b9f_307af/rev_95b9f-307af.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8d29f_539ea/rev_8d29f-539ea.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cae5e_d0eef/rev_cae5e-d0eef.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_39d73_c465b/rev_39d73-c465b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0d3e4_c36b3/rev_0d3e4-c36b3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7b15c_92606/rev_7b15c-92606.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c267d_831e7/rev_c267d-831e7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_80c9f_c267d/rev_80c9f-c267d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b89b4_ba414/rev_b89b4-ba414.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2ec19_71499/rev_2ec19-71499.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_70a2a_fe452/rev_70a2a-fe452.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c217f_b2e09/rev_c217f-b2e09.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e57f4_69cde/rev_e57f4-69cde.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6243c_9fc94/rev_6243c-9fc94.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c6176_f9ee8/rev_c6176-f9ee8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_86d07_505a0/rev_86d07-505a0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_119ae_75016/rev_119ae-75016.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_23da9_393e3/rev_23da9-393e3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_825dc_9578b/rev_825dc-9578b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8b09a_20c6f/rev_8b09a-20c6f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2836a_e14c1/rev_2836a-e14c1.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f10b5_68f4b/rev_f10b5-68f4b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_02038_68f4b/rev_02038-68f4b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_200bc_31d36/rev_200bc-31d36.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_642f3_27414/rev_642f3-27414.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6ae77_872b4/rev_6ae77-872b4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1ead9_008bb/rev_1ead9-008bb.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_688e8_84b90/rev_688e8-84b90.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_70da1_208c7/rev_70da1-208c7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8578e_0667a/rev_8578e-0667a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ee8de_9610f/rev_ee8de-9610f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e3a0b_d7dcb/rev_e3a0b-d7dcb.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cb86f_819c8/rev_cb86f-819c8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_531f4_cee7a/rev_531f4-cee7a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c565c_c0628/rev_c565c-c0628.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cd48b_018b7/rev_cd48b-018b7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_07373_0cfbe/rev_07373-0cfbe.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_be03a_84a78/rev_be03a-84a78.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_fe30a_a0fb3/rev_fe30a-a0fb3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a2c20_1a700/rev_a2c20-1a700.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0bc46_5aa72/rev_0bc46-5aa72.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_87143_62040/rev_87143-62040.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3c88f_a8418/rev_3c88f-a8418.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a3657_ed51d/rev_a3657-ed51d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_04546_b1926/rev_04546-b1926.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c4d9f_d5b8c/rev_c4d9f-d5b8c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c4d9f_d5b8c/rev_c4d9f-d5b8c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c3eef_3f13f/rev_c3eef-3f13f.revisions
Conflict type: SameIdFd
Conflict body: 
~~FSTMerge~~ private String password; ##FSTMerge## ##FSTMerge## @Deprecated
    private String password;
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c3eef_3f13f/rev_c3eef-3f13f/core/src/main/java/hudson/ProxyConfiguration.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417324290057/fstmerge_var1_8490209848778004743
public Object readResolve() {
        if (secretPassword == null)
            secretPassword = Secret.fromString(Scrambler.descramble(password));
        password = null;
        return this;
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417324290057/fstmerge_base_7073779207165132809
=======
public Object readResolve() {
        if (secretPassword == null)
            // backward compatibility : get crambled password and store it encrypted
            secretPassword = Secret.fromString(Scrambler.descramble(password));
        password = null;
        return this;
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417324290057/fstmerge_var2_511651678023225617

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c3eef_3f13f/rev_c3eef-3f13f/core/src/main/java/hudson/ProxyConfiguration.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2ca38_005b7/rev_2ca38-005b7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d24af_e76b0/rev_d24af-e76b0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d2f90_49577/rev_d2f90-49577.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_82a26_514b5/rev_82a26-514b5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e4a84_2ff3c/rev_e4a84-2ff3c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_77290_5ea48/rev_77290-5ea48.revisions
Conflict type: LineBasedMCFd
Conflict body: 
public int compareTo(ExtensionComponent<T> that) {
        double a = this.ordinal();
        double b = that.ordinal();
        if (a>b)    return -1;
        if (a<b)    return 1;

        // make the order bit more deterministic among extensions of the same ordinal
        if (this.instance instanceof Descriptor) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417330304171/fstmerge_var1_6805939708320907464
            return Util.fixNull(((Descriptor)this.instance).getDisplayName()).compareTo(Util.fixNull(((Descriptor)that.instance).getDisplayName()));
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417330304171/fstmerge_base_781221287903296761
            return ((Descriptor)this.instance).getDisplayName().compareTo(((Descriptor)that.instance).getDisplayName());
=======
            return Util.fixNull(((Descriptor)this.instance).getDisplayName()).compareTo(Util.fixNull((((Descriptor)that.instance).getDisplayName())));
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417330304171/fstmerge_var2_5209639064914276208
        } else {
            return this.instance.getClass().getName().compareTo(that.instance.getClass().getName());
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_77290_5ea48/rev_77290-5ea48/core/src/main/java/hudson/ExtensionComponent.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d9e66_017e4/rev_d9e66-017e4.revisions
Conflict type: LineBasedMCFd
Conflict body: 
private synchronized void update() {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417331387205/fstmerge_var1_4630859157328483649
        lastSuggestedReview = System.currentTimeMillis();
        Hudson hudson = Hudson.getInstance();
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417331387205/fstmerge_base_6609140080998210551
        Hudson hudson = Hudson.getInstance();
=======
        Jenkins hudson = Jenkins.getInstance();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417331387205/fstmerge_var2_5093925267330887391

        // clean up the cancelled launch activity, then count the # of executors that we are about to bring up.
        int plannedCapacitySnapshot = 0;
        for (Iterator<PlannedNode> itr = pendingLaunches.iterator(); itr.hasNext();) {
            PlannedNode f = itr.next();
            if(f.future.isDone()) {
                try {
                    hudson.addNode(f.future.get());
                    LOGGER.info(f.displayName+" provisioning successfully completed. We have now "+hudson.getComputers().length+" computer(s)");
                } catch (InterruptedException e) {
                    throw new AssertionError(e); // since we confirmed that the future is already done
                } catch (ExecutionException e) {
                    LOGGER.log(Level.WARNING, "Provisioned slave "+f.displayName+" failed to launch",e.getCause());
                } catch (IOException e) {
                    LOGGER.log(Level.WARNING, "Provisioned slave "+f.displayName+" failed to launch",e);
                }
                itr.remove();
            } else
                plannedCapacitySnapshot += f.numExecutors;
        }
        float plannedCapacity = plannedCapacitySnapshot;
        plannedCapacitiesEMA.update(plannedCapacity);

        /*
            Here we determine how many additional slaves we need to keep up with the load (if at all),
            which involves a simple math.

            Broadly speaking, first we check that all the executors are fully utilized before attempting
            to start any new slave (this also helps to ignore the temporary gap between different numbers,
            as changes in them are not necessarily synchronized --- for example, there's a time lag between
            when a slave launches (thus bringing the planned capacity down) and the time when its executors
            pick up builds (thus bringing the queue length down.)

            Once we confirm that, we compare the # of buildable items against the additional slaves
            that are being brought online. If we have more jobs than our executors can handle, we'll launch a new slave.

            So this computation involves three stats:

              1. # of idle executors
              2. # of jobs that are starving for executors
              3. # of additional slaves being provisioned (planned capacities.)

            To ignore a temporary surge/drop, we make conservative estimates on each one of them. That is,
            we take the current snapshot value, and we take the current exponential moving average (EMA) value,
            and use the max/min.

            This is another measure to be robust against temporary surge/drop in those indicators, and helps
            us avoid over-reacting to stats.

            If we only use the snapshot value or EMA value, tests confirmed that the gap creates phantom
            excessive loads and Hudson ends up firing excessive capacities. In a static system, over the time
            EMA and the snapshot value becomes the same, so this makes sure that in a long run this conservative
            estimate won't create a starvation.
         */

        int idleSnapshot = stat.computeIdleExecutors();
        int totalSnapshot = stat.computeTotalExecutors();
        boolean needSomeWhenNoneAtAll = ((totalSnapshot + plannedCapacity) == 0) && (stat.computeQueueLength() > 0);
        float idle = Math.max(stat.getLatestIdleExecutors(TIME_SCALE), idleSnapshot);
        if(idle<MARGIN || needSomeWhenNoneAtAll) {
            // make sure the system is fully utilized before attempting any new launch.

            // this is the amount of work left to be done
            float qlen = Math.min(stat.queueLength.getLatest(TIME_SCALE), stat.computeQueueLength());

            // ... and this is the additional executors we've already provisioned.
            plannedCapacity = Math.max(plannedCapacitiesEMA.getLatest(TIME_SCALE),plannedCapacity);

            float excessWorkload = qlen - plannedCapacity;
            if (needSomeWhenNoneAtAll && excessWorkload < 1) {
                // in this specific exceptional case we should just provision right now
                // the exponential smoothing will delay the build unnecessarily
                excessWorkload = 1;
            }
            float m = calcThresholdMargin(totalSnapshot);
            if(excessWorkload>1-m) {// and there's more work to do...
                LOGGER.fine("Excess workload "+excessWorkload+" detected. (planned capacity="+plannedCapacity+",Qlen="+qlen+",idle="+idle+"&"+idleSnapshot+",total="+totalSnapshot+"m,="+m+")");
                for( Cloud c : hudson.clouds ) {
                    if(excessWorkload<0)    break;  // enough slaves allocated

                    // Make sure this cloud actually can provision for this label.
                    if (c.canProvision(label)) {
                        // provisioning a new node should be conservative --- for example if exceeWorkload is 1.4,
                        // we don't want to allocate two nodes but just one.
                        // OTOH, because of the exponential decay, even when we need one slave, excess workload is always
                        // something like 0.95, in which case we want to allocate one node.
                        // so the threshold here is 1-MARGIN, and hence floor(excessWorkload+MARGIN) is needed to handle this.
                        
                        Collection<PlannedNode> additionalCapacities = c.provision(label, (int)Math.round(Math.floor(excessWorkload+m)));
                        for (PlannedNode ac : additionalCapacities) {
                            excessWorkload -= ac.numExecutors;
                            LOGGER.info("Started provisioning "+ac.displayName+" from "+c.name+" with "+ac.numExecutors+" executors. Remaining excess workload:"+excessWorkload);
                        }
                        pendingLaunches.addAll(additionalCapacities);
                    }
                }
            }
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d9e66_017e4/rev_d9e66-017e4/core/src/main/java/hudson/slaves/NodeProvisioner.java
Conflict type: LineBasedMCFd
Conflict body: 
protected void buildDependencyGraph(DependencyGraph graph) {
        if(isDisabled() || getParent().ignoreUpstremChanges())        return;

        MavenDependencyComputationData data = graph.getComputationalData(MavenDependencyComputationData.class);

        // Build a map of all Maven modules in this Jenkins instance as dependencies.

        // When we load old data that doesn't record version in dependency, we'd like
        // to emulate the old behavior that tries to identify the upstream by ignoring the version.
        // Do this by putting groupId:artifactId:UNKNOWN to the modules list, but
        // ONLY if we find a such an old MavenModule in this Jenkins instance.
        boolean hasDependenciesWithUnknownVersion = hasDependenciesWithUnknownVersion();
        if (data == null) {
            Map<ModuleDependency,MavenModule> modules = new HashMap<ModuleDependency,MavenModule>();
    
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417331395749/fstmerge_var1_7447306157763997468
            for (MavenModule m : Hudson.getInstance().getAllItems(MavenModule.class)) {
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417331395749/fstmerge_base_9022608562856264589
            // when we load old data that doesn't record version in dependency, we'd like
            // to emulate the old behavior that it tries to identify the upstream by ignoring the version.
            // do this by always putting groupId:artifactId:UNKNOWN to the modules list.
    
            for (MavenModule m : Hudson.getInstance().getAllItems(MavenModule.class)) {
=======
            // when we load old data that doesn't record version in dependency, we'd like
            // to emulate the old behavior that it tries to identify the upstream by ignoring the version.
            // do this by always putting groupId:artifactId:UNKNOWN to the modules list.
    
            for (MavenModule m : Jenkins.getInstance().getAllItems(MavenModule.class)) {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417331395749/fstmerge_var2_3244435886569210495
                if(m.isDisabled())  continue;
                ModuleDependency moduleDependency = m.asDependency();
                modules.put(moduleDependency,m);
                if (hasDependenciesWithUnknownVersion) {
                    modules.put(moduleDependency.withUnknownVersion(),m);
                }
            }
            data = new MavenDependencyComputationData(modules);
            data.withUnknownVersions = hasDependenciesWithUnknownVersion;
            graph.putComputationalData(MavenDependencyComputationData.class, data);
        } else {
            if (hasDependenciesWithUnknownVersion && !data.withUnknownVersions) {
                // found 'old' MavenModule: add dependencies with unknown versions now
                for (MavenModule m : Hudson.getInstance().getAllItems(MavenModule.class)) {
                    if(m.isDisabled())  continue;
                    ModuleDependency moduleDependency = m.asDependency().withUnknownVersion();
                    data.allModules.put(moduleDependency,m);
                }
                data.withUnknownVersions = true;
            }
        }

        // In case two modules with the same name are defined, modules in the same MavenModuleSet
        // take precedence.
        
        // Can lead to OOME, if remembered in the computational data and there are lot big multi-module projects
        // TODO: try to use soft references to clean the heap when needed
        Map<ModuleDependency,MavenModule> myParentsModules; // = data.modulesPerParent.get(getParent());
        
        //if (myParentsModules == null) {
            myParentsModules = new HashMap<ModuleDependency, MavenModule>();
            
            for (MavenModule m : getParent().getModules()) {
                if(m.isDisabled())  continue;
                ModuleDependency moduleDependency = m.asDependency();
                myParentsModules.put(moduleDependency,m);
                if (hasDependenciesWithUnknownVersion) {
                    myParentsModules.put(moduleDependency.withUnknownVersion(),m);
                }
            }
            
            //data.modulesPerParent.put(getParent(), myParentsModules);
        //}

        // if the build style is the aggregator build, define dependencies against project,
        // not module.
        AbstractProject<?, ?> dest = getParent().isAggregatorStyleBuild() ? getParent() : this;

        for (ModuleDependency d : dependencies) {
            MavenModule src = myParentsModules.get(d);
            if (src==null) {
                src = data.allModules.get(d);
            }
            
            if(src!=null) {
                DependencyGraph.Dependency dep = new MavenModuleDependency(
                        src.getParent().isAggregatorStyleBuild() ? src.getParent() : src,dest);
                if (!dep.pointsItself())
                    graph.addDependency(dep);
            }
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d9e66_017e4/rev_d9e66-017e4/maven-plugin/src/main/java/hudson/maven/MavenModule.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3fb0f_79eb9/rev_3fb0f-79eb9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4f569_3fb0f/rev_4f569-3fb0f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_dbe58_8cd63/rev_dbe58-8cd63.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6de74_82917/rev_6de74-82917.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e7824_e7dc6/rev_e7824-e7dc6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_bb06b_0aca5/rev_bb06b-0aca5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_06770_e03ba/rev_06770-e03ba.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_17a83_ef05e/rev_17a83-ef05e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c61ff_8007d/rev_c61ff-8007d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2cd69_64649/rev_2cd69-64649.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_985f3_30598/rev_985f3-30598.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8a2fc_3ac5a/rev_8a2fc-3ac5a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a2d82_2b14f/rev_a2d82-2b14f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_bfdda_c1c48/rev_bfdda-c1c48.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7b205_a3354/rev_7b205-a3354.revisions
Conflict type: LineBasedMCFd
Conflict body: 
public synchronized List<TopLevelItem> getItems() {
        SortedSet<String> names = new TreeSet<String>(jobNames);

        if (includePattern != null) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349045667/fstmerge_var1_2110080869591147287
            for (Item item : getOwnerItemGroup().getItems()) {
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349045667/fstmerge_base_3194078748561817505
            for (TopLevelItem item : Hudson.getInstance().getItems()) {
=======
            for (TopLevelItem item : Jenkins.getInstance().getItems()) {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349045667/fstmerge_var2_9113920001941180898
                String itemName = item.getName();
                if (includePattern.matcher(itemName).matches()) {
                    names.add(itemName);
                }
            }
        }

        List<TopLevelItem> items = new ArrayList<TopLevelItem>(names.size());
        for (String n : names) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349045667/fstmerge_var1_2110080869591147287
            TopLevelItem item = getOwnerItemGroup().getItem(n);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349045667/fstmerge_base_3194078748561817505
            TopLevelItem item = Hudson.getInstance().getItem(n);
=======
            TopLevelItem item = Jenkins.getInstance().getItem(n);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349045667/fstmerge_var2_9113920001941180898
            // Add if no status filter or filter matches enabled/disabled status:
            if(item!=null && (statusFilter == null || !(item instanceof AbstractProject)
                              || ((AbstractProject)item).isDisabled() ^ statusFilter))
                items.add(item);
        }

        // check the filters
        Iterable<ViewJobFilter> jobFilters = getJobFilters();
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349045667/fstmerge_var1_2110080869591147287
        List<TopLevelItem> allItems = new ArrayList<TopLevelItem>(getOwnerItemGroup().getItems());
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349045667/fstmerge_base_3194078748561817505
        List<TopLevelItem> allItems = Hudson.getInstance().getItems();
=======
        List<TopLevelItem> allItems = Jenkins.getInstance().getItems();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349045667/fstmerge_var2_9113920001941180898
    	for (ViewJobFilter jobFilter: jobFilters) {
    		items = jobFilter.filter(items, allItems, this);
    	}
        // for sanity, trim off duplicates
        items = new ArrayList<TopLevelItem>(new LinkedHashSet<TopLevelItem>(items));
        
        return items;
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7b205_a3354/rev_7b205-a3354/core/src/main/java/hudson/model/ListView.java
Conflict type: LineBasedMCFd
Conflict body: 
public synchronized Item doCreateItem(StaplerRequest req, StaplerResponse rsp) throws IOException, ServletException {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349045688/fstmerge_var1_6060704286743263443
        ItemGroup<? extends TopLevelItem> ig = getOwnerItemGroup();
        if (ig instanceof ModifiableItemGroup) {
            TopLevelItem item = ((ModifiableItemGroup<? extends TopLevelItem>)ig).doCreateItem(req, rsp);
            if(item!=null) {
                jobNames.add(item.getName());
                owner.save();
            }
            return item;
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349045688/fstmerge_base_7039651798565933756
        Item item = Hudson.getInstance().doCreateItem(req, rsp);
        if(item!=null) {
            jobNames.add(item.getName());
            owner.save();
=======
        Item item = Jenkins.getInstance().doCreateItem(req, rsp);
        if(item!=null) {
            jobNames.add(item.getName());
            owner.save();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349045688/fstmerge_var2_811088402113667838
        }
        return null;
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7b205_a3354/rev_7b205-a3354/core/src/main/java/hudson/model/ListView.java
Conflict type: LineBasedMCFd
Conflict body: 
@Override
    protected void submit(StaplerRequest req) throws ServletException, FormException, IOException {
        jobNames.clear();
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349045696/fstmerge_var1_3575248592734765971
        for (TopLevelItem item : getOwnerItemGroup().getItems()) {
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349045696/fstmerge_base_4205787243913408698
        for (TopLevelItem item : Hudson.getInstance().getItems()) {
=======
        for (TopLevelItem item : Jenkins.getInstance().getItems()) {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349045696/fstmerge_var2_2477846291601194091
            if(req.getParameter(item.getName())!=null)
                jobNames.add(item.getName());
        }

        if (req.getParameter("useincluderegex") != null) {
            includeRegex = Util.nullify(req.getParameter("includeRegex"));
            if (includeRegex == null)
                includePattern = null;
            else
                includePattern = Pattern.compile(includeRegex);
        } else {
            includeRegex = null;
            includePattern = null;
        }

        if (columns == null) {
            columns = new DescribableList<ListViewColumn,Descriptor<ListViewColumn>>(this);
        }
        columns.rebuildHetero(req, req.getSubmittedForm(), ListViewColumn.all(), "columns");
        
        if (jobFilters == null) {
        	jobFilters = new DescribableList<ViewJobFilter,Descriptor<ViewJobFilter>>(this);
        }
        jobFilters.rebuildHetero(req, req.getSubmittedForm(), ViewJobFilter.all(), "jobFilters");

        String filter = Util.fixEmpty(req.getParameter("statusFilter"));
        statusFilter = filter != null ? "1".equals(filter) : null;
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7b205_a3354/rev_7b205-a3354/core/src/main/java/hudson/model/ListView.java
Conflict type: LineBasedMCFd
Conflict body: 
public TopLevelItem getItem(String name) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349047010/fstmerge_var1_2892512857676492491
        return getOwnerItemGroup().getItem(name);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349047010/fstmerge_base_8050756468585424206
        return Hudson.getInstance().getItem(name);
=======
        return Jenkins.getInstance().getItem(name);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349047010/fstmerge_var2_6422826555497441579
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7b205_a3354/rev_7b205-a3354/core/src/main/java/hudson/model/View.java
Conflict type: LineBasedMCFd
Conflict body: 
public boolean isDefault() {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349047096/fstmerge_var1_4370727282387385662
        return getOwnerPrimaryView()==this;
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349047096/fstmerge_base_2066477008385581439
        return Hudson.getInstance().getPrimaryView()==this;
=======
        return Jenkins.getInstance().getPrimaryView()==this;
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349047096/fstmerge_var2_2783824056053129125
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7b205_a3354/rev_7b205-a3354/core/src/main/java/hudson/model/View.java
Conflict type: LineBasedMCFd
Conflict body: 
public List<Action> getActions() {
    	List<Action> result = new ArrayList<Action>();
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349047122/fstmerge_var1_4506984886022931866
    	result.addAll(getOwnerViewActions());
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349047122/fstmerge_base_2886725865291502477
    	result.addAll(Hudson.getInstance().getActions());
=======
    	result.addAll(Jenkins.getInstance().getActions());
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349047122/fstmerge_var2_2072595171640463001
    	synchronized (this) {
    		if (transientActions == null) {
    			transientActions = TransientViewActionFactory.createAllFor(this); 
    		}
    		result.addAll(transientActions);
    	}
    	return result;
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7b205_a3354/rev_7b205-a3354/core/src/main/java/hudson/model/View.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349047382/fstmerge_var1_8697346770356640189
public TopLevelItem doCreateItem(StaplerRequest req, StaplerResponse rsp) throws IOException, ServletException {
        ItemGroup<? extends TopLevelItem> ig = getOwnerItemGroup();
        if (ig instanceof ModifiableItemGroup) {
            TopLevelItem item = ((ModifiableItemGroup<? extends TopLevelItem>)ig).doCreateItem(req, rsp);
            if(item!=null) {
                jobNames.add(item.getName());
                owner.save();
            }
            return item;
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349047382/fstmerge_base_2158261343551553760
public Item doCreateItem(StaplerRequest req, StaplerResponse rsp) throws IOException, ServletException {
        Item item = Hudson.getInstance().doCreateItem(req, rsp);
        if(item!=null) {
            jobNames.add(item.getName());
            owner.save();
=======
public Item doCreateItem(StaplerRequest req, StaplerResponse rsp) throws IOException, ServletException {
        Item item = Jenkins.getInstance().doCreateItem(req, rsp);
        if(item!=null) {
            jobNames.add(item.getName());
            owner.save();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349047382/fstmerge_var2_3622793538566741428
        }
        return null;
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7b205_a3354/rev_7b205-a3354/core/src/main/java/hudson/model/TreeView.java
Conflict type: LineBasedMCFd
Conflict body: 
@Override
    public Item doCreateItem(StaplerRequest req, StaplerResponse rsp)
            throws IOException, ServletException {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349052038/fstmerge_var1_6000723327541030402
        ItemGroup<? extends TopLevelItem> ig = getOwnerItemGroup();
        if (ig instanceof ModifiableItemGroup)
            return ((ModifiableItemGroup<? extends TopLevelItem>)ig).doCreateItem(req, rsp);
        return null;
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349052038/fstmerge_base_5593642346477170169
        return Hudson.getInstance().doCreateItem(req, rsp);
=======
        return Jenkins.getInstance().doCreateItem(req, rsp);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349052038/fstmerge_var2_523570752690470343
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7b205_a3354/rev_7b205-a3354/core/src/main/java/hudson/model/AllView.java
Conflict type: LineBasedMCFd
Conflict body: 
@Override
    public Collection<TopLevelItem> getItems() {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349052042/fstmerge_var1_5652702802343652624
        return (Collection)getOwnerItemGroup().getItems();
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349052042/fstmerge_base_7517219888169786678
        return Hudson.getInstance().getItems();
=======
        return Jenkins.getInstance().getItems();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349052042/fstmerge_var2_4530548677502201981
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7b205_a3354/rev_7b205-a3354/core/src/main/java/hudson/model/AllView.java
Conflict type: LineBasedMCFd
Conflict body: 
@Override
    public TopLevelItem doCreateItem(StaplerRequest req, StaplerResponse rsp)
            throws IOException, ServletException {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349052290/fstmerge_var1_6563203995463163518
        ItemGroup<? extends TopLevelItem> ig = getOwnerItemGroup();
        if (ig instanceof ModifiableItemGroup) {
            return ((ModifiableItemGroup<? extends TopLevelItem>)ig).doCreateItem(req, rsp);
        }
        return null;
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349052290/fstmerge_base_2477558019035299407
        return Hudson.getInstance().doCreateItem(req, rsp);
=======
        return Jenkins.getInstance().doCreateItem(req, rsp);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349052290/fstmerge_var2_2770035323454291421
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7b205_a3354/rev_7b205-a3354/core/src/main/java/hudson/model/MyView.java
Conflict type: LineBasedMCFd
Conflict body: 
@Override
    public Collection<TopLevelItem> getItems() {
        List<TopLevelItem> items = new ArrayList<TopLevelItem>();
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349052294/fstmerge_var1_4475685575376608860
        for (TopLevelItem item : getOwnerItemGroup().getItems()) {
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349052294/fstmerge_base_3176988856914350859
        for (TopLevelItem item : Hudson.getInstance().getItems()) {
=======
        for (TopLevelItem item : Jenkins.getInstance().getItems()) {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417349052294/fstmerge_var2_7767863055588619675
            if (item.hasPermission(Job.CONFIGURE)) {
                items.add(item);
            }
        }
        return Collections.unmodifiableList(items);
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7b205_a3354/rev_7b205-a3354/core/src/main/java/hudson/model/MyView.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5ddde_26fc0/rev_5ddde-26fc0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_31286_40ffd/rev_31286-40ffd.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b2a9c_cf310/rev_b2a9c-cf310.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_63dbe_cf310/rev_63dbe-cf310.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_556ef_855f0/rev_556ef-855f0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_405f9_8ce68/rev_405f9-8ce68.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6be52_78cdd/rev_6be52-78cdd.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9323b_06b10/rev_9323b-06b10.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c83d2_9323b/rev_c83d2-9323b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_816e0_63a29/rev_816e0-63a29.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_34e8a_2b893/rev_34e8a-2b893.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_547c8_89bd7/rev_547c8-89bd7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9f526_591cb/rev_9f526-591cb.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d5463_d741f/rev_d5463-d741f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0da78_98b7c/rev_0da78-98b7c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_65678_ee077/rev_65678-ee077.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_bc991_f6fac/rev_bc991-f6fac.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_577e9_491b8/rev_577e9-491b8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_00a99_592e4/rev_00a99-592e4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_258a5_15e9b/rev_258a5-15e9b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ce279_4f0ea/rev_ce279-4f0ea.revisions
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417383202454/fstmerge_var1_3924953738098694214
@Override
    public boolean add(D d) {
        hudson.getExtensionList(Descriptor.class).add(d); // add it to the master descriptor list as well
        return super.add(d);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417383202454/fstmerge_base_5493003737610366556
=======
@Override
    public boolean add(D d) {
        boolean r = super.add(d);
        hudson.getExtensionList(Descriptor.class).add(d);
        return r;
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417383202454/fstmerge_var2_3896345661872635853

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ce279_4f0ea/rev_ce279-4f0ea/core/src/main/java/hudson/DescriptorExtensionList.java
Conflict type: LineBasedMCFd
Conflict body: 
private String getViewPage(Class<?> clazz, String pageName, String defaultValue) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417383209647/fstmerge_var1_5209266666512767907
        while(clazz!=Object.class && clazz!=null) {
            String name = clazz.getName().replace('.', '/').replace('$', '/') + "/" + pageName;
            if(clazz.getClassLoader().getResource(name)!=null)
                return '/'+name;
            clazz = clazz.getSuperclass();
        }
        return defaultValue;
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417383209647/fstmerge_base_7137071789107689778
        while(clazz!=Object.class) {
            String name = clazz.getName().replace('.', '/').replace('$', '/') + "/" + pageName;
            if(clazz.getClassLoader().getResource(name)!=null)
                return '/'+name;
            clazz = clazz.getSuperclass();
        }
        return defaultValue;
=======
        return getViewPage(clazz,Collections.singleton(pageName),defaultValue);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417383209647/fstmerge_var2_1148268478270076958
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ce279_4f0ea/rev_ce279-4f0ea/core/src/main/java/hudson/model/Descriptor.java
Conflict type: LineBasedMCFd
Conflict body: 
@Exported(visibility=999,name="url")
    public final String getAbsoluteUrl() {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417383209890/fstmerge_var1_3964280813515645943
        String r = Hudson.getInstance().getRootUrl();
        if(r==null)
            throw new IllegalStateException("Root URL isn't configured yet. Cannot compute absolute URL.");
        return Util.encode(r+getUrl());
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417383209890/fstmerge_base_1174518105095797497
        StaplerRequest request = Stapler.getCurrentRequest();
        if(request==null)
            throw new IllegalStateException("Not processing a HTTP request");
        return Util.encode(Hudson.getInstance().getRootUrl()+getUrl());
=======
        StaplerRequest request = Stapler.getCurrentRequest();
        if(request==null)
            throw new IllegalStateException("Not processing a HTTP request");
        return Util.encode(Jenkins.getInstance().getRootUrl()+getUrl());
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417383209890/fstmerge_var2_221368910332343524
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ce279_4f0ea/rev_ce279-4f0ea/core/src/main/java/hudson/model/AbstractItem.java
Conflict type: LineBasedMCFd
Conflict body: 
public static AbstractProject findNearest(String name) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417383212664/fstmerge_var1_4815474036244150318
        return findNearest(name,Hudson.getInstance());
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417383212664/fstmerge_base_3808281856628287280
        List<AbstractProject> projects = Hudson.getInstance().getItems(AbstractProject.class);
        String[] names = new String[projects.size()];
        for( int i=0; i<projects.size(); i++ )
            names[i] = projects.get(i).getName();

        String nearest = EditDistance.findNearest(name, names);
        return (AbstractProject)Hudson.getInstance().getItem(nearest);
=======
        List<AbstractProject> projects = Jenkins.getInstance().getItems(AbstractProject.class);
        String[] names = new String[projects.size()];
        for( int i=0; i<projects.size(); i++ )
            names[i] = projects.get(i).getName();

        String nearest = EditDistance.findNearest(name, names);
        return (AbstractProject) Jenkins.getInstance().getItem(nearest);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417383212664/fstmerge_var2_8224537986005254777
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ce279_4f0ea/rev_ce279-4f0ea/core/src/main/java/hudson/model/AbstractProject.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ad413_c3baf/rev_ad413-c3baf.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6b5b9_72f6f/rev_6b5b9-72f6f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_982d5_9cd26/rev_982d5-9cd26.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0cd96_04738/rev_0cd96-04738.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_289e8_5853b/rev_289e8-5853b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_315d2_a70e8/rev_315d2-a70e8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_11ee0_39a20/rev_11ee0-39a20.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_90340_2ad3d/rev_90340-2ad3d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8369b_2166c/rev_8369b-2166c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_599c0_29270/rev_599c0-29270.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_549bf_eea67/rev_549bf-eea67.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e4ffe_009db/rev_e4ffe-009db.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9580a_b3581/rev_9580a-b3581.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_58d20_82e57/rev_58d20-82e57.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_29ed4_f6373/rev_29ed4-f6373.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_481b4_732ac/rev_481b4-732ac.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_be072_6b5ef/rev_be072-6b5ef.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c3f09_39d15/rev_c3f09-39d15.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_22d01_36236/rev_22d01-36236.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_14906_f4824/rev_14906-f4824.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_bcdff_9522c/rev_bcdff-9522c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_df319_f3636/rev_df319-f3636.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2fa40_8dfa5/rev_2fa40-8dfa5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_758b0_f3815/rev_758b0-f3815.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_91faf_3df64/rev_91faf-3df64.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2dbe1_244ff/rev_2dbe1-244ff.revisions
Conflict type: LineBasedMCFd
Conflict body: 
@Override
    protected Collection<String> loadBundledPlugins() {
        // this is used in tests, when we want to override the default bundled plugins with .hpl versions
        if (System.getProperty("hudson.bundled.plugins") != null) {
            return Collections.emptySet();
        }

        Set<String> names = new HashSet<String>();

<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417463604050/fstmerge_var1_8786352608759676786
        ServletContext context = Hudson.getInstance().servletContext;

        for( String path : Util.fixNull((Set<String>)context.getResourcePaths("/WEB-INF/plugins"))) {
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417463604050/fstmerge_base_4436509400531473778
        for( String path : Util.fixNull((Set<String>)hudson.servletContext.getResourcePaths("/WEB-INF/plugins"))) {
=======
        for( String path : Util.fixNull((Set<String>) jenkins.servletContext.getResourcePaths("/WEB-INF/plugins"))) {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417463604050/fstmerge_var2_2498139274406433890
            String fileName = path.substring(path.lastIndexOf('/')+1);
            if(fileName.length()==0) {
                // see http://www.nabble.com/404-Not-Found-error-when-clicking-on-help-td24508544.html
                // I suspect some containers are returning directory names.
                continue;
            }
            try {
                names.add(fileName);

<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417463604050/fstmerge_var1_8786352608759676786
                URL url = context.getResource(path);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417463604050/fstmerge_base_4436509400531473778
                URL url = hudson.servletContext.getResource(path);
=======
                URL url = jenkins.servletContext.getResource(path);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417463604050/fstmerge_var2_2498139274406433890
                copyBundledPlugin(url, fileName);
            } catch (IOException e) {
                LOGGER.log(Level.SEVERE, "Failed to extract the bundled plugin "+fileName,e);
            }
        }

        return names;
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2dbe1_244ff/rev_2dbe1-244ff/core/src/main/java/hudson/LocalPluginManager.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417463604054/fstmerge_var1_4499862839172772246
public LocalPluginManager(Hudson hudson) {
        super(hudson.servletContext, new File(hudson.getRootDir(),"plugins"));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417463604054/fstmerge_base_6168680479375132530
public LocalPluginManager(Hudson hudson) {
        super(hudson.servletContext, new File(hudson.getRootDir(),"plugins"));
        this.hudson = hudson;
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417463604054/fstmerge_var2_2611491069557425885

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2dbe1_244ff/rev_2dbe1-244ff/core/src/main/java/hudson/LocalPluginManager.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_143fd_9ab5f/rev_143fd-9ab5f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_39e71_977f4/rev_39e71-977f4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4f573_f2f1e/rev_4f573-f2f1e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_920e8_17ab5/rev_920e8-17ab5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6f389_15b2a/rev_6f389-15b2a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_fca7c_38e5d/rev_fca7c-38e5d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4df29_8bf3c/rev_4df29-8bf3c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5668a_93493/rev_5668a-93493.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_71e1a_e632d/rev_71e1a-e632d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9a3b9_e9812/rev_9a3b9-e9812.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ec43f_8b7b1/rev_ec43f-8b7b1.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_50b4f_74feb/rev_50b4f-74feb.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4add1_3b00a/rev_4add1-3b00a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e1d4b_9a333/rev_e1d4b-9a333.revisions

=========================================================
=========================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_23c21_9ce4d/rev_23c21-9ce4d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f6747_731c8/rev_f6747-731c8.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417712891165/fstmerge_var1_8729651436234656094
@Override
    public <T> Collection<ExtensionComponent<T>> find(Class<T> type, Hudson hudson) {
        TestEnvironment env = TestEnvironment.get();

        List<ExtensionComponent<T>> result = new ArrayList<ExtensionComponent<T>>();

        if (env==null)  return result;  // not in a test

        ClassLoader cl = hudson.getPluginManager().uberClassLoader;
        for (IndexItem<TestExtension,Object> item : Index.load(TestExtension.class, Object.class, cl)) {
            try {
                AnnotatedElement e = item.element();
                Class<?> extType;
                if (e instanceof Class) {
                    extType = (Class) e;
                    if (!isActive(env, extType)) continue;
                } else
                if (e instanceof Field) {
                    Field f = (Field) e;
                    if (!f.getDeclaringClass().isInstance(env.testCase))
                        continue;      // not executing the enclosing test
                    extType = f.getType();
                } else
                if (e instanceof Method) {
                    Method m = (Method) e;
                    if (!m.getDeclaringClass().isInstance(env.testCase))
                        continue;      // not executing the enclosing test
                    extType = m.getReturnType();
                } else
                    throw new AssertionError();

                String testName = item.annotation().value();
                if (testName.length()>0 && !env.testCase.getName().equals(testName))
                    continue;   // doesn't apply to this test

                if(type.isAssignableFrom(extType)) {
                    Object instance = item.instance();
                    if(instance!=null)
                        result.add(new ExtensionComponent<T>(type.cast(instance)));
                }
            } catch (InstantiationException e) {
                LOGGER.log(Level.WARNING, "Failed to load "+item.className(),e);
            }
        }

        return result;
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417712891165/fstmerge_base_554548968565511498
@Override
    public <T> Collection<ExtensionComponent<T>> find(Class<T> type, Hudson hudson) {
        TestEnvironment env = TestEnvironment.get();

        List<ExtensionComponent<T>> result = new ArrayList<ExtensionComponent<T>>();

        ClassLoader cl = hudson.getPluginManager().uberClassLoader;
        for (IndexItem<TestExtension,Object> item : Index.load(TestExtension.class, Object.class, cl)) {
            try {
                AnnotatedElement e = item.element();
                Class<?> extType;
                if (e instanceof Class) {
                    extType = (Class) e;
                    if (!isActive(env, extType)) continue;
                } else
                if (e instanceof Field) {
                    Field f = (Field) e;
                    if (!f.getDeclaringClass().isInstance(env.testCase))
                        continue;      // not executing the enclosing test
                    extType = f.getType();
                } else
                if (e instanceof Method) {
                    Method m = (Method) e;
                    if (!m.getDeclaringClass().isInstance(env.testCase))
                        continue;      // not executing the enclosing test
                    extType = m.getReturnType();
                } else
                    throw new AssertionError();

                String testName = item.annotation().value();
                if (testName.length()>0 && !env.testCase.getName().equals(testName))
                    continue;   // doesn't apply to this test

                if(type.isAssignableFrom(extType)) {
                    Object instance = item.instance();
                    if(instance!=null)
                        result.add(new ExtensionComponent<T>(type.cast(instance)));
                }
            } catch (InstantiationException e) {
                LOGGER.log(Level.WARNING, "Failed to load "+item.className(),e);
            }
        }

        return result;
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417712891165/fstmerge_var2_1530566668597153685

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f6747_731c8/rev_f6747-731c8/test/src/main/java/org/jvnet/hudson/test/TestExtensionLoader.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_45dba_5b399/rev_45dba-5b399.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b817e_91276/rev_b817e-91276.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_29c53_02e73/rev_29c53-02e73.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5d903_8c95d/rev_5d903-8c95d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_653f7_18c7d/rev_653f7-18c7d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f9e6f_acd14/rev_f9e6f-acd14.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_17baa_20e9a/rev_17baa-20e9a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7f332_09bc7/rev_7f332-09bc7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a97c9_d6ef4/rev_a97c9-d6ef4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cf2a7_50566/rev_cf2a7-50566.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_00410_0fc7a/rev_00410-0fc7a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_11437_66389/rev_11437-66389.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_22474_b68aa/rev_22474-b68aa.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8b54b_004d5/rev_8b54b-004d5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cc1f7_c7b67/rev_cc1f7-c7b67.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f967f_e8e9a/rev_f967f-e8e9a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_952f1_b1f1d/rev_952f1-b1f1d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_bedd1_08b68/rev_bedd1-08b68.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_085c9_ca7e9/rev_085c9-ca7e9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_99122_cb0a9/rev_99122-cb0a9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_206b6_56f24/rev_206b6-56f24.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_db30b_f994a/rev_db30b-f994a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_08260_43666/rev_08260-43666.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_06f88_829cc/rev_06f88-829cc.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7f829_0d660/rev_7f829-0d660.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2b7cb_d2c9d/rev_2b7cb-d2c9d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_506d0_a117d/rev_506d0-a117d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_528ee_18e19/rev_528ee-18e19.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e672b_2b461/rev_e672b-2b461.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8ca07_87f18/rev_8ca07-87f18.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_bfb57_623bc/rev_bfb57-623bc.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1d5cd_0f2f7/rev_1d5cd-0f2f7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5c0d9_c24a2/rev_5c0d9-c24a2.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_906d1_bed2a/rev_906d1-bed2a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e31db_c236f/rev_e31db-c236f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0955a_52471/rev_0955a-52471.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c8c5c_cd024/rev_c8c5c-cd024.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_bac65_4808f/rev_bac65-4808f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_64b95_08214/rev_64b95-08214.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ebb12_c1728/rev_ebb12-c1728.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8af15_f05f6/rev_8af15-f05f6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f2401_609b3/rev_f2401-609b3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ff858_d2b16/rev_ff858-d2b16.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ccdbd_4745d/rev_ccdbd-4745d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_dfffc_a8348/rev_dfffc-a8348.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5dbe2_e1691/rev_5dbe2-e1691.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_40d55_9e73a/rev_40d55-9e73a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8b9c7_8cbbc/rev_8b9c7-8cbbc.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b4ad3_2f9ff/rev_b4ad3-2f9ff.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3a523_7c538/rev_3a523-7c538.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8a213_a7ce8/rev_8a213-a7ce8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_04921_33cab/rev_04921-33cab.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b1540_7025c/rev_b1540-7025c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b835f_67a8f/rev_b835f-67a8f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9519d_c167f/rev_9519d-c167f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_142a7_e10dd/rev_142a7-e10dd.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e1355_0db7b/rev_e1355-0db7b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_04927_4150d/rev_04927-4150d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_99215_bfa7d/rev_99215-bfa7d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e645c_cf903/rev_e645c-cf903.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_70fb6_e645c/rev_70fb6-e645c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f8a22_c7ea4/rev_f8a22-c7ea4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5b634_5e971/rev_5b634-5e971.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4b14e_d755c/rev_4b14e-d755c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_65af3_ad6a6/rev_65af3-ad6a6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_879b3_1c926/rev_879b3-1c926.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8a926_7c635/rev_8a926-7c635.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3fd98_86ce5/rev_3fd98-86ce5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0db03_97135/rev_0db03-97135.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_695c2_7bba3/rev_695c2-7bba3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c5bee_8bfbd/rev_c5bee-8bfbd.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_70083_753d6/rev_70083-753d6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_17ac0_af0b6/rev_17ac0-af0b6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_927f7_689ee/rev_927f7-689ee.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_41f19_38e15/rev_41f19-38e15.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2d958_ce2c0/rev_2d958-ce2c0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_78792_e295f/rev_78792-e295f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4a6ce_a2f95/rev_4a6ce-a2f95.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5c0b3_24d56/rev_5c0b3-24d56.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_09d06_0ba1b/rev_09d06-0ba1b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b1d11_68197/rev_b1d11-68197.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7534d_70838/rev_7534d-70838.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3f861_ed06d/rev_3f861-ed06d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_255a3_c9371/rev_255a3-c9371.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_16ca4_cc571/rev_16ca4-cc571.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_60660_c8cce/rev_60660-c8cce.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_92135_60674/rev_92135-60674.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ba4fd_05419/rev_ba4fd-05419.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_580d8_c8577/rev_580d8-c8577.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_dfda1_acef9/rev_dfda1-acef9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_64585_e013b/rev_64585-e013b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6d61c_a9798/rev_6d61c-a9798.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5a95b_65339/rev_5a95b-65339.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2b287_7360f/rev_2b287-7360f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_fa290_939d1/rev_fa290-939d1.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2e656_b6e38/rev_2e656-b6e38.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_36012_1bded/rev_36012-1bded.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_fda37_4a2c1/rev_fda37-4a2c1.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_58e0e_70280/rev_58e0e-70280.revisions
Conflict type: LineBasedMCFd
Conflict body: 
~~FSTMerge~~ private volatile transient Reference<ChangeLogSet<? extends Entry>> changeSet; ##FSTMerge## private volatile transient ChangeLogSet<? extends Entry> changeSet; ##FSTMerge## private volatile transient WeakReference<ChangeLogSet<? extends Entry>> changeSet;
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_58e0e_70280/rev_58e0e-70280/core/src/main/java/hudson/model/AbstractBuild.java
Conflict type: LineBasedMCFd
Conflict body: 
private void checkout(BuildListener listener) throws Exception {
                for (int retryCount=project.getScmCheckoutRetryCount(); ; retryCount--) {
                    // for historical reasons, null in the scm field means CVS, so we need to explicitly set this to something
                    // in case check out fails and leaves a broken changelog.xml behind.
                    // see http://www.nabble.com/CVSChangeLogSet.parse-yields-SAXParseExceptions-when-parsing-bad-*AccuRev*-changelog.xml-files-td22213663.html
                    AbstractBuild.this.scm = NullChangeLogParser.INSTANCE;

                    try {
                        if (project.checkout(AbstractBuild.this,launcher,listener,new File(getRootDir(),"changelog.xml"))) {
                            // check out succeeded
                            SCM scm = project.getScm();

                            AbstractBuild.this.scm = scm.createChangeLogParser();
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417738893029/fstmerge_var1_246381650242850411
                            ChangeLogSet<? extends Entry> cs = AbstractBuild.this.calcChangeSet();
                            AbstractBuild.this.changeSet = new SoftReference(cs);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417738893029/fstmerge_base_7752737100144661249
                            AbstractBuild.this.changeSet = AbstractBuild.this.calcChangeSet();
=======
                            AbstractBuild.this.changeSet = new WeakReference<ChangeLogSet<? extends Entry>>(AbstractBuild.this.calcChangeSet());
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417738893029/fstmerge_var2_1094527968458228273

                            for (SCMListener l : Jenkins.getInstance().getSCMListeners())
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417738893029/fstmerge_var1_246381650242850411
                                l.onChangeLogParsed(AbstractBuild.this,listener,cs);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417738893029/fstmerge_base_7752737100144661249
                                l.onChangeLogParsed(AbstractBuild.this,listener,changeSet);
=======
                                l.onChangeLogParsed(AbstractBuild.this,listener,getChangeSet());
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417738893029/fstmerge_var2_1094527968458228273
                            return;
                        }
                    } catch (AbortException e) {
                        listener.error(e.getMessage());
                    } catch (InterruptedIOException e) {
                        throw (InterruptedException)new InterruptedException().initCause(e);
                    } catch (IOException e) {
                        // checkout error not yet reported
                        e.printStackTrace(listener.getLogger());
                    }

                    if (retryCount == 0)   // all attempts failed
                        throw new RunnerAbortedException();

                    listener.getLogger().println("Retrying after 10 seconds");
                    Thread.sleep(10000);
                }
        }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_58e0e_70280/rev_58e0e-70280/core/src/main/java/hudson/model/AbstractBuild.java
Conflict type: LineBasedMCFd
Conflict body: 
@Exported
    public ChangeLogSet<? extends Entry> getChangeSet() {
        synchronized (changeSetLock) {
            if (scm==null) {
                // for historical reason, null means CVS.
                try {
                    Class<?> c = Jenkins.getInstance().getPluginManager().uberClassLoader.loadClass("hudson.scm.CVSChangeLogParser");
                    scm = (ChangeLogParser)c.newInstance();
                } catch (ClassNotFoundException e) {
                    // if CVS isn't available, fall back to something non-null.
                    scm = NullChangeLogParser.INSTANCE;
                } catch (InstantiationException e) {
                    scm = NullChangeLogParser.INSTANCE;
                    throw (Error)new InstantiationError().initCause(e);
                } catch (IllegalAccessException e) {
                    scm = NullChangeLogParser.INSTANCE;
                    throw (Error)new IllegalAccessError().initCause(e);
                }
            }
    
            ChangeLogSet result = changeSet != null ? changeSet.get() : null;
            if (result == null) {
                try {
                    result = calcChangeSet();
                } finally {
                    // defensive check. if the calculation fails (such as through an exception),
                    // set a dummy value so that it'll work the next time. the exception will
                    // be still reported, giving the plugin developer an opportunity to fix it.
                    if (result == null) {
                        result = ChangeLogSet.createEmpty(this);
                    }
                }
                changeSet = new WeakReference<ChangeLogSet<? extends Entry>>(result);
            }
            return result;
        }
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417738893103/fstmerge_var1_7631655259390803918
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417738893103/fstmerge_base_7025579834977234492

        if (changeSet==null) // cached value
            try {
                changeSet = calcChangeSet();
            } finally {
                // defensive check. if the calculation fails (such as through an exception),
                // set a dummy value so that it'll work the next time. the exception will
                // be still reported, giving the plugin developer an opportunity to fix it.
                if (changeSet==null)
                    changeSet=ChangeLogSet.createEmpty(this);
            }
        return changeSet;
=======

        ChangeLogSet<? extends Entry> cs = null;
        if (changeSet!=null)
            cs = changeSet.get();

        if (cs==null)
            cs = calcChangeSet();

        // defensive check. if the calculation fails (such as through an exception),
        // set a dummy value so that it'll work the next time. the exception will
        // be still reported, giving the plugin developer an opportunity to fix it.
        if (cs==null)
            cs = ChangeLogSet.createEmpty(this);

        changeSet = new WeakReference<ChangeLogSet<? extends Entry>>(cs);
        return cs;
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417738893103/fstmerge_var2_8997657214067851034
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_58e0e_70280/rev_58e0e-70280/core/src/main/java/hudson/model/AbstractBuild.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_968c1_f2789/rev_968c1-f2789.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e85a2_1ac48/rev_e85a2-1ac48.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_24dc0_9db14/rev_24dc0-9db14.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_15665_689b3/rev_15665-689b3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_05937_bbcf2/rev_05937-bbcf2.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_42dbb_d0c9e/rev_42dbb-d0c9e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_51a53_48661/rev_51a53-48661.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8d220_8cce8/rev_8d220-8cce8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c1d2c_4d272/rev_c1d2c-4d272.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_73c3c_64ada/rev_73c3c-64ada.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1acb8_40e89/rev_1acb8-40e89.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2e8cb_6baef/rev_2e8cb-6baef.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5bda9_1ba1a/rev_5bda9-1ba1a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c690b_105c5/rev_c690b-105c5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f414d_0c1f8/rev_f414d-0c1f8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7bf8e_8b608/rev_7bf8e-8b608.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e2db7_5603f/rev_e2db7-5603f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2610d_156e6/rev_2610d-156e6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0e700_da760/rev_0e700-da760.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0551c_c4dd8/rev_0551c-c4dd8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4535b_7d71f/rev_4535b-7d71f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f6ad2_48fc0/rev_f6ad2-48fc0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4535b_f6ad2/rev_4535b-f6ad2.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e59fd_f5e2f/rev_e59fd-f5e2f.revisions
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417745694599/fstmerge_var1_2768920451579025553
public MenuItem(String url, String icon, String displayName) {
            this.url = url;
            this.icon = icon;
            this.displayName = Util.escape(displayName);
        }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417745694599/fstmerge_base_5006777214434611399
=======
public MenuItem(String url, String icon, String displayName) {
            this.url = URI.create(Stapler.getCurrentRequest().getRequestURI()).resolve(url).toString();
            this.icon = icon;
            this.displayName = Util.escape(displayName);
        }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417745694599/fstmerge_var2_7839777078435237144

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e59fd_f5e2f/rev_e59fd-f5e2f/core/src/main/java/jenkins/model/ModelObjectWithContextMenu.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a78e6_8f394/rev_a78e6-8f394.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8fff3_e708c/rev_8fff3-e708c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4f44e_0aba1/rev_4f44e-0aba1.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_684fe_f65c3/rev_684fe-f65c3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8f179_5454d/rev_8f179-5454d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3629a_39815/rev_3629a-39815.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3c5d7_5b574/rev_3c5d7-5b574.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4c53f_0b9fc/rev_4c53f-0b9fc.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7ae30_bb258/rev_7ae30-bb258.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ff4b0_5a2d5/rev_ff4b0-5a2d5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_07b3f_51f1c/rev_07b3f-51f1c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_24539_e4abe/rev_24539-e4abe.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1c041_1323a/rev_1c041-1323a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_19865_85e13/rev_19865-85e13.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0b486_e93e0/rev_0b486-e93e0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1d249_9dd77/rev_1d249-9dd77.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f8a0f_54325/rev_f8a0f-54325.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2e2c3_e330a/rev_2e2c3-e330a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2df71_e4244/rev_2df71-e4244.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9721b_5fb00/rev_9721b-5fb00.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1421c_0f08d/rev_1421c-0f08d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5a0f1_f0130/rev_5a0f1-f0130.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b5b73_0414b/rev_b5b73-0414b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_95c87_c15ce/rev_95c87-c15ce.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_be88e_32e79/rev_be88e-32e79.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e465f_37fbc/rev_e465f-37fbc.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_bb55c_ca3ad/rev_bb55c-ca3ad.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7681a_b96bb/rev_7681a-b96bb.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_795ff_26974/rev_795ff-26974.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7066d_d9892/rev_7066d-d9892.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a857a_5587d/rev_a857a-5587d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6f841_8060a/rev_6f841-8060a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_84f08_5f92a/rev_84f08-5f92a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0cc13_815c4/rev_0cc13-815c4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_fdaee_6cc90/rev_fdaee-6cc90.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_58267_35de7/rev_58267-35de7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_11c52_444ab/rev_11c52-444ab.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b5a34_3b5e9/rev_b5a34-3b5e9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7057b_57c78/rev_7057b-57c78.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c92c2_20713/rev_c92c2-20713.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4aab8_71deb/rev_4aab8-71deb.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2c065_7056b/rev_2c065-7056b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_79153_7a0bd/rev_79153-7a0bd.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b106f_3b01b/rev_b106f-3b01b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_fc962_3b01b/rev_fc962-3b01b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a4ddf_3cc8b/rev_a4ddf-3cc8b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f9885_aa7bf/rev_f9885-aa7bf.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ad291_7b8bb/rev_ad291-7b8bb.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1ccc7_f9d8e/rev_1ccc7-f9d8e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9d8f3_e8796/rev_9d8f3-e8796.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_88331_f19ee/rev_88331-f19ee.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7a84a_12470/rev_7a84a-12470.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_76edf_42563/rev_76edf-42563.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_15219_5dd51/rev_15219-5dd51.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c86aa_bbad3/rev_c86aa-bbad3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5753c_905a3/rev_5753c-905a3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1f5bc_fe679/rev_1f5bc-fe679.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4e877_6e58e/rev_4e877-6e58e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ec873_1589e/rev_ec873-1589e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_be1f8_95c17/rev_be1f8-95c17.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cd34e_18963/rev_cd34e-18963.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9d15a_10c1e/rev_9d15a-10c1e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e6b31_de205/rev_e6b31-de205.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_65c65_de205/rev_65c65-de205.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_12a2a_359ac/rev_12a2a-359ac.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0ffe9_46729/rev_0ffe9-46729.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e9ad7_fe0c7/rev_e9ad7-fe0c7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ef442_de147/rev_ef442-de147.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5a9f2_0e12f/rev_5a9f2-0e12f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_75c39_0dfb3/rev_75c39-0dfb3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_de593_0dfb3/rev_de593-0dfb3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_752a7_99b11/rev_752a7-99b11.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417767048473/fstmerge_var1_3964689527658920299
public void doXml(StaplerRequest req, StaplerResponse rsp,
                      @QueryParameter String xpath,
                      @QueryParameter String wrapper,
                      @QueryParameter int depth) throws IOException, ServletException {
        String[] excludes = req.getParameterValues("exclude");

        if(xpath==null && excludes==null) {
            // serve the whole thing
            rsp.serveExposedBean(req,bean,Flavor.XML);
            return;
        }

        StringWriter sw = new StringWriter();

        // first write to String
        Model p = MODEL_BUILDER.get(bean.getClass());
        p.writeTo(bean,depth,Flavor.XML.createDataWriter(bean,sw));

        // apply XPath
        Object result;
        try {
            Document dom = new SAXReader().read(new StringReader(sw.toString()));

            // apply exclusions
            if (excludes!=null) {
                for (String exclude : excludes) {
                    List<org.dom4j.Node> list = (List<org.dom4j.Node>)dom.selectNodes(exclude);
                    for (org.dom4j.Node n : list) {
                        Element parent = n.getParent();
                        if(parent!=null)
                            parent.remove(n);
                    }
                }
            }
            
            if(xpath==null) {
            	result = dom;
            } else {
                List list = dom.selectNodes(xpath);
                if (wrapper!=null) {
                    Element root = DocumentFactory.getInstance().createElement(wrapper);
                    for (Object o : list) {
                        if (o instanceof String) {
                            root.addText(o.toString());
                        } else {
                            root.add(((org.dom4j.Node)o).detach());
                        }
                    }
                    result = root;
                } else if (list.isEmpty()) {
                    rsp.setStatus(HttpServletResponse.SC_NOT_FOUND);
                    rsp.getWriter().print(Messages.Api_NoXPathMatch(xpath));
                    return;
                } else if (list.size() > 1) {
                    rsp.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
                    rsp.getWriter().print(Messages.Api_MultipleMatch(xpath,list.size()));
                    return;
                } else {
                    result = list.get(0);
                }
            }

        } catch (DocumentException e) {
            LOGGER.log(Level.FINER, "Failed to do XPath/wrapper handling. XML is as follows:"+sw, e);
            throw new IOException2("Failed to do XPath/wrapper handling. Turn on FINER logging to view XML.",e);
        }

        OutputStream o = rsp.getCompressedOutputStream(req);
        try {
            if(result instanceof CharacterData) {
                rsp.setContentType("text/plain;charset=UTF-8");
                o.write(((CharacterData)result).getText().getBytes("UTF-8"));
                return;
            }

            if(result instanceof String || result instanceof Number || result instanceof Boolean) {
                rsp.setContentType("text/plain;charset=UTF-8");
                o.write(result.toString().getBytes("UTF-8"));
                return;
            }

            // otherwise XML
            rsp.setContentType("application/xml;charset=UTF-8");
            new XMLWriter(o).write(result);
        } finally {
            o.close();
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417767048473/fstmerge_base_3396597898818740978
public void doXml(StaplerRequest req, StaplerResponse rsp,
                      @QueryParameter String xpath,
                      @QueryParameter String wrapper,
                      @QueryParameter int depth) throws IOException, ServletException {
        String[] excludes = req.getParameterValues("exclude");

        if(xpath==null && excludes==null) {
            // serve the whole thing
            rsp.serveExposedBean(req,bean,Flavor.XML);
            return;
        }

        StringWriter sw = new StringWriter();

        // first write to String
        Model p = MODEL_BUILDER.get(bean.getClass());
        p.writeTo(bean,depth,Flavor.XML.createDataWriter(bean,sw));

        // apply XPath
        Object result;
        try {
            Document dom = new SAXReader().read(new StringReader(sw.toString()));

            // apply exclusions
            if (excludes!=null) {
                for (String exclude : excludes) {
                    List<org.dom4j.Node> list = (List<org.dom4j.Node>)dom.selectNodes(exclude);
                    for (org.dom4j.Node n : list) {
                        Element parent = n.getParent();
                        if(parent!=null)
                            parent.remove(n);
                    }
                }
            }
            
            if(xpath==null) {
            	result = dom;
            } else {
                List list = dom.selectNodes(xpath);
                if (wrapper!=null) {
                    Element root = DocumentFactory.getInstance().createElement(wrapper);
                    for (Object o : list) {
                        if (o instanceof String) {
                            root.addText(o.toString());
                        } else {
                            root.add(((org.dom4j.Node)o).detach());
                        }
                    }
                    result = root;
                } else if (list.isEmpty()) {
                    rsp.setStatus(HttpServletResponse.SC_NOT_FOUND);
                    rsp.getWriter().print(Messages.Api_NoXPathMatch(xpath));
                    return;
                } else if (list.size() > 1) {
                    rsp.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
                    rsp.getWriter().print(Messages.Api_MultipleMatch(xpath,list.size()));
                    return;
                } else {
                    result = list.get(0);
                }
            }

        } catch (DocumentException e) {
            throw new IOException2("Failed to do XPath/wrapper handling. XML is as follows:"+sw,e);
        }

        OutputStream o = rsp.getCompressedOutputStream(req);
        try {
            if(result instanceof CharacterData) {
                rsp.setContentType("text/plain;charset=UTF-8");
                o.write(((CharacterData)result).getText().getBytes("UTF-8"));
                return;
            }

            if(result instanceof String || result instanceof Number || result instanceof Boolean) {
                rsp.setContentType("text/plain;charset=UTF-8");
                o.write(result.toString().getBytes("UTF-8"));
                return;
            }

            // otherwise XML
            rsp.setContentType("application/xml;charset=UTF-8");
            new XMLWriter(o).write(result);
        } finally {
            o.close();
        }
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417767048473/fstmerge_var2_5698833966723837708

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_752a7_99b11/rev_752a7-99b11/core/src/main/java/hudson/model/Api.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ddd68_0032c/rev_ddd68-0032c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d3f23_372e8/rev_d3f23-372e8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_18e6e_4ec7e/rev_18e6e-4ec7e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d5513_dea95/rev_d5513-dea95.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_72fba_5d78f/rev_72fba-5d78f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_201bd_3445f/rev_201bd-3445f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_201bd_3427f/rev_201bd-3427f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_fed2d_368bd/rev_fed2d-368bd.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e8137_8b9b5/rev_e8137-8b9b5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_afff1_1a42a/rev_afff1-1a42a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c6675_03a63/rev_c6675-03a63.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8234d_f49d6/rev_8234d-f49d6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0af54_966b1/rev_0af54-966b1.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9bdaf_6c70a/rev_9bdaf-6c70a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_20274_9fbd6/rev_20274-9fbd6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_eef3e_655aa/rev_eef3e-655aa.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1e9c9_1079d/rev_1e9c9-1079d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d1de1_a2f2a/rev_d1de1-a2f2a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_fb837_03ac3/rev_fb837-03ac3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ee645_d7bd7/rev_ee645-d7bd7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d46ba_d1d66/rev_d46ba-d1d66.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_30837_f5d37/rev_30837-f5d37.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1ae1a_57a4c/rev_1ae1a-57a4c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a811f_12ee4/rev_a811f-12ee4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b3b91_90895/rev_b3b91-90895.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_54134_efd4a/rev_54134-efd4a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_051b0_d66b2/rev_051b0-d66b2.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ae3da_051b0/rev_ae3da-051b0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_437f7_2f128/rev_437f7-2f128.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_76ac1_14cbd/rev_76ac1-14cbd.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d1f7f_e1562/rev_d1f7f-e1562.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_91f47_931fa/rev_91f47-931fa.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2ff4c_06ff4/rev_2ff4c-06ff4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_260ab_75130/rev_260ab-75130.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_13941_1045c/rev_13941-1045c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_03546_13941/rev_03546-13941.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c575e_468c5/rev_c575e-468c5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_86f25_45a38/rev_86f25-45a38.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_dd621_2d4d4/rev_dd621-2d4d4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a2c78_2ead8/rev_a2c78-2ead8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a9a01_1dcd3/rev_a9a01-1dcd3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5bb82_7bd90/rev_5bb82-7bd90.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_39572_7c18b/rev_39572-7c18b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0bd4a_10ddd/rev_0bd4a-10ddd.revisions
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417788875971/fstmerge_var1_2239214343023152827
@Override
        public void print(TaskListener listener) {
            listener.getLogger().println(Messages.BuildCommand_CLICause_ShortDescription(
                    ModelHyperlinkNote.encodeTo("/user/" + startedBy, startedBy)));
        }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417788875971/fstmerge_base_3963209620397093131
=======
@Override
        public void print(TaskListener listener) {
            listener.getLogger().println("Started by command line by " +
                    ModelHyperlinkNote.encodeTo("/user/"+getUserId(), getUserName()));
        }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417788875971/fstmerge_var2_1961330592660490621

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0bd4a_10ddd/rev_0bd4a-10ddd/core/src/main/java/hudson/cli/BuildCommand.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f3aee_bd006/rev_f3aee-bd006.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7e0d7_c14c7/rev_7e0d7-c14c7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_bfa64_aaecf/rev_bfa64-aaecf.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_812ff_ee64b/rev_812ff-ee64b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1a5e4_bfcc9/rev_1a5e4-bfcc9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_95d06_5a40f/rev_95d06-5a40f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d5e51_20a5d/rev_d5e51-20a5d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e5ea0_4e944/rev_e5ea0-4e944.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c733b_02d37/rev_c733b-02d37.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6c0b4_c733b/rev_6c0b4-c733b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_fc67a_3b5da/rev_fc67a-3b5da.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ed020_eb7a2/rev_ed020-eb7a2.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4b64f_5ced8/rev_4b64f-5ced8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d73f0_ec843/rev_d73f0-ec843.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_680ee_7fead/rev_680ee-7fead.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a267a_a0c02/rev_a267a-a0c02.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c97f3_ce0a3/rev_c97f3-ce0a3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c00c0_fb614/rev_c00c0-fb614.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c20ed_c8adf/rev_c20ed-c8adf.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_937b3_8c676/rev_937b3-8c676.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f4afc_ba2a8/rev_f4afc-ba2a8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f05c4_5dd90/rev_f05c4-5dd90.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2d776_6934a/rev_2d776-6934a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6782f_1fb75/rev_6782f-1fb75.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ed28a_0b02a/rev_ed28a-0b02a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_01482_bd751/rev_01482-bd751.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d7340_c5c55/rev_d7340-c5c55.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8fe2a_d7340/rev_8fe2a-d7340.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_64615_515c8/rev_64615-515c8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c47fc_cf9ef/rev_c47fc-cf9ef.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_018d8_f8daa/rev_018d8-f8daa.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_85ee5_25857/rev_85ee5-25857.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ca653_85ee5/rev_ca653-85ee5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6b056_020e4/rev_6b056-020e4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_28d27_1f9ce/rev_28d27-1f9ce.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0b1d3_f1aa7/rev_0b1d3-f1aa7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0431d_e6937/rev_0431d-e6937.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_37e14_e1b7a/rev_37e14-e1b7a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ed867_583fb/rev_ed867-583fb.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1bab7_1906f/rev_1bab7-1906f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0d69b_1e9ab/rev_0d69b-1e9ab.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5bb10_f9583/rev_5bb10-f9583.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cf621_968bc/rev_cf621-968bc.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4ab9c_c1579/rev_4ab9c-c1579.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_90d46_4ab9c/rev_90d46-4ab9c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_990e3_454d0/rev_990e3-454d0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e7854_23ade/rev_e7854-23ade.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_936cc_823cd/rev_936cc-823cd.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4b4d3_f79b5/rev_4b4d3-f79b5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7add5_8fb12/rev_7add5-8fb12.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_01b28_604e7/rev_01b28-604e7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3aaac_f4c81/rev_3aaac-f4c81.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_03ebd_60846/rev_03ebd-60846.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b64fa_7ef34/rev_b64fa-7ef34.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e6685_14098/rev_e6685-14098.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c0df1_7a552/rev_c0df1-7a552.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_300bf_5694a/rev_300bf-5694a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3d75e_1c861/rev_3d75e-1c861.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_00d7c_fe934/rev_00d7c-fe934.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b7e50_7a4c2/rev_b7e50-7a4c2.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c2c6c_b7e50/rev_c2c6c-b7e50.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7624c_3e5b4/rev_7624c-3e5b4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ac3b2_04c87/rev_ac3b2-04c87.revisions
Conflict type: LineBasedMCFd
Conflict body: 
public SortedList(List<T> data) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417910149173/fstmerge_var1_9216672211303118848
        this.data = new ArrayList(data);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417910149173/fstmerge_base_4862978370138225921
        this.data = data;
=======
        this.data = new ArrayList<T>(data);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1417910149173/fstmerge_var2_1496892359189122904
        assert isSorted();
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ac3b2_04c87/rev_ac3b2-04c87/core/src/main/java/jenkins/model/lazy/SortedList.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_82379_eb18f/rev_82379-eb18f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_954f0_8dbee/rev_954f0-8dbee.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a5814_cb534/rev_a5814-cb534.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6eba5_dcea7/rev_6eba5-dcea7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8f7d1_ced5c/rev_8f7d1-ced5c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_519e6_2dd76/rev_519e6-2dd76.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d7fef_519e6/rev_d7fef-519e6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2be87_7baf7/rev_2be87-7baf7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0f5e2_8968e/rev_0f5e2-8968e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e3b79_eac8e/rev_e3b79-eac8e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_999f4_18d0c/rev_999f4-18d0c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ee43b_3b91f/rev_ee43b-3b91f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a858d_6f789/rev_a858d-6f789.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_edbe2_69ef2/rev_edbe2-69ef2.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f66e1_edbe2/rev_f66e1-edbe2.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d7ef5_70706/rev_d7ef5-70706.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_eb4aa_85019/rev_eb4aa-85019.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d56ba_52274/rev_d56ba-52274.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3d469_1c578/rev_3d469-1c578.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0f106_c79d5/rev_0f106-c79d5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f8888_abeeb/rev_f8888-abeeb.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3ae85_fcbc0/rev_3ae85-fcbc0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6c830_ff3cf/rev_6c830-ff3cf.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_feba7_38a78/rev_feba7-38a78.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5cd87_9a0d5/rev_5cd87-9a0d5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5cd87_1314f/rev_5cd87-1314f.revisions

=========================================================
=========================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_56a5a_bc4ab/rev_56a5a-bc4ab.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b33e9_f79f5/rev_b33e9-f79f5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_30927_90052/rev_30927-90052.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f110f_7eb9e/rev_f110f-7eb9e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_bc208_58484/rev_bc208-58484.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9ff0a_fd281/rev_9ff0a-fd281.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a9b54_4e8dc/rev_a9b54-4e8dc.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_37768_521f7/rev_37768-521f7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cb419_32748/rev_cb419-32748.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4de78_7afae/rev_4de78-7afae.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_40439_7bf6c/rev_40439-7bf6c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_bdad2_734e7/rev_bdad2-734e7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_51f71_9e205/rev_51f71-9e205.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ec0b5_ebd79/rev_ec0b5-ebd79.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_89000_ec0b5/rev_89000-ec0b5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d6ea1_1476f/rev_d6ea1-1476f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7a4ae_d32f9/rev_7a4ae-d32f9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b47f5_c4942/rev_b47f5-c4942.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7fb1a_81677/rev_7fb1a-81677.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_10f4c_cac3e/rev_10f4c-cac3e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3b907_214c2/rev_3b907-214c2.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_950c1_cdbd5/rev_950c1-cdbd5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cf66a_fa24d/rev_cf66a-fa24d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_84d2e_a313e/rev_84d2e-a313e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5c8c6_2b56d/rev_5c8c6-2b56d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_317bd_b8078/rev_317bd-b8078.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4cd8c_e8366/rev_4cd8c-e8366.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c222a_7f1f1/rev_c222a-7f1f1.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4440e_4dde2/rev_4440e-4dde2.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ac060_609a1/rev_ac060-609a1.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_eeb04_05225/rev_eeb04-05225.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c6190_b89b4/rev_c6190-b89b4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b6ce0_87e21/rev_b6ce0-87e21.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_52371_97b02/rev_52371-97b02.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_fe831_32be4/rev_fe831-32be4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_bf752_228b8/rev_bf752-228b8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4666a_c6720/rev_4666a-c6720.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9f41a_327b9/rev_9f41a-327b9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_599ed_8e742/rev_599ed-8e742.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_22649_63b6e/rev_22649-63b6e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2f20f_82d75/rev_2f20f-82d75.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2b90d_de9b8/rev_2b90d-de9b8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c8273_38152/rev_c8273-38152.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_75fc9_a9fc2/rev_75fc9-a9fc2.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_61ae7_3cfa3/rev_61ae7-3cfa3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6536c_79cc2/rev_6536c-79cc2.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cf58b_6d95e/rev_cf58b-6d95e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2fd5f_49d13/rev_2fd5f-49d13.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_dc06b_d43b9/rev_dc06b-d43b9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f18fa_da076/rev_f18fa-da076.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ed0de_6693d/rev_ed0de-6693d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_73aac_97a35/rev_73aac-97a35.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c938a_73aac/rev_c938a-73aac.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_981e7_61ed2/rev_981e7-61ed2.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_41e87_87d24/rev_41e87-87d24.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_edb6d_1d9f0/rev_edb6d-1d9f0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3f9c3_66e8f/rev_3f9c3-66e8f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d4657_35e16/rev_d4657-35e16.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_31d2e_31cd0/rev_31d2e-31cd0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8568e_4cab4/rev_8568e-4cab4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_94a87_8568e/rev_94a87-8568e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0cef4_cc32c/rev_0cef4-cc32c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b4a17_97528/rev_b4a17-97528.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_71db8_5c0d9/rev_71db8-5c0d9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c3144_70fba/rev_c3144-70fba.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f07fc_667c9/rev_f07fc-667c9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d697d_2eed6/rev_d697d-2eed6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c3495_08efd/rev_c3495-08efd.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c757e_db9f8/rev_c757e-db9f8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d85dc_99f14/rev_d85dc-99f14.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9ab52_f178f/rev_9ab52-f178f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b68b8_cff4f/rev_b68b8-cff4f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_35f76_6b1cc/rev_35f76-6b1cc.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a1e70_e6d4b/rev_a1e70-e6d4b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_77b49_251fc/rev_77b49-251fc.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_91bba_de900/rev_91bba-de900.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0b5a4_c4c2a/rev_0b5a4-c4c2a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e59e7_5e0a4/rev_e59e7-5e0a4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ae094_a4804/rev_ae094-a4804.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_086d7_c6968/rev_086d7-c6968.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c846f_e11c0/rev_c846f-e11c0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_222cd_30214/rev_222cd-30214.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1c907_f9da4/rev_1c907-f9da4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c1c97_9a95d/rev_c1c97-9a95d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_26cc2_39a77/rev_26cc2-39a77.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_19f3b_92d87/rev_19f3b-92d87.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2feb1_92d87/rev_2feb1-92d87.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_fe95f_e43e5/rev_fe95f-e43e5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_629b4_37bf3/rev_629b4-37bf3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d614c_dac37/rev_d614c-dac37.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_93322_eca8a/rev_93322-eca8a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ca2d4_9a155/rev_ca2d4-9a155.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_98136_adeed/rev_98136-adeed.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f4496_46d94/rev_f4496-46d94.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7fdd2_62705/rev_7fdd2-62705.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_17d15_f3a2a/rev_17d15-f3a2a.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418173555208/fstmerge_var1_5213342196033293786
@PresetData(DataSet.ANONYMOUS_READONLY)
    @Email("http://www.nabble.com/Launching-slave-by-JNLP-with-Active-Directory-plugin-and-matrix-security-problem-td18980323.html")
    public void test() throws Exception {
        jenkins.setNodes(Collections.singletonList(createNewJnlpSlave("test")));
        HudsonTestCase.WebClient wc = new WebClient();
        HtmlPage p = wc.login("alice").goTo("computer/test/");

        // this fresh WebClient doesn't have a login cookie and represent JNLP launcher
        HudsonTestCase.WebClient jnlpAgent = new WebClient();

        // parse the JNLP page into DOM to list up the jars.
        XmlPage jnlp = (XmlPage) wc.goTo("computer/test/slave-agent.jnlp","application/x-java-jnlp-file");
        URL baseUrl = jnlp.getWebResponse().getUrl();
        Document dom = new DOMReader().read(jnlp.getXmlDocument());
        for( Element jar : (List<Element>)dom.selectNodes("//jar") ) {
            URL url = new URL(baseUrl,jar.attributeValue("href"));
            System.out.println(url);
            
            // now make sure that these URLs are unprotected
            Page jarResource = jnlpAgent.getPage(url);
            assertTrue(jarResource.getWebResponse().getContentType().toLowerCase(Locale.ENGLISH).startsWith("application/"));
        }

        // XXX this should be the only part with ANONYMOUS_READONLY
        try {
            jnlp = (XmlPage) jnlpAgent.goTo("computer/test/slave-agent.jnlp", "application/x-java-jnlp-file");
            fail("anonymous users must not be able to get secrets");
        } catch (FailingHttpStatusCodeException x) {
            assertEquals(HttpURLConnection.HTTP_FORBIDDEN, x.getStatusCode());
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418173555208/fstmerge_base_2491425293301843347
@PresetData(DataSet.ANONYMOUS_READONLY)
    @Email("http://www.nabble.com/Launching-slave-by-JNLP-with-Active-Directory-plugin-and-matrix-security-problem-td18980323.html")
    public void test() throws Exception {
        jenkins.setNodes(Collections.singletonList(createNewJnlpSlave("test")));
        HudsonTestCase.WebClient wc = new WebClient();
        HtmlPage p = wc.login("alice").goTo("computer/test/");

        // this fresh WebClient doesn't have a login cookie and represent JNLP launcher
        HudsonTestCase.WebClient jnlpAgent = new WebClient();

        // parse the JNLP page into DOM to list up the jars.
        XmlPage jnlp = (XmlPage) wc.goTo("computer/test/slave-agent.jnlp","application/x-java-jnlp-file");
        URL baseUrl = jnlp.getWebResponse().getUrl();
        Document dom = new DOMReader().read(jnlp.getXmlDocument());
        for( Element jar : (List<Element>)dom.selectNodes("//jar") ) {
            URL url = new URL(baseUrl,jar.attributeValue("href"));
            System.out.println(url);
            
            // now make sure that these URLs are unprotected
            Page jarResource = jnlpAgent.getPage(url);
            assertTrue(jarResource.getWebResponse().getContentType().toLowerCase(Locale.ENGLISH).startsWith("application/"));
        }


        try {
            jnlp = (XmlPage) jnlpAgent.goTo("computer/test/slave-agent.jnlp", "application/x-java-jnlp-file");
            fail("anonymous users must not be able to get secrets");
        } catch (FailingHttpStatusCodeException x) {
            assertEquals(HttpURLConnection.HTTP_FORBIDDEN, x.getStatusCode());
        }
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418173555208/fstmerge_var2_6188948183081839339

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_17d15_f3a2a/rev_17d15-f3a2a/test/src/test/java/hudson/bugs/JnlpAccessWithSecuredHudsonTest.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cff69_9e68f/rev_cff69-9e68f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4bf43_17fab/rev_4bf43-17fab.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c98ca_85a35/rev_c98ca-85a35.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9a5c6_c98ca/rev_9a5c6-c98ca.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_263b4_594fd/rev_263b4-594fd.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_940d7_84ea0/rev_940d7-84ea0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5d68a_8ccb4/rev_5d68a-8ccb4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_088c0_408ed/rev_088c0-408ed.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cedfd_b76f1/rev_cedfd-b76f1.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_bbf1a_b14a7/rev_bbf1a-b14a7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_20bbc_f5abe/rev_20bbc-f5abe.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7f529_2b125/rev_7f529-2b125.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_df00b_9eb05/rev_df00b-9eb05.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418177639102/fstmerge_var1_2048384585966479632
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418177639102/fstmerge_base_1783672030311442112
public void testEncodeAmpersand() {
        final String urlWithAmpersand = "http://hudson/job/Hudson-job/label1&&label2";
        String encoded = Util.encode(urlWithAmpersand);
        assertEquals(encoded, "http://hudson/job/Hudson-job/label1%26%26label2");
    }
=======
@Test
    public void testEncodeAmpersand() {
        final String urlWithAmpersand = "http://hudson/job/Hudson-job/label1&&label2";
        String encoded = Util.encode(urlWithAmpersand);
        assertEquals(encoded, "http://hudson/job/Hudson-job/label1%26%26label2");
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418177639102/fstmerge_var2_7910633840800036140

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_df00b_9eb05/rev_df00b-9eb05/core/src/test/java/hudson/UtilTest.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_421df_df4da/rev_421df-df4da.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_fd811_9dcb0/rev_fd811-9dcb0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d62e9_70780/rev_d62e9-70780.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_94ae0_54bbb/rev_94ae0-54bbb.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c329f_94472/rev_c329f-94472.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_73484_36d7e/rev_73484-36d7e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_179f7_db230/rev_179f7-db230.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7ae05_fa50b/rev_7ae05-fa50b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_118ed_5aef9/rev_118ed-5aef9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4fa1c_da441/rev_4fa1c-da441.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_83983_c41aa/rev_83983-c41aa.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_07981_78807/rev_07981-78807.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_16176_90ab8/rev_16176-90ab8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c8a12_50f14/rev_c8a12-50f14.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c8faf_14fc6/rev_c8faf-14fc6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d463a_1e624/rev_d463a-1e624.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c3d9b_f54a9/rev_c3d9b-f54a9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_fba6b_ba139/rev_fba6b-ba139.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_36d2d_fa6c9/rev_36d2d-fa6c9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f373c_a12b9/rev_f373c-a12b9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_16ff5_70f81/rev_16ff5-70f81.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2f781_f7c9e/rev_2f781-f7c9e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_fe9f6_3b58c/rev_fe9f6-3b58c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0c06e_5dccb/rev_0c06e-5dccb.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6d904_7c306/rev_6d904-7c306.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2c44a_320ee/rev_2c44a-320ee.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f43cd_77e01/rev_f43cd-77e01.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_aeb88_5069a/rev_aeb88-5069a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2454c_fe099/rev_2454c-fe099.revisions
Conflict type: LineBasedMCFd
Conflict body: 
@Override
    public boolean perform(AbstractBuild<?,?> build, Launcher launcher, BuildListener listener) throws InterruptedException {
        if(artifacts.length()==0) {
            listener.error(Messages.ArtifactArchiver_NoIncludes());
            build.setResult(Result.FAILURE);
            return true;
        }
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418186899882/fstmerge_var1_1722157908815092405

        File dir = build.getArtifactsDir();
        dir.mkdirs();
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418186899882/fstmerge_base_4069396636346473102
        
        File dir = build.getArtifactsDir();
        dir.mkdirs();
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418186899882/fstmerge_var2_2055937385370855905

        listener.getLogger().println(Messages.ArtifactArchiver_ARCHIVING_ARTIFACTS());
        try {
            FilePath ws = build.getWorkspace();
            if (ws==null) { // #3330: slave down?
                return true;
            }

            String artifacts = build.getEnvironment(listener).expand(this.artifacts);

            if (build.pickArtifactManager().archive(build, ws, launcher, listener, artifacts, excludes) == 0) {
                if(build.getResult().isBetterOrEqualTo(Result.UNSTABLE)) {
                    // If the build failed, don't complain that there was no matching artifact.
                    // The build probably didn't even get to the point where it produces artifacts. 
                    listenerWarnOrError(listener, Messages.ArtifactArchiver_NoMatchFound(artifacts));
                    String msg = null;
                    try {
                    	msg = ws.validateAntFileMask(artifacts);
                    } catch (Exception e) {
                    	listenerWarnOrError(listener, e.getMessage());
                    }
                    if(msg!=null)
                        listenerWarnOrError(listener, msg);
                }
                if (!allowEmptyArchive) {
                	build.setResult(Result.FAILURE);
                }
                return true;
            }
        } catch (IOException e) {
            Util.displayIOException(e,listener);
            e.printStackTrace(listener.error(
                    Messages.ArtifactArchiver_FailedToArchive(artifacts)));
            build.setResult(Result.FAILURE);
            return true;
        }

        return true;
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2454c_fe099/rev_2454c-fe099/core/src/main/java/hudson/tasks/ArtifactArchiver.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_919ba_a4f16/rev_919ba-a4f16.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2857f_e96d8/rev_2857f-e96d8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_59b46_3370e/rev_59b46-3370e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a16c5_f77cd/rev_a16c5-f77cd.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8a3e9_fdc09/rev_8a3e9-fdc09.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_42734_a689c/rev_42734-a689c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0c467_8ef26/rev_0c467-8ef26.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f6a2f_3e71c/rev_f6a2f-3e71c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_56c6a_ccf84/rev_56c6a-ccf84.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_55372_56c6a/rev_55372-56c6a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_38cbd_aa432/rev_38cbd-aa432.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_232f6_dcb39/rev_232f6-dcb39.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8f6bf_ed712/rev_8f6bf-ed712.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b4127_1bf95/rev_b4127-1bf95.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7f92a_c4760/rev_7f92a-c4760.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_45457_cedf1/rev_45457-cedf1.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_45457_21f25/rev_45457-21f25.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_57900_398fa/rev_57900-398fa.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ebcca_a4d43/rev_ebcca-a4d43.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1f095_70d8a/rev_1f095-70d8a.revisions
Conflict type: LineBasedMCFd
Conflict body: 
public @CheckForNull String checkSanity() {
        OUTER: for (int i = 0; i < 5; i++) {
            long bitMask = (i<4)?bits[i]:(long)dayOfWeek;
            for( int j=BaseParser.LOWER_BOUNDS[i]; j<=BaseParser.UPPER_BOUNDS[i]; j++ ) {
                if(!checkBits(bitMask,j)) {
                    // this rank has a sparse entry.
                    // if we have a sparse rank, one of them better be the left-most.
                    if(i>0)
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418193433886/fstmerge_var1_9173843152161968849
                        return Messages.CronTab_do_you_really_mean_every_minute_when_you(spec, "0 " + spec.substring(spec.indexOf(' ')+1));
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418193433886/fstmerge_base_9215883613862394366
                        return "Do you really mean \"every minute\" when you say \""+spec+"\"? "+
                                "Perhaps you meant \"0 "+spec.substring(spec.indexOf(' ')+1)+"\"";
=======
                        return Messages.CronTab_do_you_really_mean_every_minute_when_you(spec, "H " + spec.substring(spec.indexOf(' ') + 1));
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418193433886/fstmerge_var2_1547011761631869497
                    // once we find a sparse rank, upper ranks don't matter
                    break OUTER;
                }
            }
        }

        String hashified = hashify(spec);
        if (hashified != null) {
            return Messages.CronTab_spread_load_evenly_by_using_rather_than_(hashified, spec);
        }

        return null;
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1f095_70d8a/rev_1f095-70d8a/core/src/main/java/hudson/scheduler/CronTab.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418193438287/fstmerge_var1_1138480762093456980
@Test public void checkSanity() throws Exception {
        assertEquals(Messages.CronTab_do_you_really_mean_every_minute_when_you("* * * * *", "0 * * * *"), new CronTab("* * * * *").checkSanity());
        assertEquals(null, new CronTab("0 * * * *").checkSanity());
        assertEquals(null, new CronTab("0 3 * * *").checkSanity());
        assertEquals(null, new CronTab("H H(0-2) * * *", Hash.from("stuff")).checkSanity());
        assertEquals(Messages.CronTab_do_you_really_mean_every_minute_when_you("* 0 * * *", "0 0 * * *"), new CronTab("* 0 * * *").checkSanity());
        assertEquals(Messages.CronTab_do_you_really_mean_every_minute_when_you("* 6,18 * * *", "0 6,18 * * *"), new CronTab("* 6,18 * * *").checkSanity());
        // dubious; could be improved:
        assertEquals(Messages.CronTab_do_you_really_mean_every_minute_when_you("* * 3 * *", "0 * 3 * *"), new CronTab("* * 3 * *").checkSanity());
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418193438287/fstmerge_base_4005606728142719919
=======
@Test public void checkSanity() throws Exception {
        assertEquals(null, new CronTab("@hourly").checkSanity());
        assertEquals(Messages.CronTab_do_you_really_mean_every_minute_when_you("* * * * *", "H * * * *"), new CronTab("* * * * *").checkSanity());
        assertEquals(Messages.CronTab_do_you_really_mean_every_minute_when_you("*/1 * * * *", "H * * * *"), new CronTab("*/1 * * * *").checkSanity());
        assertEquals(null, new CronTab("H H(0-2) * * *", Hash.from("stuff")).checkSanity());
        assertEquals(Messages.CronTab_do_you_really_mean_every_minute_when_you("* 0 * * *", "H 0 * * *"), new CronTab("* 0 * * *").checkSanity());
        assertEquals(Messages.CronTab_do_you_really_mean_every_minute_when_you("* 6,18 * * *", "H 6,18 * * *"), new CronTab("* 6,18 * * *").checkSanity());
        // dubious; could be improved:
        assertEquals(Messages.CronTab_do_you_really_mean_every_minute_when_you("* * 3 * *", "H * 3 * *"), new CronTab("* * 3 * *").checkSanity());
        // promote hashes:
        assertEquals(Messages.CronTab_spread_load_evenly_by_using_rather_than_("H/15 * * * *", "*/15 * * * *"), new CronTab("*/15 * * * *").checkSanity());
        assertEquals(Messages.CronTab_spread_load_evenly_by_using_rather_than_("H/15 * * * *", "0,15,30,45 * * * *"), new CronTab("0,15,30,45 * * * *").checkSanity());
        assertEquals(Messages.CronTab_spread_load_evenly_by_using_rather_than_("H * * * *", "0 * * * *"), new CronTab("0 * * * *").checkSanity());
        assertEquals(Messages.CronTab_spread_load_evenly_by_using_rather_than_("H * * * *", "5 * * * *"), new CronTab("5 * * * *").checkSanity());
        // if the user specifically asked for 3:00 AM, probably we should stick to 3:00–3:59
        assertEquals(Messages.CronTab_spread_load_evenly_by_using_rather_than_("H 3 * * *", "0 3 * * *"), new CronTab("0 3 * * *").checkSanity());
        assertEquals(Messages.CronTab_spread_load_evenly_by_using_rather_than_("H 22 * * 6", "00 22 * * 6"), new CronTab("00 22 * * 6").checkSanity());
        assertEquals(null, new CronTab("H/15 * 1 1 *").checkSanity());
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418193438287/fstmerge_var2_6799469858436499143

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1f095_70d8a/rev_1f095-70d8a/core/src/test/java/hudson/scheduler/CronTabTest.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418193438296/fstmerge_var1_1064217512438686428
@Test
    public void testHash1() throws Exception {
        CronTab x = new CronTab("H H(5-8) * * *",new Hash() {
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418193438296/fstmerge_base_2582203533166677688
public void testHash1() throws Exception {
        CronTab x = new CronTab("H H(5-8) * * *",new Hash() {
=======
@Test
    public void testHash1() throws Exception {
        CronTab x = new CronTab("H H(5-8) H/3 H(1-10)/4 *",new Hash() {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418193438296/fstmerge_var2_5552761085766173451
            public int next(int n) {
                return n-1;
            }
        });

<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418193438296/fstmerge_var1_1064217512438686428
        assertEquals("59;", bitset(x.bits[0]));
        assertEquals("8;", bitset(x.bits[1]));
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418193438296/fstmerge_base_2582203533166677688
        assertEquals(x.bits[0],1L<<59);
        assertEquals(x.bits[1],1L<<8);
=======
        assertEquals("59;", bitset(x.bits[0]));
        assertEquals("8;", bitset(x.bits[1]));
        assertEquals("3;6;9;12;15;18;21;24;27;", bitset(x.bits[2]));
        assertEquals("4;8;", bitset(x.bits[3]));
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418193438296/fstmerge_var2_5552761085766173451
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1f095_70d8a/rev_1f095-70d8a/core/src/test/java/hudson/scheduler/CronTabTest.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418193438305/fstmerge_var1_2409384538566848320
@Test
    public void testHash2() throws Exception {
        CronTab x = new CronTab("H H(5-8) * * *",new Hash() {
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418193438305/fstmerge_base_8898863427127485993
public void testHash2() throws Exception {
        CronTab x = new CronTab("H H(5-8) * * *",new Hash() {
=======
@Test
    public void testHash2() throws Exception {
        CronTab x = new CronTab("H H(5-8) H/3 H(1-10)/4 *",new Hash() {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418193438305/fstmerge_var2_927208971202599729
            public int next(int n) {
                return 1;
            }
        });

<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418193438305/fstmerge_var1_2409384538566848320
        assertEquals("1;", bitset(x.bits[0]));
        assertEquals("6;", bitset(x.bits[1]));
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418193438305/fstmerge_base_8898863427127485993
        assertEquals(x.bits[0],1L<<1);
        assertEquals(x.bits[1],1L<<6);
=======
        assertEquals("1;", bitset(x.bits[0]));
        assertEquals("6;", bitset(x.bits[1]));
        assertEquals("2;5;8;11;14;17;20;23;26;", bitset(x.bits[2]));
        assertEquals("2;6;10;", bitset(x.bits[3]));
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418193438305/fstmerge_var2_927208971202599729
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1f095_70d8a/rev_1f095-70d8a/core/src/test/java/hudson/scheduler/CronTabTest.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_00b28_353eb/rev_00b28-353eb.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1565f_e0a44/rev_1565f-e0a44.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4c2f8_9c02d/rev_4c2f8-9c02d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ca68a_26b15/rev_ca68a-26b15.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4f9d0_246d9/rev_4f9d0-246d9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b7811_5a120/rev_b7811-5a120.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ca0b4_7cbbb/rev_ca0b4-7cbbb.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0830d_dce7b/rev_0830d-dce7b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_433e0_77a0d/rev_433e0-77a0d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cdc18_b99a7/rev_cdc18-b99a7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_73bf0_91000/rev_73bf0-91000.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b22b1_0c095/rev_b22b1-0c095.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9eb69_60948/rev_9eb69-60948.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_fd4cc_d33e2/rev_fd4cc-d33e2.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c86b6_1205e/rev_c86b6-1205e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2d3fa_c4847/rev_2d3fa-c4847.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_bcd94_2d3fa/rev_bcd94-2d3fa.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5ea3d_3a855/rev_5ea3d-3a855.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_15cc5_72fbc/rev_15cc5-72fbc.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_27e23_51f95/rev_27e23-51f95.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_dbf66_6327e/rev_dbf66-6327e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1e106_be4e8/rev_1e106-be4e8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9b75f_3c2b5/rev_9b75f-3c2b5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_38454_555d2/rev_38454-555d2.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5661a_31eeb/rev_5661a-31eeb.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d658f_53d1e/rev_d658f-53d1e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ad286_4e370/rev_ad286-4e370.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_961f6_4627e/rev_961f6-4627e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_dfab6_4cf68/rev_dfab6-4cf68.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b2683_8274a/rev_b2683-8274a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5ecbb_f566c/rev_5ecbb-f566c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8062b_2187f/rev_8062b-2187f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_df53c_3e66a/rev_df53c-3e66a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5fa9d_1f7e7/rev_5fa9d-1f7e7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_04263_c3ee6/rev_04263-c3ee6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b4356_b5d96/rev_b4356-b5d96.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6ea45_8d2e4/rev_6ea45-8d2e4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4b832_54fda/rev_4b832-54fda.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ffd77_5894e/rev_ffd77-5894e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_68db5_63ecb/rev_68db5-63ecb.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e3fee_41edc/rev_e3fee-41edc.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4af5c_1dc28/rev_4af5c-1dc28.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_16a3d_4af5c/rev_16a3d-4af5c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b1415_334d3/rev_b1415-334d3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_aec29_8aed6/rev_aec29-8aed6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_377e3_d0d3e/rev_377e3-d0d3e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_023b1_64663/rev_023b1-64663.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a20d8_6d52e/rev_a20d8-6d52e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c04be_73706/rev_c04be-73706.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b8b9b_1db5d/rev_b8b9b-1db5d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0c00f_a5ac5/rev_0c00f-a5ac5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_53a84_bab66/rev_53a84-bab66.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4a95c_2a1d1/rev_4a95c-2a1d1.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1f8d0_e86ab/rev_1f8d0-e86ab.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1c00d_c8a6d/rev_1c00d-c8a6d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_effcc_2c23e/rev_effcc-2c23e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ff7b9_b0869/rev_ff7b9-b0869.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_20b80_f7330/rev_20b80-f7330.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3e219_ca530/rev_3e219-ca530.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9d8ee_b2d9e/rev_9d8ee-b2d9e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9d8ee_0cc51/rev_9d8ee-0cc51.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cc2a9_23edd/rev_cc2a9-23edd.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9cb0d_cc2a9/rev_9cb0d-cc2a9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b8938_3c013/rev_b8938-3c013.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f460e_bff17/rev_f460e-bff17.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4c0bb_984c4/rev_4c0bb-984c4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_93c31_fa479/rev_93c31-fa479.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0bfa9_cb7e3/rev_0bfa9-cb7e3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d6905_db27f/rev_d6905-db27f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2d8d4_4a71b/rev_2d8d4-4a71b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_65c98_3431a/rev_65c98-3431a.revisions

=========================================================
=========================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_67827_8678a/rev_67827-8678a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1ef9c_5bc00/rev_1ef9c-5bc00.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2c8da_65673/rev_2c8da-65673.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ef569_5a1bd/rev_ef569-5a1bd.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_bda95_7f674/rev_bda95-7f674.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8095a_7e006/rev_8095a-7e006.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_19320_f8ec4/rev_19320-f8ec4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c1c64_dedb2/rev_c1c64-dedb2.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b7e2d_c1c64/rev_b7e2d-c1c64.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b0f86_fbba0/rev_b0f86-fbba0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b6e1a_39aa9/rev_b6e1a-39aa9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_baf88_2ad42/rev_baf88-2ad42.revisions
Conflict type: LineBasedMCFd
Conflict body: 
@Override
    protected void tearDown() throws Exception {
        try {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418241756231/fstmerge_var1_8807035535185526822
            if (jenkins!=null)
                for (EndOfTestListener tl : jenkins.getExtensionList(EndOfTestListener.class))
                    tl.onTearDown();
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418241756231/fstmerge_base_2664352192678834159
            for (EndOfTestListener tl : jenkins.getExtensionList(EndOfTestListener.class))
                tl.onTearDown();
=======
            if (jenkins!=null) {
                for (EndOfTestListener tl : jenkins.getExtensionList(EndOfTestListener.class))
                    tl.onTearDown();
            }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418241756231/fstmerge_var2_4163704650474286708

            if (timeoutTimer!=null) {
                timeoutTimer.cancel();
                timeoutTimer = null;
            }

            // cancel pending asynchronous operations, although this doesn't really seem to be working
            for (WebClient client : clients) {
                // unload the page to cancel asynchronous operations
                client.getPage("about:blank");
                client.closeAllWindows();
            }
            clients.clear();
        } finally {
            if (server!=null)
                server.stop();
            for (LenientRunnable r : tearDowns)
                r.run();

            if (jenkins!=null)
                jenkins.cleanUp();
            env.dispose();
            ExtensionList.clearLegacyInstances();
            DescriptorExtensionList.clearLegacyInstances();

            // Jenkins creates ClassLoaders for plugins that hold on to file descriptors of its jar files,
            // but because there's no explicit dispose method on ClassLoader, they won't get GC-ed until
            // at some later point, leading to possible file descriptor overflow. So encourage GC now.
            // see http://bugs.sun.com/view_bug.do?bug_id=4950148
            System.gc();
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_baf88_2ad42/rev_baf88-2ad42/test/src/main/java/org/jvnet/hudson/test/HudsonTestCase.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_db9fe_cc139/rev_db9fe-cc139.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c27c7_7facc/rev_c27c7-7facc.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_aa239_c15dc/rev_aa239-c15dc.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_55bf8_503c3/rev_55bf8-503c3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d8f74_c3781/rev_d8f74-c3781.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ee875_3fdba/rev_ee875-3fdba.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_03251_95ac6/rev_03251-95ac6.revisions
Conflict type: LineBasedMCFd
Conflict body: 
~~FSTMerge~~ private static final AtomicReferenceFieldUpdater<AbstractProject,DescribableList> triggersUpdater
            = AtomicReferenceFieldUpdater.newUpdater(AbstractProject.class,DescribableList.class,"triggers"); ##FSTMerge## private AtomicReferenceFieldUpdater<AbstractProject,List> triggersUpdater
            = AtomicReferenceFieldUpdater.newUpdater(AbstractProject.class,List.class,"triggers"); ##FSTMerge## private AtomicReferenceFieldUpdater<AbstractProject,DescribableList> triggersUpdater
            = AtomicReferenceFieldUpdater.newUpdater(AbstractProject.class,DescribableList.class,"triggers");
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_03251_95ac6/rev_03251-95ac6/core/src/main/java/hudson/model/AbstractProject.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a832b_0c656/rev_a832b-0c656.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a832b_7ac79/rev_a832b-7ac79.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5096d_10643/rev_5096d-10643.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4f262_46ecc/rev_4f262-46ecc.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e48f7_ef089/rev_e48f7-ef089.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_588e9_ef089/rev_588e9-ef089.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_562a1_6c439/rev_562a1-6c439.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_50c2b_b41d6/rev_50c2b-b41d6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_40f3b_3c444/rev_40f3b-3c444.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_353a2_bbaea/rev_353a2-bbaea.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7bf67_afeed/rev_7bf67-afeed.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_70252_1ce52/rev_70252-1ce52.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e7744_84388/rev_e7744-84388.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_58541_12e9a/rev_58541-12e9a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_62f82_602af/rev_62f82-602af.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c2d6b_5bbb7/rev_c2d6b-5bbb7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e7ac2_09142/rev_e7ac2-09142.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f6ac6_d0a9f/rev_f6ac6-d0a9f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9d2b2_33180/rev_9d2b2-33180.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b7418_b4d6d/rev_b7418-b4d6d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_43f4b_68176/rev_43f4b-68176.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c137d_6622a/rev_c137d-6622a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c2db8_1ecf4/rev_c2db8-1ecf4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_fe3d4_f611e/rev_fe3d4-f611e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a415a_1bf35/rev_a415a-1bf35.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_12c3e_8ef83/rev_12c3e-8ef83.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_84640_288b8/rev_84640-288b8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b7a82_4f95c/rev_b7a82-4f95c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_37ed0_c66eb/rev_37ed0-c66eb.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8e0c8_5cd5a/rev_8e0c8-5cd5a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7f521_b1090/rev_7f521-b1090.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_93518_6a88b/rev_93518-6a88b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_71e2e_d53bf/rev_71e2e-d53bf.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_253f9_185ca/rev_253f9-185ca.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f18c5_c605c/rev_f18c5-c605c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_78713_cfb40/rev_78713-cfb40.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1e3ff_8c5e9/rev_1e3ff-8c5e9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_79368_20123/rev_79368-20123.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_eee52_807e3/rev_eee52-807e3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7d1e3_e78c5/rev_7d1e3-e78c5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e8c4c_8b862/rev_e8c4c-8b862.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c04dd_6b87a/rev_c04dd-6b87a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5b969_70de0/rev_5b969-70de0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_03b1c_33101/rev_03b1c-33101.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6030c_03b1c/rev_6030c-03b1c.revisions
Conflict type: LineBasedMCFd
Conflict body: 
protected ArgumentListBuilder buildMavenAgentCmdLine(BuildListener listener,int tcpPort) throws IOException, InterruptedException {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418258500577/fstmerge_var1_2600554701976914013
        MavenInstallation mvn = getMavenInstallation(listener);
        if(mvn==null) {
            listener.error("Maven version is not configured for this project. Can't determine which Maven to run");
            throw new RunnerAbortedException();
        }
        if(mvn.getHome()==null) {
            listener.error("Maven '%s' doesn't have its home set",mvn.getName());
            throw new RunnerAbortedException();
        }

        boolean isMaster = getCurrentNode()== Jenkins.getInstance();
        FilePath slaveRoot=null;
        if(!isMaster)
            slaveRoot = getCurrentNode().getRootPath();

        ArgumentListBuilder args = new ArgumentListBuilder();
        JDK jdk = getJava(listener);
        if(jdk==null) {
            args.add("java");
        } else {
            args.add(jdk.getHome()+"/bin/java"); // use JDK.getExecutable() here ?
        }

        if(debugPort!=0)
            args.add("-Xrunjdwp:transport=dt_socket,server=y,address="+debugPort);
        if(yjp)
            args.add("-agentlib:yjpagent=tracing");

        args.addTokenized(getMavenOpts());
        
        args.add( "-cp" );
        args.add(getMavenAgentClassPath(mvn,isMaster,slaveRoot,listener));
        args.add(getMainClassName());

        // M2_HOME
        args.add(mvn.getHome());

        // remoting.jar
        String remotingJar = getLauncher().getChannel().call(new GetRemotingJar());
        if(remotingJar==null) {// this shouldn't be possible, but there are still reports indicating this, so adding a probe here.
            listener.error("Failed to determine the location of slave.jar");
            throw new RunnerAbortedException();
        }
        args.add(remotingJar);

        // interceptor.jar
        args.add(getMavenInterceptorClassPath(mvn,isMaster,slaveRoot));

        String mavenInterceptorCommonClasspath = getMavenInterceptorCommonClassPath( mvn, isMaster, slaveRoot );

        if (mavenInterceptorCommonClasspath!=null){
            args.add( mavenInterceptorCommonClasspath );
        }

        // TCP/IP port to establish the remoting infrastructure
        args.add(tcpPort);
        
        String interceptorOverride = getMavenInterceptorOverride(mvn,isMaster,slaveRoot);
        if (interceptorOverride!=null) {
            args.add(interceptorOverride);
        }

        return args;
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418258500577/fstmerge_base_3338820451833868724
        MavenInstallation mvn = getMavenInstallation(listener);
        if(mvn==null) {
            listener.error("Maven version is not configured for this project. Can't determine which Maven to run");
            throw new RunnerAbortedException();
        }
        if(mvn.getHome()==null) {
            listener.error("Maven '%s' doesn't have its home set",mvn.getName());
            throw new RunnerAbortedException();
        }

        boolean isMaster = getCurrentNode()== Jenkins.getInstance();
        FilePath slaveRoot=null;
        if(!isMaster)
            slaveRoot = getCurrentNode().getRootPath();

        ArgumentListBuilder args = new ArgumentListBuilder();
        JDK jdk = getJava(listener);
        if(jdk==null) {
            args.add("java");
        } else {
            args.add(jdk.getHome()+"/bin/java"); // use JDK.getExecutable() here ?
        }

        if(debugPort!=0)
            args.add("-Xrunjdwp:transport=dt_socket,server=y,address="+debugPort);
        if(yjp)
            args.add("-agentlib:yjpagent=tracing");

        args.addTokenized(getMavenOpts());
        
        args.add( "-cp" );
        args.add(getMavenAgentClassPath(mvn,isMaster,slaveRoot,listener));
        args.add(getMainClassName());

        // M2_HOME
        args.add(mvn.getHome());

        // remoting.jar
        String remotingJar = getLauncher().getChannel().call(new GetRemotingJar());
        if(remotingJar==null) {// this shouldn't be possible, but there are still reports indicating this, so adding a probe here.
            listener.error("Failed to determine the location of slave.jar");
            throw new RunnerAbortedException();
        }
        args.add(remotingJar);

        // interceptor.jar
        args.add(getMavenInterceptorClassPath(mvn,isMaster,slaveRoot));

        // TCP/IP port to establish the remoting infrastructure
        args.add(tcpPort);
        
        String interceptorOverride = getMavenInterceptorOverride(mvn,isMaster,slaveRoot);
        if (interceptorOverride!=null) {
            args.add(interceptorOverride);
        }

        return args;
=======
        return buildMavenAgentCmdLine(listener, tcpPort, getJava(listener));
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418258500577/fstmerge_var2_8095650338715633445
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6030c_03b1c/rev_6030c-03b1c/maven-plugin/src/main/java/hudson/maven/AbstractMavenProcessFactory.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b08e1_941e8/rev_b08e1-941e8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8b939_33962/rev_8b939-33962.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_06016_f209a/rev_06016-f209a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2284c_2152c/rev_2284c-2152c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_be2cf_ed708/rev_be2cf-ed708.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_edf93_016ba/rev_edf93-016ba.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5cfc0_3376c/rev_5cfc0-3376c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d0d27_3376c/rev_d0d27-3376c.revisions
Conflict type: LineBasedMCFd
Conflict body: 
public Result call() throws IOException {

        try {
            initializeAsynchronousExecutions();

            MavenExecutionListener mavenExecutionListener = supportEventSpy ? new JenkinsEventSpy(this) : new MavenExecutionListener( this );
            if (supportEventSpy)
            {
                Method setEventSpiesMethod = maven3LauncherClass.getMethod( "setEventSpies", List.class );
                setEventSpiesMethod.invoke( null, Collections.singletonList(mavenExecutionListener) );

            } else {
                Method setMavenExecutionListenerMethod = maven3LauncherClass.getMethod( "setMavenExecutionListener", ExecutionListener.class );

                setMavenExecutionListenerMethod.invoke( null, mavenExecutionListener );
            }
            markAsSuccess = false;

            registerSystemProperties();

            PrintStream logger = listener.getLogger();

<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418261127117/fstmerge_var1_2695595565642667736
            logger.println(formatArgs(goals));
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418261127117/fstmerge_base_9133730757155727638
=======
            Method launchMethod = maven3MainClass.getMethod( "launch", String[].class );
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418261127117/fstmerge_var2_6461138702617063758

            Integer res = (Integer) launchMethod.invoke(null, new Object[] {goals.toArray(new String[goals.size()])} );

            //int r = Maven3Main.launch( goals.toArray(new String[goals.size()]));

            int r = res.intValue();

            // now check the completion status of async ops
            long startTime = System.nanoTime();
            
            Result waitForAsyncExecutionsResult = waitForAsynchronousExecutions();
            if (waitForAsyncExecutionsResult != null) {
                return waitForAsyncExecutionsResult;
            }
            
            mavenExecutionListener.overheadTime += System.nanoTime()-startTime;

            if(profile) {
                NumberFormat n = NumberFormat.getInstance();
                logger.println("Total overhead was "+format(n,mavenExecutionListener.overheadTime)+"ms");
                Channel ch = Channel.current();
                logger.println("Class loading "   +format(n,ch.classLoadingTime.get())   +"ms, "+ch.classLoadingCount+" classes");
                logger.println("Resource loading "+format(n,ch.resourceLoadingTime.get())+"ms, "+ch.resourceLoadingCount+" times");                
            }

            Method mavenExecutionResultGetMethod = maven3LauncherClass.getMethod( "getMavenExecutionResult", null );

            mavenExecutionResult = (HudsonMavenExecutionResult) mavenExecutionResultGetMethod.invoke( null, null );

            //mavenExecutionResult = Maven3Launcher.getMavenExecutionResult();
            
            if(r==0 && mavenExecutionResult.getThrowables().isEmpty()) {
                if(mavenExecutionListener.hasTestFailures()){
                    return Result.UNSTABLE;    
                }
                return Result.SUCCESS;
            }

			// manage of Maven error are moved to ExecutionEventLogger, they are
			// threaded as in MavenCli

            if(markAsSuccess) {
                logger.println(Messages.MavenBuilder_Failed());
                if(mavenExecutionListener.hasTestFailures()){
                    return Result.UNSTABLE;    
                }
                return Result.SUCCESS;
            }
            return Result.FAILURE;
        } catch (NoSuchMethodException e) {
            throw new IOException2(e);
        } catch (IllegalAccessException e) {
            throw new IOException2(e);
        } catch (InvocationTargetException e) {
            throw new IOException2(e);
        //} catch (ClassNotFoundException e) {
        //    throw new IOException2(e);
        } catch (Exception e) {
            throw new IOException2(e);
        } finally {
            if (DUMP_PERFORMANCE_COUNTERS)
                Channel.current().dumpPerformanceCounters(listener.error("Remoting stats"));
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d0d27_3376c/rev_d0d27-3376c/maven-plugin/src/main/java/hudson/maven/Maven3Builder.java
Conflict type: LineBasedMCFd
Conflict body: 
public MavenExecutionListener(AbstractMavenBuilder maven3Builder) {
            this.maven3Builder = maven3Builder;
            this.proxies = new ConcurrentHashMap<ModuleName, FilterImpl>(maven3Builder.proxies);
            for (ModuleName name : this.proxies.keySet()) {
                executedMojosPerModule.put( name, new CopyOnWriteArrayList<ExecutedMojo>() );
            }
            this.reporters = new ConcurrentHashMap<ModuleName, List<MavenReporter>>(maven3Builder.reporters);
            

            // E.g. there's also the option to redirect logging to a file which is handled there, but not here.
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418261127122/fstmerge_var1_3727150072623296976
            PrintStreamLogger logger = new PrintStreamLogger( /* maven3Builder.listener.getLogger() */ System.out );
            if (maven3Builder.isDebug()) {
                logger.setThreshold(PrintStreamLogger.LEVEL_DEBUG);
            } else if (maven3Builder.isQuiet()) {
                logger.setThreshold(PrintStreamLogger.LEVEL_ERROR);
            }
            
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418261127122/fstmerge_base_2819643872196591433
            PrintStreamLogger logger = new PrintStreamLogger( maven3Builder.listener.getLogger() );
            if (maven3Builder.isDebug()) {
                logger.setThreshold(PrintStreamLogger.LEVEL_DEBUG);
            } else if (maven3Builder.isQuiet()) {
                logger.setThreshold(PrintStreamLogger.LEVEL_ERROR);
            }
            
=======

>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418261127122/fstmerge_var2_60749505223677428
            this.eventLogger = new ExecutionEventLogger( logger );
        }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d0d27_3376c/rev_d0d27-3376c/maven-plugin/src/main/java/hudson/maven/Maven3Builder.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d0931_09cf9/rev_d0931-09cf9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_85592_6af91/rev_85592-6af91.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_14b3d_3e718/rev_14b3d-3e718.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_728a8_e8c66/rev_728a8-e8c66.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_246d3_d5302/rev_246d3-d5302.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_079ec_246d3/rev_079ec-246d3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_31f21_5cba0/rev_31f21-5cba0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d5eb4_397c6/rev_d5eb4-397c6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_26c84_0cbae/rev_26c84-0cbae.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d7dc2_ecf3d/rev_d7dc2-ecf3d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1f231_e2134/rev_1f231-e2134.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_112b4_8d46a/rev_112b4-8d46a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_04ba3_83039/rev_04ba3-83039.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d90d4_4f169/rev_d90d4-4f169.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ec9b4_7cce8/rev_ec9b4-7cce8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ec9b4_bf685/rev_ec9b4-bf685.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e9af3_7e07f/rev_e9af3-7e07f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_68612_55f19/rev_68612-55f19.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f18f8_96edf/rev_f18f8-96edf.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2971b_8697e/rev_2971b-8697e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_72901_af2c8/rev_72901-af2c8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6aaf6_47de5/rev_6aaf6-47de5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_850f5_37098/rev_850f5-37098.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_bada6_14a7b/rev_bada6-14a7b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7a5a9_58474/rev_7a5a9-58474.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5bf6c_30ca0/rev_5bf6c-30ca0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_eec30_bc0ab/rev_eec30-bc0ab.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_36c0e_7e8bb/rev_36c0e-7e8bb.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_dfa9c_adec3/rev_dfa9c-adec3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_20859_08411/rev_20859-08411.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_47fde_3d974/rev_47fde-3d974.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3d300_17240/rev_3d300-17240.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c8c45_12aa9/rev_c8c45-12aa9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3751e_47eec/rev_3751e-47eec.revisions
Conflict type: LineBasedMCFd
Conflict body: 
@Override
    public boolean prebuild(AbstractBuild<?, ?> build, BuildListener listener) {
        if(latestOnly) {
            AbstractBuild<?,?> b = build.getProject().getLastCompletedBuild();
            Result bestResultSoFar = Result.NOT_BUILT;
            while(b!=null) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418272487922/fstmerge_var1_8395310974451038933
                if(b.getResult()!=null){
                    if (b.getResult().isBetterThan(bestResultSoFar)) {
                        bestResultSoFar = b.getResult();
                    } else {
                        // remove old artifacts
                        File ad = b.getArtifactsDir();
                        if(ad.exists()) {
                            listener.getLogger().println(Messages.ArtifactArchiver_DeletingOld(b.getDisplayName()));
                            try {
                                Util.deleteRecursive(ad);
                            } catch (IOException e) {
                                e.printStackTrace(listener.error(e.getMessage()));
                            }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418272487922/fstmerge_base_2458896032774827812
                if (b.getResult().isBetterThan(bestResultSoFar)) {
                    bestResultSoFar = b.getResult();
                } else {
                    // remove old artifacts
                    File ad = b.getArtifactsDir();
                    if(ad.exists()) {
                        listener.getLogger().println(Messages.ArtifactArchiver_DeletingOld(b.getDisplayName()));
                        try {
                            Util.deleteRecursive(ad);
                        } catch (IOException e) {
                            e.printStackTrace(listener.error(e.getMessage()));
=======
                if (b.getResult().isBetterThan(bestResultSoFar)) {
                    bestResultSoFar = b.getResult();
                } else {
                    // remove old artifacts
                    try {
                        if (b.getArtifactManager().deleteArtifacts(b)) {
                            listener.getLogger().println(Messages.ArtifactArchiver_DeletingOld(b.getDisplayName()));
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418272487922/fstmerge_var2_6038301301463351608
                        }
                    } catch (IOException e) {
                        e.printStackTrace(listener.error(e.getMessage()));
                    } catch (InterruptedException x) {
                        x.printStackTrace(listener.error(x.getMessage()));
                    }
                }
                b = b.getPreviousBuild();
            }
        }
        return true;
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3751e_47eec/rev_3751e-47eec/core/src/main/java/hudson/tasks/ArtifactArchiver.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_52a89_3751e/rev_52a89-3751e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1e9f9_2e092/rev_1e9f9-2e092.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f633a_4d8bf/rev_f633a-4d8bf.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_923d6_70762/rev_923d6-70762.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_de6bb_71131/rev_de6bb-71131.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_45eae_78b51/rev_45eae-78b51.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ec503_920c3/rev_ec503-920c3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a92e9_04c37/rev_a92e9-04c37.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8cfdf_7e8a0/rev_8cfdf-7e8a0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_518d0_89c94/rev_518d0-89c94.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a92b6_b386e/rev_a92b6-b386e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b32b3_d4066/rev_b32b3-d4066.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5704e_d3fa3/rev_5704e-d3fa3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_44b1a_6eb95/rev_44b1a-6eb95.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3835b_44b1a/rev_3835b-44b1a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8df5c_2c428/rev_8df5c-2c428.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8df5c_59b31/rev_8df5c-59b31.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4752a_8df5c/rev_4752a-8df5c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c6ec1_e50d1/rev_c6ec1-e50d1.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_554d0_99f84/rev_554d0-99f84.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_151a5_f6d20/rev_151a5-f6d20.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e8cee_7cb81/rev_e8cee-7cb81.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2b5c4_352a6/rev_2b5c4-352a6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cc259_574fe/rev_cc259-574fe.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_58e8b_c63e1/rev_58e8b-c63e1.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3bf39_42fa1/rev_3bf39-42fa1.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1007c_3d6a0/rev_1007c-3d6a0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_60318_1007c/rev_60318-1007c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e757a_19338/rev_e757a-19338.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_18582_83410/rev_18582-83410.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e54c4_3d8c7/rev_e54c4-3d8c7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b2c20_4c72b/rev_b2c20-4c72b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_010f2_dfd60/rev_010f2-dfd60.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a184e_99d62/rev_a184e-99d62.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_127c1_a2191/rev_127c1-a2191.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1b17c_89a11/rev_1b17c-89a11.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_caeca_7790d/rev_caeca-7790d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_93606_b02d4/rev_93606-b02d4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d12b1_3454c/rev_d12b1-3454c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2f752_06ccf/rev_2f752-06ccf.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_259f1_9c99a/rev_259f1-9c99a.revisions
Conflict type: LineBasedMCFd
Conflict body: 
public int copyRecursiveTo(final String fileMask, final String excludes, final FilePath target) throws IOException, InterruptedException {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418286671384/fstmerge_var1_3091342160043233164
        if(this.channel==target.channel) {
            // local to local copy.
            return act(new FileCallable<Integer>() {
                private static final long serialVersionUID = 1L;
                public Integer invoke(File base, VirtualChannel channel) throws IOException {
                    if(!base.exists())  return 0;
                    assert target.channel==null;

                    try {
                        class CopyImpl extends Copy {
                            private int copySize;

                            public CopyImpl() {
                                setProject(new org.apache.tools.ant.Project());
                            }

                            @Override
                            protected void doFileOperations() {
                                copySize = super.fileCopyMap.size();
                                super.doFileOperations();
                            }

                            public int getNumCopied() {
                                return copySize;
                            }
                        }

                        CopyImpl copyTask = new CopyImpl();
                        copyTask.setTodir(new File(target.remote));
                        copyTask.addFileset(Util.createFileSet(base,fileMask,excludes));
                        copyTask.setOverwrite(true);
                        copyTask.setIncludeEmptyDirs(false);

                        copyTask.execute();
                        return copyTask.getNumCopied();
                    } catch (BuildException e) {
                        throw new IOException2("Failed to copy "+base+"/"+fileMask+" to "+target,e);
                    }
                }
            });
        } else
        if(this.channel==null) {
            // local -> remote copy
            final Pipe pipe = Pipe.createLocalToRemote();

            Future<Void> future = target.actAsync(new FileCallable<Void>() {
                private static final long serialVersionUID = 1L;
                public Void invoke(File f, VirtualChannel channel) throws IOException {
                    try {
                        readFromTar(remote+'/'+fileMask, f,TarCompression.GZIP.extract(pipe.getIn()));
                        return null;
                    } finally {
                        pipe.getIn().close();
                    }
                }
            });
            Future<Integer> future2 = actAsync(new FileCallable<Integer>() {
                private static final long serialVersionUID = 1L;
                @Override public Integer invoke(File f, VirtualChannel channel) throws IOException, InterruptedException {
                    return writeToTar(new File(remote),fileMask,excludes,TarCompression.GZIP.compress(pipe.getOut()));
                }
            });
            try {
                // JENKINS-9540 in case the reading side failed, report that error first
                future.get();
                return future2.get();
            } catch (ExecutionException e) {
                throw new IOException2(e);
            }
        } else {
            // remote -> local copy
            final Pipe pipe = Pipe.createRemoteToLocal();

            Future<Integer> future = actAsync(new FileCallable<Integer>() {
                private static final long serialVersionUID = 1L;
                public Integer invoke(File f, VirtualChannel channel) throws IOException {
                    try {
                        return writeToTar(f,fileMask,excludes,TarCompression.GZIP.compress(pipe.getOut()));
                    } finally {
                        pipe.getOut().close();
                    }
                }
            });
            try {
                readFromTar(remote+'/'+fileMask,new File(target.remote),TarCompression.GZIP.extract(pipe.getIn()));
            } catch (IOException e) {// BuildException or IOException
                try {
                    future.get(3,TimeUnit.SECONDS);
                    throw e;    // the remote side completed successfully, so the error must be local
                } catch (ExecutionException x) {
                    // report both errors
                    throw new IOException2(Functions.printThrowable(e),x);
                } catch (TimeoutException _) {
                    // remote is hanging
                    throw e;
                }
            }
            try {
                return future.get();
            } catch (ExecutionException e) {
                throw new IOException2(e);
            }
        }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418286671384/fstmerge_base_7361147999209089373
        if(this.channel==target.channel) {
            // local to local copy.
            return act(new FileCallable<Integer>() {
                private static final long serialVersionUID = 1L;
                public Integer invoke(File base, VirtualChannel channel) throws IOException {
                    if(!base.exists())  return 0;
                    assert target.channel==null;

                    try {
                        class CopyImpl extends Copy {
                            private int copySize;

                            public CopyImpl() {
                                setProject(new org.apache.tools.ant.Project());
                            }

                            @Override
                            protected void doFileOperations() {
                                copySize = super.fileCopyMap.size();
                                super.doFileOperations();
                            }

                            public int getNumCopied() {
                                return copySize;
                            }
                        }

                        CopyImpl copyTask = new CopyImpl();
                        copyTask.setTodir(new File(target.remote));
                        copyTask.addFileset(Util.createFileSet(base,fileMask,excludes));
                        copyTask.setOverwrite(true);
                        copyTask.setIncludeEmptyDirs(false);

                        copyTask.execute();
                        return copyTask.getNumCopied();
                    } catch (BuildException e) {
                        throw new IOException2("Failed to copy "+base+"/"+fileMask+" to "+target,e);
                    }
                }
            });
        } else
        if(this.channel==null) {
            // local -> remote copy
            final Pipe pipe = Pipe.createLocalToRemote();

            Future<Void> future = target.actAsync(new FileCallable<Void>() {
                private static final long serialVersionUID = 1L;
                public Void invoke(File f, VirtualChannel channel) throws IOException {
                    try {
                        readFromTar(remote+'/'+fileMask, f,TarCompression.GZIP.extract(pipe.getIn()));
                        return null;
                    } finally {
                        pipe.getIn().close();
                    }
                }
            });
            int r = writeToTar(new File(remote),fileMask,excludes,TarCompression.GZIP.compress(pipe.getOut()));
            try {
                future.get();
            } catch (ExecutionException e) {
                throw new IOException2(e);
            }
            return r;
        } else {
            // remote -> local copy
            final Pipe pipe = Pipe.createRemoteToLocal();

            Future<Integer> future = actAsync(new FileCallable<Integer>() {
                private static final long serialVersionUID = 1L;
                public Integer invoke(File f, VirtualChannel channel) throws IOException {
                    try {
                        return writeToTar(f,fileMask,excludes,TarCompression.GZIP.compress(pipe.getOut()));
                    } finally {
                        pipe.getOut().close();
                    }
                }
            });
            try {
                readFromTar(remote+'/'+fileMask,new File(target.remote),TarCompression.GZIP.extract(pipe.getIn()));
            } catch (IOException e) {// BuildException or IOException
                try {
                    future.get(3,TimeUnit.SECONDS);
                    throw e;    // the remote side completed successfully, so the error must be local
                } catch (ExecutionException x) {
                    // report both errors
                    throw new IOException2(Functions.printThrowable(e),x);
                } catch (TimeoutException _) {
                    // remote is hanging
                    throw e;
                }
            }
            try {
                return future.get();
            } catch (ExecutionException e) {
                throw new IOException2(e);
            }
        }
=======
        return copyRecursiveTo(new DirScanner.Glob(fileMask, excludes), target, fileMask);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418286671384/fstmerge_var2_1689526722664380912
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_259f1_9c99a/rev_259f1-9c99a/core/src/main/java/hudson/FilePath.java
Conflict type: LineBasedMCFd
Conflict body: 
@Override
    public boolean perform(AbstractBuild<?,?> build, Launcher launcher, BuildListener listener) throws InterruptedException {
        if(artifacts.length()==0) {
            listener.error(Messages.ArtifactArchiver_NoIncludes());
            build.setResult(Result.FAILURE);
            return true;
        }

        listener.getLogger().println(Messages.ArtifactArchiver_ARCHIVING_ARTIFACTS());
        try {
            FilePath ws = build.getWorkspace();
            if (ws==null) { // #3330: slave down?
                return true;
            }

            String artifacts = build.getEnvironment(listener).expand(this.artifacts);
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418286698168/fstmerge_var1_5483090967408025150
            if(ws.copyRecursiveTo(artifacts,excludes,new FilePath(dir))==0) {
                Result result = build.getResult();
                if (result != null && result.isBetterOrEqualTo(Result.UNSTABLE)) {
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418286698168/fstmerge_base_2766423308278329121
            if(ws.copyRecursiveTo(artifacts,excludes,new FilePath(dir))==0) {
                if(build.getResult().isBetterOrEqualTo(Result.UNSTABLE)) {
=======

            Map<String,String> files = ws.act(new ListFiles(artifacts, excludes));
            if (!files.isEmpty()) {
                build.pickArtifactManager().archive(ws, launcher, listener, files);
            } else {
                if(build.getResult().isBetterOrEqualTo(Result.UNSTABLE)) {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418286698168/fstmerge_var2_2289873992427263389
                    // If the build failed, don't complain that there was no matching artifact.
                    // The build probably didn't even get to the point where it produces artifacts. 
                    listenerWarnOrError(listener, Messages.ArtifactArchiver_NoMatchFound(artifacts));
                    String msg = null;
                    try {
                    	msg = ws.validateAntFileMask(artifacts);
                    } catch (Exception e) {
                    	listenerWarnOrError(listener, e.getMessage());
                    }
                    if(msg!=null)
                        listenerWarnOrError(listener, msg);
                }
                if (!allowEmptyArchive) {
                	build.setResult(Result.FAILURE);
                }
                return true;
            }
        } catch (IOException e) {
            Util.displayIOException(e,listener);
            e.printStackTrace(listener.error(
                    Messages.ArtifactArchiver_FailedToArchive(artifacts)));
            build.setResult(Result.FAILURE);
            return true;
        }

        return true;
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_259f1_9c99a/rev_259f1-9c99a/core/src/main/java/hudson/tasks/ArtifactArchiver.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_87dd5_259f1/rev_87dd5-259f1.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5c655_a12c2/rev_5c655-a12c2.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f60b6_eea97/rev_f60b6-eea97.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_83d5a_7ec87/rev_83d5a-7ec87.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2f83d_e07aa/rev_2f83d-e07aa.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d8766_61b1d/rev_d8766-61b1d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_bf3d0_53ce4/rev_bf3d0-53ce4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_bf3d0_53ce4/rev_bf3d0-53ce4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d8600_d3783/rev_d8600-d3783.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_22693_f9b9c/rev_22693-f9b9c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_92e81_22693/rev_92e81-22693.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_dd6ea_99611/rev_dd6ea-99611.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_85441_56220/rev_85441-56220.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_66fde_588da/rev_66fde-588da.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_64769_84a17/rev_64769-84a17.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_eeebf_903ef/rev_eeebf-903ef.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_726b6_1f567/rev_726b6-1f567.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_82af0_b36f7/rev_82af0-b36f7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ca067_d82ba/rev_ca067-d82ba.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ca067_3751e/rev_ca067-3751e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7fede_64f50/rev_7fede-64f50.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e4ba0_69ba2/rev_e4ba0-69ba2.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2a2f9_403d8/rev_2a2f9-403d8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_32b53_3a52e/rev_32b53-3a52e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7e1fc_58ed8/rev_7e1fc-58ed8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f491e_6b6a6/rev_f491e-6b6a6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ef26f_7c493/rev_ef26f-7c493.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_67be8_16f3f/rev_67be8-16f3f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ea854_298ed/rev_ea854-298ed.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4f6e6_ea854/rev_4f6e6-ea854.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b16b2_6c886/rev_b16b2-6c886.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_07720_33d1a/rev_07720-33d1a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ddfa6_2b934/rev_ddfa6-2b934.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5d561_5c25c/rev_5d561-5c25c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_47c90_261f4/rev_47c90-261f4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7b38b_f1205/rev_7b38b-f1205.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_278e7_b19f4/rev_278e7-b19f4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ff612_b533f/rev_ff612-b533f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5e6c3_ed03f/rev_5e6c3-ed03f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7ca4d_6f0a4/rev_7ca4d-6f0a4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_04c8a_dd099/rev_04c8a-dd099.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_428aa_9c05c/rev_428aa-9c05c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8c428_e9e5a/rev_8c428-e9e5a.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301646433/fstmerge_var1_6332529644903306314
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301646433/fstmerge_base_7322097506575352340
@Bug(4192)
    public void testMavenWorkspaceExists() throws Exception {
        configureDefaultMaven();
        MavenModuleSet m = createMavenProject();
        m.getReporters().add(new TestReporter());
        m.setScm(new ExtractResourceSCM(getClass().getResource("HUDSON-4192.zip")));
        buildAndAssertSuccess(m);
    }
=======
@Bug(4192)
    @Test
    public void testMavenWorkspaceExists() throws Exception {
        j.configureDefaultMaven();
        MavenModuleSet m = j.createMavenProject();
        m.getReporters().add(new TestReporter());
        m.setScm(new ExtractResourceSCM(getClass().getResource("HUDSON-4192.zip")));
        j.buildAndAssertSuccess(m);
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301646433/fstmerge_var2_653146887257582765

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8c428_e9e5a/rev_8c428-e9e5a/test/src/test/java/hudson/maven/MavenBuildTest.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301646479/fstmerge_var1_2982679385378458642
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301646479/fstmerge_base_8915710012761627363
@Bug(4177)
    public void testTestFailureInEarlyTaskSegment() throws Exception {
        configureDefaultMaven();
        MavenModuleSet m = createMavenProject();
        m.setGoals("clean install findbugs:findbugs");
        m.setScm(new ExtractResourceSCM(getClass().getResource("maven-test-failure-findbugs.zip")));
        assertBuildStatus(Result.UNSTABLE, m.scheduleBuild2(0).get());
    }
=======
@Bug(4177)
    @Test
    public void testTestFailureInEarlyTaskSegment() throws Exception {
        j.configureDefaultMaven();
        MavenModuleSet m = j.createMavenProject();
        m.setGoals("clean install findbugs:findbugs");
        m.setScm(new ExtractResourceSCM(getClass().getResource("maven-test-failure-findbugs.zip")));
        j.assertBuildStatus(Result.UNSTABLE, m.scheduleBuild2(0).get());
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301646479/fstmerge_var2_1953741612300000638

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8c428_e9e5a/rev_8c428-e9e5a/test/src/test/java/hudson/maven/MavenBuildTest.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301646485/fstmerge_var1_7402614948335363269
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301646485/fstmerge_base_2319756146050837425
public void testCompilationFailure() throws Exception {
        configureDefaultMaven();
        MavenModuleSet m = createMavenProject();
        m.setGoals("clean install");
        m.setScm(new ExtractResourceSCM(getClass().getResource("maven-compilation-failure.zip")));
        assertBuildStatus(Result.FAILURE, m.scheduleBuild2(0).get());
    }
=======
@Test
    public void testCompilationFailure() throws Exception {
        j.configureDefaultMaven();
        MavenModuleSet m = j.createMavenProject();
        m.setGoals("clean install");
        m.setScm(new ExtractResourceSCM(getClass().getResource("maven-compilation-failure.zip")));
        j.assertBuildStatus(Result.FAILURE, m.scheduleBuild2(0).get());
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301646485/fstmerge_var2_3086199314576688768

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8c428_e9e5a/rev_8c428-e9e5a/test/src/test/java/hudson/maven/MavenBuildTest.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301646490/fstmerge_var1_359725903615119285
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301646490/fstmerge_base_2109708983199449541
@Bug(4226)
    public void testParallelModuleBuild() throws Exception {
        configureDefaultMaven();
        MavenModuleSet m = createMavenProject();
        m.setScm(new ExtractResourceSCM(getClass().getResource("multimodule-maven.zip")));
        
        buildAndAssertSuccess(m);

        m.setAggregatorStyleBuild(false);

        // run module builds
        buildAndAssertSuccess(m.getModule("test$module1"));
        buildAndAssertSuccess(m.getModule("test$module1"));
    }
=======
@Bug(4226)
    @Test
    public void testParallelModuleBuild() throws Exception {
        j.configureDefaultMaven();
        MavenModuleSet m = j.createMavenProject();
        m.setScm(new ExtractResourceSCM(getClass().getResource("multimodule-maven.zip")));
        
        j.buildAndAssertSuccess(m);

        m.setAggregatorStyleBuild(false);

        // run module builds
        j.buildAndAssertSuccess(m.getModule("test$module1"));
        j.buildAndAssertSuccess(m.getModule("test$module1"));
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301646490/fstmerge_var2_5502698056390708884

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8c428_e9e5a/rev_8c428-e9e5a/test/src/test/java/hudson/maven/MavenBuildTest.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301646494/fstmerge_var1_4516344487002065214
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301646494/fstmerge_base_6387815837001481234
@Bug(value=8395)
    public void testMaven2BuildWrongScope() throws Exception {
        
        File pom = new File(this.getClass().getResource("test-pom-8395.xml").toURI());
        MavenModuleSet m = createMavenProject();
        MavenInstallation mavenInstallation = configureDefaultMaven();
        m.setMaven( mavenInstallation.getName() );
        m.getReporters().add(new TestReporter());
        m.setRootPOM(pom.getAbsolutePath());
        m.setGoals( "clean validate" );
        MavenModuleSetBuild mmsb =  buildAndAssertSuccess(m);
        assertFalse( mmsb.getProject().getModules().isEmpty());
    }
=======
@Bug(value=8395)
    @Test
    public void testMaven2BuildWrongScope() throws Exception {
        
        File pom = new File(this.getClass().getResource("test-pom-8395.xml").toURI());
        MavenModuleSet m = j.createMavenProject();
        MavenInstallation mavenInstallation = j.configureDefaultMaven();
        m.setMaven( mavenInstallation.getName() );
        m.getReporters().add(new TestReporter());
        m.setRootPOM(pom.getAbsolutePath());
        m.setGoals( "clean validate" );
        MavenModuleSetBuild mmsb =  j.buildAndAssertSuccess(m);
        assertFalse( mmsb.getProject().getModules().isEmpty());
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301646494/fstmerge_var2_1450050439574419791

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8c428_e9e5a/rev_8c428-e9e5a/test/src/test/java/hudson/maven/MavenBuildTest.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301646499/fstmerge_var1_4605755500380128085
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301646499/fstmerge_base_8744875986276953847
@Bug(value=8390)
    public void testMaven2BuildWrongInheritence() throws Exception {
        
        MavenModuleSet m = createMavenProject();
        MavenInstallation mavenInstallation = configureDefaultMaven();
        m.setMaven( mavenInstallation.getName() );
        m.getReporters().add(new TestReporter());
        m.setScm(new ExtractResourceSCM(getClass().getResource("incorrect-inheritence-testcase.zip")));
        m.setGoals( "clean validate" );
        MavenModuleSetBuild mmsb =  buildAndAssertSuccess(m);
        assertFalse( mmsb.getProject().getModules().isEmpty());
    }
=======
@Bug(value=8390)
    @Test
    public void testMaven2BuildWrongInheritence() throws Exception {
        
        MavenModuleSet m = j.createMavenProject();
        MavenInstallation mavenInstallation = j.configureDefaultMaven();
        m.setMaven( mavenInstallation.getName() );
        m.getReporters().add(new TestReporter());
        m.setScm(new ExtractResourceSCM(getClass().getResource("incorrect-inheritence-testcase.zip")));
        m.setGoals( "clean validate" );
        MavenModuleSetBuild mmsb =  j.buildAndAssertSuccess(m);
        assertFalse( mmsb.getProject().getModules().isEmpty());
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301646499/fstmerge_var2_8886365633349529496

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8c428_e9e5a/rev_8c428-e9e5a/test/src/test/java/hudson/maven/MavenBuildTest.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301646503/fstmerge_var1_949352778005437335
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301646503/fstmerge_base_2134935309424381854
@Bug(value=8445)
    public void testMaven2SeveralModulesInDirectory() throws Exception {
        
        MavenModuleSet m = createMavenProject();
        MavenInstallation mavenInstallation = configureDefaultMaven();
        m.setMaven( mavenInstallation.getName() );
        m.getReporters().add(new TestReporter());
        m.setScm(new ExtractResourceSCM(getClass().getResource("several-modules-in-directory.zip")));
        m.setGoals( "clean validate" );
        MavenModuleSetBuild mmsb =  buildAndAssertSuccess(m);
        assertFalse( mmsb.getProject().getModules().isEmpty());
    }
=======
@Bug(value=8445)
    @Test
    public void testMaven2SeveralModulesInDirectory() throws Exception {
        
        MavenModuleSet m = j.createMavenProject();
        MavenInstallation mavenInstallation = j.configureDefaultMaven();
        m.setMaven( mavenInstallation.getName() );
        m.getReporters().add(new TestReporter());
        m.setScm(new ExtractResourceSCM(getClass().getResource("several-modules-in-directory.zip")));
        m.setGoals( "clean validate" );
        MavenModuleSetBuild mmsb =  j.buildAndAssertSuccess(m);
        assertFalse( mmsb.getProject().getModules().isEmpty());
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301646503/fstmerge_var2_1812663089244921764

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8c428_e9e5a/rev_8c428-e9e5a/test/src/test/java/hudson/maven/MavenBuildTest.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301646508/fstmerge_var1_7877953074321883364
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301646508/fstmerge_base_6565909389233490591
@Email("https://groups.google.com/d/msg/hudson-users/Xhw00UopVN0/FA9YqDAIsSYJ")
    public void testMavenWithDependencyVersionInEnvVar() throws Exception {
        
        MavenModuleSet m = createMavenProject();
        MavenInstallation mavenInstallation = configureDefaultMaven();
        ParametersDefinitionProperty parametersDefinitionProperty = 
            new ParametersDefinitionProperty(new StringParameterDefinition( "JUNITVERSION", "3.8.2" ));
        
        m.addProperty( parametersDefinitionProperty );
        m.setMaven( mavenInstallation.getName() );
        m.getReporters().add(new TestReporter());
        m.setScm(new ExtractResourceSCM(getClass().getResource("envars-maven-project.zip")));
        m.setGoals( "clean test-compile" );
        MavenModuleSetBuild mmsb =  buildAndAssertSuccess(m);
        assertFalse( mmsb.getProject().getModules().isEmpty());
    }
=======
@Email("https://groups.google.com/d/msg/hudson-users/Xhw00UopVN0/FA9YqDAIsSYJ")
    @Test
    public void testMavenWithDependencyVersionInEnvVar() throws Exception {
        
        MavenModuleSet m = j.createMavenProject();
        MavenInstallation mavenInstallation = j.configureDefaultMaven();
        ParametersDefinitionProperty parametersDefinitionProperty = 
            new ParametersDefinitionProperty(new StringParameterDefinition( "JUNITVERSION", "3.8.2" ));
        
        m.addProperty( parametersDefinitionProperty );
        m.setMaven( mavenInstallation.getName() );
        m.getReporters().add(new TestReporter());
        m.setScm(new ExtractResourceSCM(getClass().getResource("envars-maven-project.zip")));
        m.setGoals( "clean test-compile" );
        MavenModuleSetBuild mmsb =  j.buildAndAssertSuccess(m);
        assertFalse( mmsb.getProject().getModules().isEmpty());
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301646508/fstmerge_var2_3925032367313396363

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8c428_e9e5a/rev_8c428-e9e5a/test/src/test/java/hudson/maven/MavenBuildTest.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301646522/fstmerge_var1_1849030380555026725
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301646522/fstmerge_base_8802216793958711282
@Bug(8573)
    public void testBuildTimeStampProperty() throws Exception {
        MavenInstallation mavenInstallation = configureDefaultMaven();
        MavenModuleSet m = createMavenProject();
        m.setMaven( mavenInstallation.getName() );
        m.getReporters().add(new TestReporter());
        m.setScm(new ExtractResourceSCM(getClass().getResource("JENKINS-8573.zip")));
        m.setGoals( "process-resources" );
        buildAndAssertSuccess(m);
        String content = m.getLastBuild().getWorkspace().child( "target/classes/test.txt" ).readToString();
        assertFalse( content.contains( "${maven.build.timestamp}") );
        assertFalse( content.contains( "${maven.build.timestamp}") );

        System.out.println( "content " + content );
    }
=======
@Bug(8573)
    @Test
    public void testBuildTimeStampProperty() throws Exception {
        MavenInstallation mavenInstallation = j.configureDefaultMaven();
        MavenModuleSet m = j.createMavenProject();
        m.setMaven( mavenInstallation.getName() );
        m.getReporters().add(new TestReporter());
        m.setScm(new ExtractResourceSCM(getClass().getResource("JENKINS-8573.zip")));
        m.setGoals( "process-resources" );
        j.buildAndAssertSuccess(m);
        String content = m.getLastBuild().getWorkspace().child( "target/classes/test.txt" ).readToString();
        assertFalse( content.contains( "${maven.build.timestamp}") );
        assertFalse( content.contains( "${maven.build.timestamp}") );

        System.out.println( "content " + content );
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301646522/fstmerge_var2_3209899440409582917

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8c428_e9e5a/rev_8c428-e9e5a/test/src/test/java/hudson/maven/MavenBuildTest.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301646527/fstmerge_var1_2653485110650313795
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301646527/fstmerge_base_7996136027275715951
@Bug(value=15865)
    public void testMavenFailsafePluginTestResultsAreRecorded() throws Exception {
        
        // GIVEN: a Maven project with maven-failsafe-plugin and Maven 2.2.1
        MavenModuleSet mavenProject = createMavenProject();
        MavenInstallation mavenInstallation = configureDefaultMaven();
        mavenProject.setMaven(mavenInstallation.getName());
        mavenProject.getReporters().add(new TestReporter());
        mavenProject.setScm(new ExtractResourceSCM(getClass().getResource("JENKINS-15865.zip")));
        mavenProject.setGoals( "clean install" );
        
        // WHEN project is build
        MavenModuleSetBuild mmsb =  buildAndAssertSuccess(mavenProject);
        
        // THEN we have a testresult recorded
        AggregatedTestResultAction aggregatedTestResultAction = mmsb.getAggregatedTestResultAction();
        assertNotNull(aggregatedTestResultAction);
        assertEquals(1, aggregatedTestResultAction.getTotalCount());
        
        Map<MavenModule, MavenBuild> moduleBuilds = mmsb.getModuleLastBuilds();
        assertEquals(1, moduleBuilds.size());
        MavenBuild moduleBuild = moduleBuilds.values().iterator().next();
         AbstractTestResultAction<?> testResultAction = moduleBuild.getTestResultAction();
        assertNotNull(testResultAction);
        assertEquals(1, testResultAction.getTotalCount());
    }
=======
@Bug(value=15865)
    @Test
    public void testMavenFailsafePluginTestResultsAreRecorded() throws Exception {
        
        // GIVEN: a Maven project with maven-failsafe-plugin and Maven 2.2.1
        MavenModuleSet mavenProject = j.createMavenProject();
        MavenInstallation mavenInstallation = j.configureDefaultMaven();
        mavenProject.setMaven(mavenInstallation.getName());
        mavenProject.getReporters().add(new TestReporter());
        mavenProject.setScm(new ExtractResourceSCM(getClass().getResource("JENKINS-15865.zip")));
        mavenProject.setGoals( "clean install" );
        
        // WHEN project is build
        MavenModuleSetBuild mmsb = j.buildAndAssertSuccess(mavenProject);
        
        // THEN we have a testresult recorded
        AggregatedTestResultAction aggregatedTestResultAction = mmsb.getAggregatedTestResultAction();
        assertNotNull(aggregatedTestResultAction);
        assertEquals(1, aggregatedTestResultAction.getTotalCount());
        
        Map<MavenModule, MavenBuild> moduleBuilds = mmsb.getModuleLastBuilds();
        assertEquals(1, moduleBuilds.size());
        MavenBuild moduleBuild = moduleBuilds.values().iterator().next();
         AbstractTestResultAction<?> testResultAction = moduleBuild.getTestResultAction();
        assertNotNull(testResultAction);
        assertEquals(1, testResultAction.getTotalCount());
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301646527/fstmerge_var2_8922251787212087825

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8c428_e9e5a/rev_8c428-e9e5a/test/src/test/java/hudson/maven/MavenBuildTest.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301646532/fstmerge_var1_123243032223890566
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301646532/fstmerge_base_1466751604020589766
@Bug(18178)
    public void testExtensionsConflictingWithCore() throws Exception {
        MavenModuleSet m = createMavenProject();
        m.setMaven(configureDefaultMaven().getName());
        m.setScm(new SingleFileSCM("pom.xml",
                "<project><modelVersion>4.0.0</modelVersion>" +
                "<groupId>g</groupId><artifactId>a</artifactId><version>0</version>" +
                "<build><extensions>" +
                "<extension><groupId>org.springframework.build.aws</groupId><artifactId>org.springframework.build.aws.maven</artifactId><version>3.0.0.RELEASE</version></extension>" +
                "</extensions></build></project>"));
        buildAndAssertSuccess(m);
    }
=======
@Bug(18178)
    @Test
    public void testExtensionsConflictingWithCore() throws Exception {
        MavenModuleSet m = j.createMavenProject();
        m.setMaven(j.configureDefaultMaven().getName());
        m.setScm(new SingleFileSCM("pom.xml",
                "<project><modelVersion>4.0.0</modelVersion>" +
                "<groupId>g</groupId><artifactId>a</artifactId><version>0</version>" +
                "<build><extensions>" +
                "<extension><groupId>org.springframework.build.aws</groupId><artifactId>org.springframework.build.aws.maven</artifactId><version>3.0.0.RELEASE</version></extension>" +
                "</extensions></build></project>"));
        j.buildAndAssertSuccess(m);
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301646532/fstmerge_var2_1370064513070554365

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8c428_e9e5a/rev_8c428-e9e5a/test/src/test/java/hudson/maven/MavenBuildTest.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301649510/fstmerge_var1_7031710905808181347
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301649510/fstmerge_base_6636984894489660525
protected void close() {
            try {
                sync();
                log.close();
            } catch (IOException e) {
                e.printStackTrace();
            }

            if(hasntStartedYet()) {
                // Mark the build as not_built. This method is used when the aggregated build
                // failed before it didn't even get to this module
                // OR if the aggregated build is an incremental one and this
                // module needn't be build.
                MavenBuild.this.execute(new RunExecution() {
                    public Result run(BuildListener listener) {
                        listener.getLogger().println(Messages.MavenBuild_FailedEarlier());
                        return Result.NOT_BUILT;
                    }

                    public void post(BuildListener listener) {
                    }

                    public void cleanUp(BuildListener listener) {
                    }
                });
            }
            
            rememberModulesToBuildAgainNextTime();
        }
=======
protected void close() {
            try {
                sync();
                log.close();
            } catch (IOException e) {
                e.printStackTrace();
            }

            abstract class Terminate extends RunExecution {
                @Override public void post(BuildListener listener) {}
                @Override public void cleanUp(BuildListener listener) {}
            }

            if(isInProgress()) {
                // Build was aborted, abort run as well.
                MavenBuild.this.execute(new Terminate() {
                    @Override
                    public Result run(BuildListener listener) {
                        return Result.ABORTED;
                    }
                });
            }

            if(hasntStartedYet()) {
                // Mark the build as not_built. This method is used when the aggregated build
                // failed before it didn't even get to this module
                // OR if the aggregated build is an incremental one and this
                // module needn't be build.
                MavenBuild.this.execute(new Terminate() {
                    @Override
                    public Result run(BuildListener listener) {
                        listener.getLogger().println(Messages.MavenBuild_FailedEarlier());
                        return Result.NOT_BUILT;
                    }
                });
            }
            
            rememberModulesToBuildAgainNextTime();
        }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418301649510/fstmerge_var2_8084195505636946457

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8c428_e9e5a/rev_8c428-e9e5a/maven-plugin/src/main/java/hudson/maven/MavenBuild.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8c428_87f99/rev_8c428-87f99.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c4e2e_8a556/rev_c4e2e-8a556.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b2e8f_70d78/rev_b2e8f-70d78.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b926a_b68a3/rev_b926a-b68a3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_588ce_1c007/rev_588ce-1c007.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6af22_ec333/rev_6af22-ec333.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b544e_f8ec8/rev_b544e-f8ec8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3a610_84457/rev_3a610-84457.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b95f2_71afe/rev_b95f2-71afe.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_04e1d_acff3/rev_04e1d-acff3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_245a8_aae94/rev_245a8-aae94.revisions

=========================================================
=========================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c4e2e_8a556/rev_c4e2e-8a556.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b2e8f_70d78/rev_b2e8f-70d78.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b926a_b68a3/rev_b926a-b68a3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_588ce_1c007/rev_588ce-1c007.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6af22_ec333/rev_6af22-ec333.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b544e_f8ec8/rev_b544e-f8ec8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3a610_84457/rev_3a610-84457.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b95f2_71afe/rev_b95f2-71afe.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_04e1d_acff3/rev_04e1d-acff3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_245a8_aae94/rev_245a8-aae94.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_deb3f_b8ace/rev_deb3f-b8ace.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cdddd_bdaea/rev_cdddd-bdaea.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b24ae_eaeb4/rev_b24ae-eaeb4.revisions
Conflict type: LineBasedMCFd
Conflict body: 
protected int run() throws Exception {
        job.checkPermission(Item.BUILD);

        ParametersAction a = null;
        if (!parameters.isEmpty()) {
            ParametersDefinitionProperty pdp = job.getProperty(ParametersDefinitionProperty.class);
            if (pdp==null)
                throw new AbortException(job.getFullDisplayName()+" is not parameterized but the -p option was specified");

            List<ParameterValue> values = new ArrayList<ParameterValue>();

            for (Entry<String, String> e : parameters.entrySet()) {
                String name = e.getKey();
                ParameterDefinition pd = pdp.getParameterDefinition(name);
                if (pd==null)
                    throw new AbortException(String.format("\'%s\' is not a valid parameter. Did you mean %s?",
                            name, EditDistance.findNearest(name, pdp.getParameterDefinitionNames())));
                values.add(pd.createValue(this,e.getValue()));
            }

            // handle missing parameters by adding as default values ISSUE JENKINS-7162
            for(ParameterDefinition pd :  pdp.getParameterDefinitions()) {
                if (parameters.containsKey(pd.getName()))
                    continue;

                // not passed in use default
                values.add(pd.getDefaultParameterValue());
            }

            a = new ParametersAction(values);
        }

        if (checkSCM) {
            if (job.poll(new StreamTaskListener(stdout, getClientCharset())).change == Change.NONE) {
                return 0;
            }
        }

        if (!job.isBuildable()) {
            String msg = Messages.BuildCommand_CLICause_CannotBuildUnknownReasons(job.getFullDisplayName());
            if (job.isDisabled()) {
                msg = Messages.BuildCommand_CLICause_CannotBuildDisabled(job.getFullDisplayName());
            } else if (job.isHoldOffBuildUntilSave()){
                msg = Messages.BuildCommand_CLICause_CannotBuildConfigNotSaved(job.getFullDisplayName());
            }
            stderr.println(msg);
            return -1;
        }

        QueueTaskFuture<? extends AbstractBuild> f = job.scheduleBuild2(0, new CLICause(Jenkins.getAuthentication().getName()), a);
        
        if (wait || sync || follow) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418313384625/fstmerge_var1_4719291252022774262
            if (f == null) {
                stderr.println("Build scheduling Refused by an extension, hence not in Queue.");
                return -1;
            }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418313384625/fstmerge_base_7577956822513424213
=======
            if (f == null) {
                stderr.println("Build scheduling Refused by an extension, hence not in Queue");
                return -1;
            }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418313384625/fstmerge_var2_2766647373298868659
            AbstractBuild b = f.waitForStart();    // wait for the start
            stdout.println("Started "+b.getFullDisplayName());

            if (sync || follow) {
                try {
                    if (consoleOutput) {
                        // read output in a retry loop, by default try only once
                        // writeWholeLogTo may fail with FileNotFound
                        // exception on a slow/busy machine, if it takes
                        // longish to create the log file
                        int retryInterval = 100;
                        for (int i=0;i<=retryCnt;) {
                            try {
                                b.writeWholeLogTo(stdout);
                                break;
                            }
                            catch (FileNotFoundException e) {
                                if ( i == retryCnt ) {
                                    throw e;
                                }
                                i++;
                                Thread.sleep(retryInterval);
                            }
                        }
                    }
                    f.get();    // wait for the completion
                    stdout.println("Completed "+b.getFullDisplayName()+" : "+b.getResult());
                    return b.getResult().ordinal;
                } catch (InterruptedException e) {
                    if (follow) {
                        return 125;
                    } else {
                        // if the CLI is aborted, try to abort the build as well
                        f.cancel(true);
                        throw e;
                    }
                }
            }
        }

        return 0;
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b24ae_eaeb4/rev_b24ae-eaeb4/core/src/main/java/hudson/cli/BuildCommand.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_365df_2771d/rev_365df-2771d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_17c86_a26f0/rev_17c86-a26f0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4204d_d954f/rev_4204d-d954f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ba500_28737/rev_ba500-28737.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_09693_68c03/rev_09693-68c03.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2fe47_42ced/rev_2fe47-42ced.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ae744_705b0/rev_ae744-705b0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_952ea_b26f4/rev_952ea-b26f4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_90cef_b96d2/rev_90cef-b96d2.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3855f_d45d1/rev_3855f-d45d1.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a6b7f_a84d1/rev_a6b7f-a84d1.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_27751_e86d2/rev_27751-e86d2.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_90ef3_588ab/rev_90ef3-588ab.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_975dc_588ab/rev_975dc-588ab.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8b8f1_04195/rev_8b8f1-04195.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f5742_df606/rev_f5742-df606.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0a5b8_62900/rev_0a5b8-62900.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_bc711_5e338/rev_bc711-5e338.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5e7b8_32469/rev_5e7b8-32469.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6872d_28f6b/rev_6872d-28f6b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6d56d_7e55b/rev_6d56d-7e55b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_90c32_32b0a/rev_90c32-32b0a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0f52b_baf4e/rev_0f52b-baf4e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d668f_837b9/rev_d668f-837b9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_177b3_b9e22/rev_177b3-b9e22.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_85048_cd879/rev_85048-cd879.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_553a3_b96e9/rev_553a3-b96e9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_aa9e1_313c2/rev_aa9e1-313c2.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9ed2e_dfc2f/rev_9ed2e-dfc2f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3eb42_7b119/rev_3eb42-7b119.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a78bd_7b50b/rev_a78bd-7b50b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7d2a3_af7fb/rev_7d2a3-af7fb.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4bf5e_dda58/rev_4bf5e-dda58.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a8f6d_9f179/rev_a8f6d-9f179.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a2ff6_d7b03/rev_a2ff6-d7b03.revisions
Conflict type: ImplementList
Conflict body: 
~~FSTMerge~~ implements UnprotectedRootAction ##FSTMerge## implements RootAction ##FSTMerge## implements RootAction, StaplerProxy
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a2ff6_d7b03/rev_a2ff6-d7b03/core/src/main/java/hudson/cli/CLIAction.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_53f75_634d3/rev_53f75-634d3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a6914_d5132/rev_a6914-d5132.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_678b3_ebeda/rev_678b3-ebeda.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4137c_7ff65/rev_4137c-7ff65.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a9aac_4137c/rev_a9aac-4137c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cd011_e33ca/rev_cd011-e33ca.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9328c_d0c4b/rev_9328c-d0c4b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_70fe6_9e09e/rev_70fe6-9e09e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3d8fb_dbf1e/rev_3d8fb-dbf1e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8cd90_ea4cc/rev_8cd90-ea4cc.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c11c6_48efa/rev_c11c6-48efa.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_53317_89ebb/rev_53317-89ebb.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d8eca_b305f/rev_d8eca-b305f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d7c01_140ea/rev_d7c01-140ea.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_03521_3b0e6/rev_03521-3b0e6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b1c05_8a46a/rev_b1c05-8a46a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d0f84_10675/rev_d0f84-10675.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e0352_65548/rev_e0352-65548.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a106b_c8f8e/rev_a106b-c8f8e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_31d54_06bdb/rev_31d54-06bdb.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8067e_6586d/rev_8067e-6586d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_aee01_0b8a2/rev_aee01-0b8a2.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d6c86_d990e/rev_d6c86-d990e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_19a22_6e146/rev_19a22-6e146.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cdf45_ececa/rev_cdf45-ececa.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c23ad_576b5/rev_c23ad-576b5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8dfa6_5b664/rev_8dfa6-5b664.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a900b_be09b/rev_a900b-be09b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_fa891_a900b/rev_fa891-a900b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8abd3_451a6/rev_8abd3-451a6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_baed3_b7c83/rev_baed3-b7c83.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3f7de_e7462/rev_3f7de-e7462.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0d07b_f34ea/rev_0d07b-f34ea.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_72bb4_dd7d8/rev_72bb4-dd7d8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_46e3a_c5e23/rev_46e3a-c5e23.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_eb628_46e3a/rev_eb628-46e3a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_69ff7_721b9/rev_69ff7-721b9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cf985_554e4/rev_cf985-554e4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d4fc7_58799/rev_d4fc7-58799.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_23e9e_68f64/rev_23e9e-68f64.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_51765_98afd/rev_51765-98afd.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c1d48_51765/rev_c1d48-51765.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_207d6_0c2b7/rev_207d6-0c2b7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6db47_9679a/rev_6db47-9679a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a4e01_63846/rev_a4e01-63846.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_bd941_a58e1/rev_bd941-a58e1.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cf396_bce20/rev_cf396-bce20.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cf396_0958b/rev_cf396-0958b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5afda_cf396/rev_5afda-cf396.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_85e9e_8bfe0/rev_85e9e-8bfe0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2c047_87e2a/rev_2c047-87e2a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3f1f1_b2edc/rev_3f1f1-b2edc.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_bc4c1_ca139/rev_bc4c1-ca139.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ca139_bc4c1/rev_ca139-bc4c1.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2bd36_676ec/rev_2bd36-676ec.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f6d54_4ca5a/rev_f6d54-4ca5a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c9432_6f9cf/rev_c9432-6f9cf.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0d373_be79a/rev_0d373-be79a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7eecf_66805/rev_7eecf-66805.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_168c5_4364a/rev_168c5-4364a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4fbe1_2ac0a/rev_4fbe1-2ac0a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ed782_168c5/rev_ed782-168c5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_580c5_760e3/rev_580c5-760e3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_bb8fa_74db6/rev_bb8fa-74db6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_05e67_7aef5/rev_05e67-7aef5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1dc37_5c28e/rev_1dc37-5c28e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_568cc_19438/rev_568cc-19438.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b856c_28e40/rev_b856c-28e40.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f8a73_3fe6e/rev_f8a73-3fe6e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9b947_f2e2c/rev_9b947-f2e2c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_fd97a_e2923/rev_fd97a-e2923.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f4a1a_8011a/rev_f4a1a-8011a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_36346_eddd9/rev_36346-eddd9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_36346_e4cb9/rev_36346-e4cb9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6d7bd_07650/rev_6d7bd-07650.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6cc74_307cc/rev_6cc74-307cc.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_84843_e8698/rev_84843-e8698.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_36c36_52e99/rev_36c36-52e99.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_dda09_2756f/rev_dda09-2756f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_dda09_ede95/rev_dda09-ede95.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_dda09_a469a/rev_dda09-a469a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6ca99_a22e9/rev_6ca99-a22e9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6ca99_9e5d1/rev_6ca99-9e5d1.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_dbdca_6ca99/rev_dbdca-6ca99.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8d79e_0e007/rev_8d79e-0e007.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_bbe36_6eb19/rev_bbe36-6eb19.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_540a5_e998c/rev_540a5-e998c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_328bb_cb623/rev_328bb-cb623.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b3b9d_a05f9/rev_b3b9d-a05f9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2d8af_a05f9/rev_2d8af-a05f9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_303dd_bd844/rev_303dd-bd844.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_072c4_c8930/rev_072c4-c8930.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e7d02_b3bb2/rev_e7d02-b3bb2.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_862bb_f9aae/rev_862bb-f9aae.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ec12c_b01ad/rev_ec12c-b01ad.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_95842_5727f/rev_95842-5727f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2b964_22f22/rev_2b964-22f22.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b9426_f0827/rev_b9426-f0827.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_bd6b9_0fd39/rev_bd6b9-0fd39.revisions
Conflict type: LineBasedMCFd
Conflict body: 
~~FSTMerge~~ @Restricted(NoExternalUse.class)
    transient /*almost final*/ RingBufferLogHandler handler = new RingBufferLogHandler() {
        @Override
        public void publish(LogRecord record) {
            for (Target t : targets) {
                Boolean match = t.matches(record);
                if (match == null) {
                    // domain does not match, so continue looking
                    continue;
                }

                if (match.booleanValue()) {
                    // first logger in configured order that matches name
                    // has sufficient log level
                    super.publish(record);
                }
                return;
            }
        }
    }; ##FSTMerge## private transient /*almost final*/ RingBufferLogHandler handler = new RingBufferLogHandler() {
        @Override
        public void publish(LogRecord record) {
            for (Target t : targets) {
                if(t.includes(record)) {
                    super.publish(record);
                    return;
                }
            }
        }
    }; ##FSTMerge## @Restricted(NoExternalUse.class)
    transient /*almost final*/ RingBufferLogHandler handler = new RingBufferLogHandler() {
        @Override
        public void publish(LogRecord record) {
            for (Target t : orderedTargets()) {
                Boolean match = t.matches(record);
                if (match == null) {
                    // domain does not match, so continue looking
                    continue;
                }

                if (match.booleanValue()) {
                    // most specific logger matches, so publish
                    super.publish(record);
                }
                // most specific logger does not match, so don't publish
                // allows reducing log level for more specific loggers
                return;
            }
        }
    };
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_bd6b9_0fd39/rev_bd6b9-0fd39/core/src/main/java/hudson/logging/LogRecorder.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418355296621/fstmerge_var1_8971169608995707207
@Test public void testSpecificExclusion() {
        LogRecorder lr = new LogRecorder("foo");

        LogRecorder.Target targetH = new LogRecorder.Target("foo.bar", Level.SEVERE);
        LogRecorder.Target targetM = new LogRecorder.Target("foo", Level.INFO);
        LogRecorder.Target targetL = new LogRecorder.Target("", Level.FINE);

        lr.targets.add(targetH);
        lr.targets.add(targetM);
        lr.targets.add(targetL);

        LogRecord r1h = createLogRecord("foo.bar.baz", Level.INFO, "hidden");
        LogRecord r1v = createLogRecord("foo.bar.baz", Level.SEVERE, "visible");
        LogRecord r2h = createLogRecord("foo.bar", Level.INFO, "hidden");
        LogRecord r2v = createLogRecord("foo.bar", Level.SEVERE, "hidden");
        LogRecord r3h = createLogRecord("foo", Level.FINE, "hidden");
        LogRecord r3v = createLogRecord("foo", Level.INFO, "visible");
        LogRecord r4v = createLogRecord("baz", Level.INFO, "visible");
        lr.handler.publish(r1h);
        lr.handler.publish(r1v);
        lr.handler.publish(r2h);
        lr.handler.publish(r2v);
        lr.handler.publish(r3v);
        lr.handler.publish(r3h);
        lr.handler.publish(r4v);

        assertTrue(lr.handler.getView().contains(r1v));
        assertFalse(lr.handler.getView().contains(r1h));
        assertFalse(lr.handler.getView().contains(r2h));
        assertTrue(lr.handler.getView().contains(r2v));
        assertFalse(lr.handler.getView().contains(r3h));
        assertTrue(lr.handler.getView().contains(r3v));
        assertTrue(lr.handler.getView().contains(r4v));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418355296621/fstmerge_base_520330188418083449
=======
@Test public void testSpecificExclusion() {
        LogRecorder lr = new LogRecorder("foo");

        LogRecorder.Target targetLevel0 = new LogRecorder.Target("", Level.FINE);
        LogRecorder.Target targetLevel1 = new LogRecorder.Target("foo", Level.INFO);
        LogRecorder.Target targetLevel2 = new LogRecorder.Target("foo.bar", Level.SEVERE);

        lr.targets.add(targetLevel1);
        lr.targets.add(targetLevel2);
        lr.targets.add(targetLevel0);

        assertEquals(lr.orderedTargets()[0], targetLevel2);
        assertEquals(lr.orderedTargets()[1], targetLevel1);
        assertEquals(lr.orderedTargets()[2], targetLevel0);

        LogRecord r1 = createLogRecord("baz", Level.INFO, "visible");
        LogRecord r2 = createLogRecord("foo", Level.FINE, "hidden");
        LogRecord r3 = createLogRecord("foo.bar", Level.INFO, "hidden");
        LogRecord r4 = createLogRecord("foo.bar.baz", Level.INFO, "hidden");
        LogRecord r5 = createLogRecord("foo.bar.baz", Level.SEVERE, "visible");
        LogRecord r6 = createLogRecord("foo", Level.INFO, "visible");
        lr.handler.publish(r1);
        lr.handler.publish(r2);
        lr.handler.publish(r3);
        lr.handler.publish(r4);
        lr.handler.publish(r5);
        lr.handler.publish(r6);

        assertTrue(lr.handler.getView().contains(r1));
        assertFalse(lr.handler.getView().contains(r2));
        assertFalse(lr.handler.getView().contains(r3));
        assertFalse(lr.handler.getView().contains(r4));
        assertTrue(lr.handler.getView().contains(r5));
        assertTrue(lr.handler.getView().contains(r6));
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418355296621/fstmerge_var2_5312179435069645920

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_bd6b9_0fd39/rev_bd6b9-0fd39/core/src/test/java/hudson/logging/LogRecorderTest.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a7643_93db0/rev_a7643-93db0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_fcbea_f9a3b/rev_fcbea-f9a3b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_669d3_bea02/rev_669d3-bea02.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_85e9d_44244/rev_85e9d-44244.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b4054_b8958/rev_b4054-b8958.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_244e4_a4e42/rev_244e4-a4e42.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_15b15_68adc/rev_15b15-68adc.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d33a7_78931/rev_d33a7-78931.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e1d59_624ed/rev_e1d59-624ed.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e31f8_547a5/rev_e31f8-547a5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cfbf4_5cef1/rev_cfbf4-5cef1.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_78261_c2cb5/rev_78261-c2cb5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ddc3a_fdb49/rev_ddc3a-fdb49.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cd526_48cb1/rev_cd526-48cb1.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5ba9b_ef63c/rev_5ba9b-ef63c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8457b_86602/rev_8457b-86602.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_be7a9_931d2/rev_be7a9-931d2.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_bb5bd_4acae/rev_bb5bd-4acae.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0e122_59ad2/rev_0e122-59ad2.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_380eb_a9da9/rev_380eb-a9da9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e22fb_b1b33/rev_e22fb-b1b33.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c0742_da8eb/rev_c0742-da8eb.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7541e_80063/rev_7541e-80063.revisions
Conflict type: LineBasedMCFd
Conflict body: 
public Object doUnmarshal(final Object result, final HierarchicalStreamReader reader, final UnmarshallingContext context) {
        final SeenFields seenFields = new SeenFields();
        Iterator it = reader.getAttributeNames();
        // Remember outermost Saveable encountered, for reporting below
        if (result instanceof Saveable && context.get("Saveable") == null)
            context.put("Saveable", result);

        // Process attributes before recursing into child elements.
        while (it.hasNext()) {
            String attrAlias = (String) it.next();
            String attrName = mapper.attributeForAlias(attrAlias);
            Class classDefiningField = determineWhichClassDefinesField(reader);
            boolean fieldExistsInClass = fieldDefinedInClass(result, attrName);
            if (fieldExistsInClass) {
                Field field = reflectionProvider.getField(result.getClass(), attrName);
                SingleValueConverter converter = mapper.getConverterFromAttribute(field.getDeclaringClass(),attrName,field.getType());
                Class type = field.getType();
                if (converter == null) {
                    converter = mapper.getConverterFromItemType(type);
                }
                if (converter != null) {
                    Object value = converter.fromString(reader.getAttribute(attrAlias));
                    if (type.isPrimitive()) {
                        type = Primitives.box(type);
                    }
                    if (value != null && !type.isAssignableFrom(value.getClass())) {
                        throw new ConversionException("Cannot convert type " + value.getClass().getName() + " to type " + type.getName());
                    }
                    reflectionProvider.writeField(result, attrName, value, classDefiningField);
                    seenFields.add(classDefiningField, attrName);
                }
            }
        }

        Map implicitCollectionsForCurrentObject = null;
        while (reader.hasMoreChildren()) {
            reader.moveDown();

            boolean critical = false;
            try {
                String fieldName = mapper.realMember(result.getClass(), reader.getNodeName());
                for (Class<?> concrete = result.getClass(); concrete != null; concrete = concrete.getSuperclass()) {
                    // Not quite right since a subclass could shadow a field, but probably suffices:
                    if (criticalFields.contains(concrete.getName() + '#' + fieldName)) {
                        critical = true;
                        break;
                    }
                }
                boolean implicitCollectionHasSameName = mapper.getImplicitCollectionDefForFieldName(result.getClass(), reader.getNodeName()) != null;

                Class classDefiningField = determineWhichClassDefinesField(reader);
                boolean fieldExistsInClass = !implicitCollectionHasSameName && fieldDefinedInClass(result,fieldName);

                Class type = determineType(reader, fieldExistsInClass, result, fieldName, classDefiningField);
                final Object value;
                if (fieldExistsInClass) {
                    Field field = reflectionProvider.getField(result.getClass(),fieldName);
                    value = unmarshalField(context, result, type, field);
                    // TODO the reflection provider should have returned the proper field in first place ....
                    Class definedType = reflectionProvider.getFieldType(result, fieldName, classDefiningField);
                    if (!definedType.isPrimitive()) {
                        type = definedType;
                    }
                } else {
                    value = context.convertAnother(result, type);
                }

                if (value != null && !type.isAssignableFrom(value.getClass())) {
                    LOGGER.warning("Cannot convert type " + value.getClass().getName() + " to type " + type.getName());
                    // behave as if we didn't see this element
                } else {
                    if (fieldExistsInClass) {
                        reflectionProvider.writeField(result, fieldName, value, classDefiningField);
                        seenFields.add(classDefiningField, fieldName);
                    } else {
                        implicitCollectionsForCurrentObject = writeValueToImplicitCollection(context, value, implicitCollectionsForCurrentObject, result, fieldName);
                    }
                }
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418362902311/fstmerge_var1_1114228271570587584
            } catch (MissingFieldException e) {
                if (critical) {
                    throw e;
                }
                LOGGER.log(WARNING,"Skipping a non-existent field "+e.getFieldName(),e);
                addErrorInContext(context, e);
            } catch (CannotResolveClassException e) {
                if (critical) {
                    throw e;
                }
                LOGGER.log(WARNING,"Skipping a non-existent type",e);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418362902311/fstmerge_base_785899995679319119
            } catch (MissingFieldException e) {
                LOGGER.log(WARNING,"Skipping a non-existent field "+e.getFieldName(),e);
                addErrorInContext(context, e);
            } catch (CannotResolveClassException e) {
                LOGGER.log(WARNING,"Skipping a non-existent type",e);
=======
            } catch (XStreamException e) {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418362902311/fstmerge_var2_2406472546287064396
                addErrorInContext(context, e);
            } catch (LinkageError e) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418362902311/fstmerge_var1_1114228271570587584
                if (critical) {
                    throw e;
                }
                LOGGER.log(WARNING,"Failed to resolve a type",e);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418362902311/fstmerge_base_785899995679319119
                LOGGER.log(WARNING,"Failed to resolve a type",e);
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418362902311/fstmerge_var2_2406472546287064396
                addErrorInContext(context, e);
            }

            reader.moveUp();
        }

        // Report any class/field errors in Saveable objects
        if (context.get("ReadError") != null && context.get("Saveable") == result) {
            OldDataMonitor.report((Saveable)result, (ArrayList<Throwable>)context.get("ReadError"));
            context.put("ReadError", null);
        }
        return result;
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7541e_80063/rev_7541e-80063/core/src/main/java/hudson/util/RobustReflectionConverter.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d030f_abc77/rev_d030f-abc77.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ab36f_724f9/rev_ab36f-724f9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8901d_2e1d9/rev_8901d-2e1d9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f99d6_536f6/rev_f99d6-536f6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a49e2_279a4/rev_a49e2-279a4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2d9b2_9454f/rev_2d9b2-9454f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1b173_b2c69/rev_1b173-b2c69.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8ee74_2ae83/rev_8ee74-2ae83.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4c326_1b2ac/rev_4c326-1b2ac.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9beb9_e2b0c/rev_9beb9-e2b0c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_82e94_761af/rev_82e94-761af.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e88de_fdda9/rev_e88de-fdda9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f2946_56024/rev_f2946-56024.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8435c_c23ad/rev_8435c-c23ad.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_29948_8435c/rev_29948-8435c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_67295_7c568/rev_67295-7c568.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a0d6e_54c85/rev_a0d6e-54c85.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_334ce_d6b37/rev_334ce-d6b37.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418369010286/fstmerge_var1_4255600601115682503
@Test public void updateDirectlyWithHtml() throws Exception {
        UpdateSite us = new UpdateSite("default", new URL(baseUrl, "update-center.json.html").toExternalForm());
        assertNull(us.getPlugin("AdaptivePlugin"));
        assertEquals(FormValidation.ok(), us.updateDirectly(false).get());
        assertNotNull(us.getPlugin("AdaptivePlugin"));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418369010286/fstmerge_base_8326310713102906213
@RandomlyFails("CertificateExpiredException: NotAfter: …")
    @Test public void updateDirectlyWithHtml() throws Exception {
        UpdateSite us = new UpdateSite("default", new URL(baseUrl, "update-center.json.html").toExternalForm());
        assertNull(us.getPlugin("AdaptivePlugin"));
        assertEquals(FormValidation.ok(), us.updateDirectly(true).get());
        assertNotNull(us.getPlugin("AdaptivePlugin"));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418369010286/fstmerge_var2_3678711091495198915

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_334ce_d6b37/rev_334ce-d6b37/test/src/test/java/hudson/model/UpdateSiteTest.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_00d27_84e8d/rev_00d27-84e8d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8b64b_bfda9/rev_8b64b-bfda9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_21016_1c99c/rev_21016-1c99c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f9b0f_21016/rev_f9b0f-21016.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_48318_067ac/rev_48318-067ac.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_432d0_5a6cf/rev_432d0-5a6cf.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d4ff3_7a78a/rev_d4ff3-7a78a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_76498_32d8a/rev_76498-32d8a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ae5a3_99e08/rev_ae5a3-99e08.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_86ad8_a4c4e/rev_86ad8-a4c4e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_63cea_0d381/rev_63cea-0d381.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_000b9_6aa5e/rev_000b9-6aa5e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_816f9_fb0ad/rev_816f9-fb0ad.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2dbd6_967a9/rev_2dbd6-967a9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_dd27d_f488b/rev_dd27d-f488b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e1272_b078a/rev_e1272-b078a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f488b_b39a7/rev_f488b-b39a7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5827f_38ae1/rev_5827f-38ae1.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_410ad_a77b9/rev_410ad-a77b9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5a01c_f04b0/rev_5a01c-f04b0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_192c9_0db32/rev_192c9-0db32.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_db4f6_507d3/rev_db4f6-507d3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5de6a_485cc/rev_5de6a-485cc.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4bb0f_ad014/rev_4bb0f-ad014.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_38f67_8a795/rev_38f67-8a795.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_65eeb_dd5a3/rev_65eeb-dd5a3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1f8a8_9a288/rev_1f8a8-9a288.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_20651_86b72/rev_20651-86b72.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_23475_6fd01/rev_23475-6fd01.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ba0ff_3eb31/rev_ba0ff-3eb31.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d487d_43185/rev_d487d-43185.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6b350_8109b/rev_6b350-8109b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_852ab_efd2b/rev_852ab-efd2b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_63ece_f97b5/rev_63ece-f97b5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_769bd_60cff/rev_769bd-60cff.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_11458_ad5cd/rev_11458-ad5cd.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ea1bb_cdc39/rev_ea1bb-cdc39.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7830b_d3671/rev_7830b-d3671.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_75447_bcc86/rev_75447-bcc86.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_14ef6_06669/rev_14ef6-06669.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_eabd1_44a8e/rev_eabd1-44a8e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a9509_1f55b/rev_a9509-1f55b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c1f23_535a7/rev_c1f23-535a7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0f632_90882/rev_0f632-90882.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b2ca5_7937b/rev_b2ca5-7937b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f9624_e7e74/rev_f9624-e7e74.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_41c63_e7e74/rev_41c63-e7e74.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_faea3_ef382/rev_faea3-ef382.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_faea3_c498c/rev_faea3-c498c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b264f_faea3/rev_b264f-faea3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6f6dc_c0730/rev_6f6dc-c0730.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a1cd4_840bb/rev_a1cd4-840bb.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f76ec_7f76a/rev_f76ec-7f76a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0c440_54c13/rev_0c440-54c13.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_32aec_578f9/rev_32aec-578f9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_91a85_139d9/rev_91a85-139d9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c666b_56052/rev_c666b-56052.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7216a_c5ed6/rev_7216a-c5ed6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_15432_66996/rev_15432-66996.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a42eb_66996/rev_a42eb-66996.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_48075_998d1/rev_48075-998d1.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6f8c4_ac80e/rev_6f8c4-ac80e.revisions

=========================================================
=========================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_026b0_ac80e/rev_026b0-ac80e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b0a26_1fab5/rev_b0a26-1fab5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0c3d6_eb0bf/rev_0c3d6-eb0bf.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_bb219_fce4f/rev_bb219-fce4f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b93d7_5789f/rev_b93d7-5789f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_747d5_23bb4/rev_747d5-23bb4.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418430843415/fstmerge_var1_5893592381307396361
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418430843415/fstmerge_base_5420181126356500714
public TextAxis(String name, String... values) {
        super(name, values);
    }
=======
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418430843415/fstmerge_var2_321907238637299206

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_747d5_23bb4/rev_747d5-23bb4/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418430843922/fstmerge_var1_7696835565551662328
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418430843922/fstmerge_base_7630349570863444386
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
=======
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418430843922/fstmerge_var2_1937338982944278770

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_747d5_23bb4/rev_747d5-23bb4/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1bf99_02c0e/rev_1bf99-02c0e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_547d4_929a7/rev_547d4-929a7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_316a4_16143/rev_316a4-16143.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_35b00_c7f81/rev_35b00-c7f81.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418432158135/fstmerge_var1_3230575838069712040
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418432158135/fstmerge_base_3473574051849917058
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418432158135/fstmerge_var2_846547807616031163

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_35b00_c7f81/rev_35b00-c7f81/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418432158615/fstmerge_var1_4672031101787209253
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418432158615/fstmerge_base_437862890147684782
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418432158615/fstmerge_var2_3598784593304397738

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_35b00_c7f81/rev_35b00-c7f81/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_33e8a_a7eb8/rev_33e8a-a7eb8.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418432475931/fstmerge_var1_3953560140881027341
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418432475931/fstmerge_base_9130774989738529638
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418432475931/fstmerge_var2_1589716927888791571

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_33e8a_a7eb8/rev_33e8a-a7eb8/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418432476402/fstmerge_var1_2257305713435638043
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418432476402/fstmerge_base_3051714447301965785
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418432476402/fstmerge_var2_7479552693459591160

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_33e8a_a7eb8/rev_33e8a-a7eb8/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2524a_a0a14/rev_2524a-a0a14.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ee64e_803f9/rev_ee64e-803f9.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418433101509/fstmerge_var1_8102559367442170781
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418433101509/fstmerge_base_5044179371095455887
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418433101509/fstmerge_var2_7376500469000117595

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ee64e_803f9/rev_ee64e-803f9/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418433101951/fstmerge_var1_7035710933871388836
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418433101951/fstmerge_base_827855293837800540
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418433101951/fstmerge_var2_2992028675330750403

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ee64e_803f9/rev_ee64e-803f9/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_45176_b6b7b/rev_45176-b6b7b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cd97b_6566a/rev_cd97b-6566a.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418433721107/fstmerge_var1_2829056322886012932
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418433721107/fstmerge_base_8101657050490414250
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418433721107/fstmerge_var2_8444342470137498815

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cd97b_6566a/rev_cd97b-6566a/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418433721483/fstmerge_var1_8855518233369225297
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418433721483/fstmerge_base_497395155393654080
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418433721483/fstmerge_var2_8893133789532018781

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cd97b_6566a/rev_cd97b-6566a/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_fdc19_64083/rev_fdc19-64083.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418434027768/fstmerge_var1_1237785478868186614
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418434027768/fstmerge_base_8515147825592725716
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418434027768/fstmerge_var2_3425693258657080862

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_fdc19_64083/rev_fdc19-64083/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418434028189/fstmerge_var1_4932898430161388584
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418434028189/fstmerge_base_3431265333464294618
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418434028189/fstmerge_var2_1305712486571345107

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_fdc19_64083/rev_fdc19-64083/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d8b72_f1c70/rev_d8b72-f1c70.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418434313570/fstmerge_var1_1041326110790446298
@Override
    public void buildEnvVars(AbstractBuild<?,?> build, EnvVars env) {
        Run run = getRun();
        
        String value = (null == run) ? "UNKNOWN" : Jenkins.getInstance().getRootUrl() + run.getUrl();
        env.put(name, value);

        env.put(name + ".jobName", getJobName());   // undocumented, left for backward compatibility
        env.put(name + "_JOBNAME", getJobName());   // prefer this version

        env.put(name + ".number" , getNumber ());   // same as above
        env.put(name + "_NUMBER" , getNumber ());
        
        // if run is null, default to the standard '#1' display name format
        env.put(name + "_NAME",  (null == run) ? "#" + getNumber() : run.getDisplayName());  // since 1.504

        String buildResult = (null == run || null == run.getResult()) ? "UNKNOWN" : run.getResult().toString();
        env.put(name + "_RESULT",  buildResult);  // since 1.517

        env.put(name.toUpperCase(Locale.ENGLISH),value); // backward compatibility pre 1.345

    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418434313570/fstmerge_base_7800821370014383103
@Override
    public void buildEnvVars(AbstractBuild<?,?> build, EnvVars env) {
        Run run = getRun();
        
        String value = Jenkins.getInstance().getRootUrl() + run.getUrl();
        env.put(name, value);

        env.put(name + ".jobName", getJobName());   // undocumented, left for backward compatibility
        env.put(name + "_JOBNAME", getJobName());   // prefer this version

        env.put(name + ".number" , getNumber ());   // same as above
        env.put(name + "_NUMBER" , getNumber ());
        
        env.put(name + "_NAME",  run.getDisplayName());  // since 1.504

        String buildResult = (null == run.getResult()) ? "UNKNOWN" : run.getResult().toString();
        env.put(name + "_RESULT",  buildResult);  // since 1.517

        env.put(name.toUpperCase(Locale.ENGLISH),value); // backward compatibility pre 1.345

    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418434313570/fstmerge_var2_9059205802278224142

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d8b72_f1c70/rev_d8b72-f1c70/core/src/main/java/hudson/model/RunParameterValue.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418434333679/fstmerge_var1_6598536017640296318
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418434333679/fstmerge_base_1021019088011934470
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418434333679/fstmerge_var2_3187480640580190556

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d8b72_f1c70/rev_d8b72-f1c70/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418434334130/fstmerge_var1_2386377317358252465
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418434334130/fstmerge_base_1527655349466174677
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418434334130/fstmerge_var2_2748912196520073327

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d8b72_f1c70/rev_d8b72-f1c70/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0b49f_12db6/rev_0b49f-12db6.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418434642049/fstmerge_var1_6391740834075826049
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418434642049/fstmerge_base_5548993762235969989
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418434642049/fstmerge_var2_8925121364027908652

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0b49f_12db6/rev_0b49f-12db6/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418434642513/fstmerge_var1_6300099201277490275
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418434642513/fstmerge_base_8166739362939322579
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418434642513/fstmerge_var2_3407120301010131854

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0b49f_12db6/rev_0b49f-12db6/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5b444_908a2/rev_5b444-908a2.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418434946197/fstmerge_var1_4252928004711495363
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418434946197/fstmerge_base_7908937105868919026
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418434946197/fstmerge_var2_3374169427453235433

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5b444_908a2/rev_5b444-908a2/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418434946649/fstmerge_var1_9207688741360191979
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418434946649/fstmerge_base_6179530565381206099
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418434946649/fstmerge_var2_789251010415832481

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5b444_908a2/rev_5b444-908a2/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_eb910_c3837/rev_eb910-c3837.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418435257147/fstmerge_var1_8593271314019518700
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418435257147/fstmerge_base_118733507330100904
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418435257147/fstmerge_var2_5519377188243388156

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_eb910_c3837/rev_eb910-c3837/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418435257613/fstmerge_var1_7087382601200727163
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418435257613/fstmerge_base_7338258340838717789
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418435257613/fstmerge_var2_602906687368093707

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_eb910_c3837/rev_eb910-c3837/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4a3e5_f234c/rev_4a3e5-f234c.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418435570538/fstmerge_var1_5569159503818892131
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418435570538/fstmerge_base_2026831457427466351
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418435570538/fstmerge_var2_8147234090212781773

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4a3e5_f234c/rev_4a3e5-f234c/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418435570974/fstmerge_var1_7823470302048052286
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418435570974/fstmerge_base_8565646964401540130
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418435570974/fstmerge_var2_230232301654488535

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4a3e5_f234c/rev_4a3e5-f234c/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4a175_f234c/rev_4a175-f234c.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418435879419/fstmerge_var1_5888893202113644984
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418435879419/fstmerge_base_8537155873777825223
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418435879419/fstmerge_var2_6069444643225740026

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4a175_f234c/rev_4a175-f234c/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418435879900/fstmerge_var1_6014505987598937591
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418435879900/fstmerge_base_875721619946004738
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418435879900/fstmerge_var2_1304059497904536371

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4a175_f234c/rev_4a175-f234c/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d5f4d_50cc4/rev_d5f4d-50cc4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_533cf_41927/rev_533cf-41927.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418436496728/fstmerge_var1_6888549900457151722
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418436496728/fstmerge_base_823250366650381085
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418436496728/fstmerge_var2_1084324820976617961

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_533cf_41927/rev_533cf-41927/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418436497171/fstmerge_var1_5547572667117169699
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418436497171/fstmerge_base_4217325727480859793
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418436497171/fstmerge_var2_8200954824297812955

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_533cf_41927/rev_533cf-41927/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d1fb1_1d565/rev_d1fb1-1d565.revisions
Conflict type: LineBasedMCFd
Conflict body: 
public File download(DownloadJob job, URL src) throws IOException {
            CountingInputStream in = null;
            OutputStream out = null;
            try {
                URLConnection con = connect(job,src);
                int total = con.getContentLength();
                in = new CountingInputStream(con.getInputStream());
                byte[] buf = new byte[8192];
                int len;

                File dst = job.getDestination();
                File tmp = new File(dst.getPath()+".tmp");
                out = new FileOutputStream(tmp);

                LOGGER.info("Downloading "+job.getName());
                try {
                    while((len=in.read(buf))>=0) {
                        out.write(buf,0,len);
                        job.status = job.new Installing(total==-1 ? -1 : in.getCount()*100/total);
                    }
                } catch (IOException e) {
                    throw new IOException("Failed to load "+src+" to "+tmp,e);
                }

                if (total!=-1 && total!=tmp.length()) {
                    // don't know exactly how this happens, but report like
                    // http://www.ashlux.com/wordpress/2009/08/14/hudson-and-the-sonar-plugin-fail-maveninstallation-nosuchmethoderror/
                    // indicates that this kind of inconsistency can happen. So let's be defensive
                    throw new IOException("Inconsistent file length: expected "+total+" but only got "+tmp.length());
                }

                return tmp;
            } catch (IOException e) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418436787896/fstmerge_var1_8952998778539480544
                throw new IOException2("Failed to download from "+src,e);
            } finally {
                IOUtils.closeQuietly(in);
                IOUtils.closeQuietly(out);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418436787896/fstmerge_base_8801150506588573006
                throw new IOException2("Failed to download from "+src,e);
=======
                throw new IOException("Failed to download from "+src,e);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418436787896/fstmerge_var2_6797026059513069782
            }
        }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d1fb1_1d565/rev_d1fb1-1d565/core/src/main/java/hudson/model/UpdateCenter.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418436808446/fstmerge_var1_8946908609280797968
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418436808446/fstmerge_base_2445268304577641972
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418436808446/fstmerge_var2_5148866776410874434

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d1fb1_1d565/rev_d1fb1-1d565/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418436808922/fstmerge_var1_3260586512232673113
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418436808922/fstmerge_base_1363966396407168633
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418436808922/fstmerge_var2_3733894348616938375

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d1fb1_1d565/rev_d1fb1-1d565/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a7378_52b25/rev_a7378-52b25.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418437114218/fstmerge_var1_5072350724754597029
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418437114218/fstmerge_base_1822422650405114528
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418437114218/fstmerge_var2_1604466660837732469

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a7378_52b25/rev_a7378-52b25/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418437114654/fstmerge_var1_2224341217496719314
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418437114654/fstmerge_base_5360472147375029725
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418437114654/fstmerge_var2_7506295937325863738

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a7378_52b25/rev_a7378-52b25/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_43066_06348/rev_43066-06348.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418437424561/fstmerge_var1_1721731171859569118
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418437424561/fstmerge_base_6815273028867706431
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418437424561/fstmerge_var2_8834465550042881090

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_43066_06348/rev_43066-06348/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418437424968/fstmerge_var1_4966858643599559799
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418437424968/fstmerge_base_7846719116360608624
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418437424968/fstmerge_var2_5054151949165553809

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_43066_06348/rev_43066-06348/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_20347_2bfc2/rev_20347-2bfc2.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418437734983/fstmerge_var1_5359566792009393443
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418437734983/fstmerge_base_2565625443765464380
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418437734983/fstmerge_var2_5119385386134467542

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_20347_2bfc2/rev_20347-2bfc2/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418437735398/fstmerge_var1_1374085958990697216
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418437735398/fstmerge_base_6537772717277721888
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418437735398/fstmerge_var2_7765922522590616487

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_20347_2bfc2/rev_20347-2bfc2/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3238a_16c39/rev_3238a-16c39.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418438039871/fstmerge_var1_3749218635559809784
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418438039871/fstmerge_base_1012333371692147799
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418438039871/fstmerge_var2_1993522016911185769

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3238a_16c39/rev_3238a-16c39/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418438040327/fstmerge_var1_3647951099320394617
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418438040327/fstmerge_base_4162502542456053578
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418438040327/fstmerge_var2_6279841574485665040

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3238a_16c39/rev_3238a-16c39/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e5f04_9220f/rev_e5f04-9220f.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418438346968/fstmerge_var1_2156572635743530358
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418438346968/fstmerge_base_3768757560649009440
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418438346968/fstmerge_var2_3096161309172567058

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e5f04_9220f/rev_e5f04-9220f/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418438347444/fstmerge_var1_663801141120773996
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418438347444/fstmerge_base_3772235625399469118
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418438347444/fstmerge_var2_8430492205448356512

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e5f04_9220f/rev_e5f04-9220f/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b59c4_54c5d/rev_b59c4-54c5d.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418438658582/fstmerge_var1_6595270041381640546
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418438658582/fstmerge_base_5699683049072389633
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418438658582/fstmerge_var2_932844786048767177

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b59c4_54c5d/rev_b59c4-54c5d/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418438659053/fstmerge_var1_2079346387252907226
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418438659053/fstmerge_base_2319837617870572724
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418438659053/fstmerge_var2_6496815120267003289

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b59c4_54c5d/rev_b59c4-54c5d/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1b706_dad71/rev_1b706-dad71.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_eaf30_9e677/rev_eaf30-9e677.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418439284701/fstmerge_var1_4681411127453997972
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418439284701/fstmerge_base_1517420582408788582
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418439284701/fstmerge_var2_7276707120792980955

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_eaf30_9e677/rev_eaf30-9e677/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418439285075/fstmerge_var1_4926510517612550424
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418439285075/fstmerge_base_584640958887401716
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418439285075/fstmerge_var2_2527518864619181756

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_eaf30_9e677/rev_eaf30-9e677/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b1be2_4570b/rev_b1be2-4570b.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418439598021/fstmerge_var1_3763055540083932578
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418439598021/fstmerge_base_7384930356119622276
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418439598021/fstmerge_var2_2128860683781036545

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b1be2_4570b/rev_b1be2-4570b/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418439598446/fstmerge_var1_2555369073631444402
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418439598446/fstmerge_base_1844133203897201258
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418439598446/fstmerge_var2_5572101264517699738

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b1be2_4570b/rev_b1be2-4570b/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_55d85_7f943/rev_55d85-7f943.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418439913031/fstmerge_var1_2655411782838267371
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418439913031/fstmerge_base_5568397087129808654
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418439913031/fstmerge_var2_1149073599675936221

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_55d85_7f943/rev_55d85-7f943/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418439913518/fstmerge_var1_329383665260676808
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418439913518/fstmerge_base_6162835881965972016
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418439913518/fstmerge_var2_6899568465601453928

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_55d85_7f943/rev_55d85-7f943/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b5595_4c06e/rev_b5595-4c06e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a93f4_e8267/rev_a93f4-e8267.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_eeaa5_95435/rev_eeaa5-95435.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e27b0_5ef8d/rev_e27b0-5ef8d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f27f2_1568a/rev_f27f2-1568a.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418441476130/fstmerge_var1_1796307922689031411
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418441476130/fstmerge_base_6060173872281574923
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418441476130/fstmerge_var2_6052704216199387271

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f27f2_1568a/rev_f27f2-1568a/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418441476553/fstmerge_var1_1419715595384358042
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418441476553/fstmerge_base_4500539811535600766
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418441476553/fstmerge_var2_4623218393510126947

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f27f2_1568a/rev_f27f2-1568a/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_92cd3_19d8c/rev_92cd3-19d8c.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418441792499/fstmerge_var1_1458911610751016837
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418441792499/fstmerge_base_3705782097465642631
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418441792499/fstmerge_var2_7812870543457759156

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_92cd3_19d8c/rev_92cd3-19d8c/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418441792911/fstmerge_var1_7343530404500727811
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418441792911/fstmerge_base_9190958611536833451
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418441792911/fstmerge_var2_5887987486058361078

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_92cd3_19d8c/rev_92cd3-19d8c/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_11fd4_0761c/rev_11fd4-0761c.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418442106137/fstmerge_var1_4342308713600170001
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418442106137/fstmerge_base_6588179376314924273
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418442106137/fstmerge_var2_4270811728907230851

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_11fd4_0761c/rev_11fd4-0761c/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418442106572/fstmerge_var1_8488235761540861003
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418442106572/fstmerge_base_4209815101116595073
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418442106572/fstmerge_var2_5981718715963875429

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_11fd4_0761c/rev_11fd4-0761c/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f1430_cb074/rev_f1430-cb074.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_38216_78e15/rev_38216-78e15.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f17bc_a9a65/rev_f17bc-a9a65.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_df9ad_016f3/rev_df9ad-016f3.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418443366332/fstmerge_var1_1466948821022587578
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418443366332/fstmerge_base_8107450726737560372
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418443366332/fstmerge_var2_1484496776346057898

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_df9ad_016f3/rev_df9ad-016f3/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418443366727/fstmerge_var1_3504148966101459920
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418443366727/fstmerge_base_3880990961345071482
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418443366727/fstmerge_var2_1980463498416528002

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_df9ad_016f3/rev_df9ad-016f3/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e541a_137ef/rev_e541a-137ef.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418443682791/fstmerge_var1_5114577990906712997
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418443682791/fstmerge_base_4107414343871607825
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418443682791/fstmerge_var2_4357507260512712639

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e541a_137ef/rev_e541a-137ef/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418443683250/fstmerge_var1_77428608464149654
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418443683250/fstmerge_base_729057768038031593
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418443683250/fstmerge_var2_3282643035764699669

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e541a_137ef/rev_e541a-137ef/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ce5ff_227c3/rev_ce5ff-227c3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b3c58_e1a2a/rev_b3c58-e1a2a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_971ca_9f222/rev_971ca-9f222.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_eebce_db78f/rev_eebce-db78f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ac3a5_b8c3f/rev_ac3a5-b8c3f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5188b_f3943/rev_5188b-f3943.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d06e2_932c8/rev_d06e2-932c8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5d8a0_1a4e8/rev_5d8a0-1a4e8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a1edb_8ee52/rev_a1edb-8ee52.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_afd8d_005a5/rev_afd8d-005a5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4f006_6152d/rev_4f006-6152d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_95689_1a4e1/rev_95689-1a4e1.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5f443_6302c/rev_5f443-6302c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9ac53_112c6/rev_9ac53-112c6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_703c7_aeebf/rev_703c7-aeebf.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418448422400/fstmerge_var1_1701566153221678593
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418448422400/fstmerge_base_8182966906793045435
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418448422400/fstmerge_var2_6315816327905501169

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_703c7_aeebf/rev_703c7-aeebf/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418448422847/fstmerge_var1_6943394431784809914
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418448422847/fstmerge_base_5190149865220003345
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418448422847/fstmerge_var2_6891593763528590992

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_703c7_aeebf/rev_703c7-aeebf/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c6671_bef07/rev_c6671-bef07.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f948f_67dd4/rev_f948f-67dd4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2f7a4_7f7eb/rev_2f7a4-7f7eb.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8b9ca_e96db/rev_8b9ca-e96db.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418449695195/fstmerge_var1_5921911873129077667
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418449695195/fstmerge_base_8878842119142167726
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418449695195/fstmerge_var2_9098155724304713726

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8b9ca_e96db/rev_8b9ca-e96db/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418449695674/fstmerge_var1_8233525703635915614
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418449695674/fstmerge_base_5153283342396367706
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418449695674/fstmerge_var2_1244526599125304566

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8b9ca_e96db/rev_8b9ca-e96db/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1bcef_2aef6/rev_1bcef-2aef6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2edf2_30e9a/rev_2edf2-30e9a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_aa677_b3bb2/rev_aa677-b3bb2.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a4b63_7ee4d/rev_a4b63-7ee4d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_91634_c5158/rev_91634-c5158.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e4902_1b81e/rev_e4902-1b81e.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418451611675/fstmerge_var1_5872044438993802705
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418451611675/fstmerge_base_7479366811882084322
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418451611675/fstmerge_var2_6151049513670853685

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e4902_1b81e/rev_e4902-1b81e/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418451612128/fstmerge_var1_813015713276120315
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418451612128/fstmerge_base_4574132242305751842
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418451612128/fstmerge_var2_2476037112961292736

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e4902_1b81e/rev_e4902-1b81e/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8767d_e7ca7/rev_8767d-e7ca7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_bffca_bab31/rev_bffca-bab31.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418452241705/fstmerge_var1_3670897216165918955
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418452241705/fstmerge_base_2198935643327854170
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418452241705/fstmerge_var2_6761171454955868093

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_bffca_bab31/rev_bffca-bab31/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418452242087/fstmerge_var1_7317162910455948879
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418452242087/fstmerge_base_2765050029847324688
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418452242087/fstmerge_var2_3450220116297085308

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_bffca_bab31/rev_bffca-bab31/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b517e_23e0e/rev_b517e-23e0e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_19e40_73c00/rev_19e40-73c00.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5aa32_b1520/rev_5aa32-b1520.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a08b1_0f625/rev_a08b1-0f625.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_00b6d_a3d07/rev_00b6d-a3d07.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_af67a_fa7c5/rev_af67a-fa7c5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d172f_5893b/rev_d172f-5893b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7b894_9f3a2/rev_7b894-9f3a2.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6df89_bdad0/rev_6df89-bdad0.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418455128208/fstmerge_var1_3402724262411056058
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418455128208/fstmerge_base_2173907754348306968
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418455128208/fstmerge_var2_7847225656926409111

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6df89_bdad0/rev_6df89-bdad0/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418455128553/fstmerge_var1_7288676001646948147
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418455128553/fstmerge_base_66939425493287570
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418455128553/fstmerge_var2_8259326734701674058

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6df89_bdad0/rev_6df89-bdad0/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_be040_c826a/rev_be040-c826a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0a241_3f8fc/rev_0a241-3f8fc.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c5d01_4f41d/rev_c5d01-4f41d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_125e4_85afb/rev_125e4-85afb.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_12840_a881e/rev_12840-a881e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6c2ff_af4b7/rev_6c2ff-af4b7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e5cac_5d32d/rev_e5cac-5d32d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b401c_a9c94/rev_b401c-a9c94.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_870ef_e6b06/rev_870ef-e6b06.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9ce6b_6206b/rev_9ce6b-6206b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_75c88_c9577/rev_75c88-c9577.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ea954_ad2e7/rev_ea954-ad2e7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7a1e9_ad2e7/rev_7a1e9-ad2e7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cc776_5cf47/rev_cc776-5cf47.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9f3e1_9f16b/rev_9f3e1-9f16b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f193c_a61cf/rev_f193c-a61cf.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a28c2_62222/rev_a28c2-62222.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418460636404/fstmerge_var1_8753905751842662415
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418460636404/fstmerge_base_1403717833314329415
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418460636404/fstmerge_var2_2333023395134996740

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a28c2_62222/rev_a28c2-62222/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418460636771/fstmerge_var1_4058424458566831699
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418460636771/fstmerge_base_8575594634408908449
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418460636771/fstmerge_var2_463818449598013487

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a28c2_62222/rev_a28c2-62222/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a1e0e_1197e/rev_a1e0e-1197e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_78dcd_956ac/rev_78dcd-956ac.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4a3c2_677fd/rev_4a3c2-677fd.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5df3f_fad3f/rev_5df3f-fad3f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8a1b0_aa8f5/rev_8a1b0-aa8f5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a1c30_8fe2f/rev_a1c30-8fe2f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_90337_2fa74/rev_90337-2fa74.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_fac1c_d660d/rev_fac1c-d660d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c84d3_94047/rev_c84d3-94047.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5bad4_cffe9/rev_5bad4-cffe9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e2ceb_1aec0/rev_e2ceb-1aec0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e25c9_8aeb7/rev_e25c9-8aeb7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_97c90_49354/rev_97c90-49354.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_38799_4de07/rev_38799-4de07.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b00ae_9be1e/rev_b00ae-9be1e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_03d95_5ab37/rev_03d95-5ab37.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c7266_65bc0/rev_c7266-65bc0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0bfab_e937b/rev_0bfab-e937b.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418466555220/fstmerge_var1_3672769004219362353
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418466555220/fstmerge_base_7340992899925219579
@Override
        public void onAddedTo(AbstractBuild build) {
            try {
                BuildAction a = new BuildAction(build);
                FileUtils.writeStringToFile(a.getPollingLogFile(),pollingLog);
                build.replaceAction(a);
            } catch (IOException e) {
                LOGGER.log(WARNING,"Failed to persist the polling log",e);
            }
            pollingLog = null;
        }
=======
@Override
        public void onAddedTo(AbstractBuild build) {
            this.build = build;
            try {
                BuildAction a = new BuildAction(build);
                FileUtils.writeStringToFile(a.getPollingLogFile(),pollingLog);
                build.replaceAction(a);
            } catch (IOException e) {
                LOGGER.log(WARNING,"Failed to persist the polling log",e);
            }
            pollingLog = null;
        }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418466555220/fstmerge_var2_84301602742502883

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0bfab_e937b/rev_0bfab-e937b/core/src/main/java/hudson/triggers/SCMTrigger.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8e232_0bfab/rev_8e232-0bfab.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_439a3_013d5/rev_439a3-013d5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_70b0c_b9903/rev_70b0c-b9903.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0ae4c_f2775/rev_0ae4c-f2775.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b578b_a2391/rev_b578b-a2391.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b06e2_ca531/rev_b06e2-ca531.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7f475_5e39f/rev_7f475-5e39f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c438a_682ba/rev_c438a-682ba.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2214e_fe357/rev_2214e-fe357.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_29bfb_da57a/rev_29bfb-da57a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_128ac_2f58c/rev_128ac-2f58c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2f442_01b88/rev_2f442-01b88.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e3952_7b70b/rev_e3952-7b70b.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418470922609/fstmerge_var1_8527177477649382737
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418470922609/fstmerge_base_3920836472372612043
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418470922609/fstmerge_var2_7031937029750927369

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e3952_7b70b/rev_e3952-7b70b/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418470923060/fstmerge_var1_2333148411462824501
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418470923060/fstmerge_base_1405121168387846741
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418470923060/fstmerge_var2_1906737322297357378

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e3952_7b70b/rev_e3952-7b70b/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_44d1c_72f37/rev_44d1c-72f37.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418471257529/fstmerge_var1_5567443393790265853
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418471257529/fstmerge_base_7659091334374638874
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418471257529/fstmerge_var2_497579470310614575

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_44d1c_72f37/rev_44d1c-72f37/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418471257982/fstmerge_var1_3806245979896778320
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418471257982/fstmerge_base_8012843842105745368
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418471257982/fstmerge_var2_5433196191239891702

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_44d1c_72f37/rev_44d1c-72f37/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6201f_6900c/rev_6201f-6900c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_94bc3_17d90/rev_94bc3-17d90.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ef9db_57c2d/rev_ef9db-57c2d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_84c76_89e54/rev_84c76-89e54.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418472583306/fstmerge_var1_5853497252107377004
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418472583306/fstmerge_base_3992709444642726653
public TextAxis(String name, String... values) {
        super(name, values);
    }
=======
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418472583306/fstmerge_var2_3326423555646691933

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_84c76_89e54/rev_84c76-89e54/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418472583751/fstmerge_var1_9047865198469937955
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418472583751/fstmerge_base_3796354136085607192
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
=======
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418472583751/fstmerge_var2_807804130172952443

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_84c76_89e54/rev_84c76-89e54/core/src/main/java/hudson/matrix/Axis.java
Conflict type: LineBasedMCFd
Conflict body: 
private int count(List<Queue.BuildableItem> bis, Label l) {
            int q=0;
            for (Queue.BuildableItem bi : bis) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418472587883/fstmerge_var1_106973655542447616
                for (SubTask st : Tasks.getSubTasksOf(bi.task))
                    if (st.getAssignedLabel()==l)
                        q++;
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418472587883/fstmerge_base_9042585695729008541
                if(bi.task.getAssignedLabel()==l)
                    q++;
=======
                if(bi.getAssignedLabel()==l)
                    q++;
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418472587883/fstmerge_var2_8193521107212027852
            }
            return q;
        }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_84c76_89e54/rev_84c76-89e54/core/src/main/java/hudson/model/LoadStatistics.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9ff96_84c76/rev_9ff96-84c76.revisions
Conflict type: LineBasedMCFd
Conflict body: 
public String getToolHome(Node node, ToolInstallation tool, TaskListener log) throws IOException, InterruptedException {
        if (node.getRootPath() == null) {
            log.error(node.getDisplayName() + " is offline; cannot locate " + tool.getName());
            return null;
        }
        InstallSourceProperty isp = tool.getProperties().get(InstallSourceProperty.class);
        if (isp == null) {
            return null;
        }
        for (ToolInstaller installer : isp.installers) {
            if (installer.appliesTo(node)) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418472961342/fstmerge_var1_5665360830107457260
                Map<ToolInstallation, Semaphore> mutexByTool = mutexByNode.get(node);
                if (mutexByTool == null) {
                    mutexByNode.put(node, mutexByTool = new WeakHashMap<ToolInstallation, Semaphore>());
                }
                Semaphore semaphore = mutexByTool.get(tool);
                if (semaphore == null) {
                    mutexByTool.put(tool, semaphore = new Semaphore(1));
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418472961342/fstmerge_base_6943254639593972441
            	Map<ToolInstallation, Semaphore> mutexByTool;
            	Semaphore semaphore;
            	
                synchronized(mutexByNode) {
                    mutexByTool = mutexByNode.get(node);
                    if (mutexByTool == null) {
                        mutexByNode.put(node, mutexByTool = new WeakHashMap<ToolInstallation, Semaphore>());
                        mutexByTool.put(tool, semaphore = new Semaphore(1));
                    } else {
                    	semaphore = mutexByTool.get(tool);
                    }
=======
                Semaphore semaphore;
                synchronized (mutexByNode) {
                    Map<ToolInstallation, Semaphore> mutexByTool = mutexByNode.get(node);
                    if (mutexByTool == null) {
                        mutexByNode.put(node, mutexByTool = new WeakHashMap<ToolInstallation, Semaphore>());
                    }
                    semaphore = mutexByTool.get(tool);
                    if (semaphore == null) {
                        mutexByTool.put(tool, semaphore = new Semaphore(1));
                    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418472961342/fstmerge_var2_5645770088799309536
                }
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418472961342/fstmerge_base_6943254639593972441

=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418472961342/fstmerge_var2_5645770088799309536
                semaphore.acquire();
                try {
                    return installer.performInstallation(tool, node, log).getRemote();
                } finally {
                    semaphore.release();
                }
            }
        }
        return null;
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9ff96_84c76/rev_9ff96-84c76/core/src/main/java/hudson/tools/InstallerTranslator.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_10466_0d4c0/rev_10466-0d4c0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9ac68_f43a4/rev_9ac68-f43a4.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0826f_f4f28/rev_0826f-f4f28.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d7452_b25e8/rev_d7452-b25e8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8bc00_8caf0/rev_8bc00-8caf0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a389c_20e40/rev_a389c-20e40.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_59189_7d0d1/rev_59189-7d0d1.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_19a8a_551c9/rev_19a8a-551c9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_50cbd_e8b1a/rev_50cbd-e8b1a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e0196_57515/rev_e0196-57515.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e761d_ce180/rev_e761d-ce180.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8ec20_cf5cb/rev_8ec20-cf5cb.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c1614_63c78/rev_c1614-63c78.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_316b2_0f416/rev_316b2-0f416.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_25acd_75578/rev_25acd-75578.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d4f65_77c3c/rev_d4f65-77c3c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b5d9b_a807f/rev_b5d9b-a807f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_694bf_55f8a/rev_694bf-55f8a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cd03f_46c58/rev_cd03f-46c58.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc.revisions
Conflict type: LineBasedMCFd
Conflict body: 
private void flushURLConnection(URLConnection conn) {
        byte[] buf = new byte[1024];
        try {
            InputStream is = conn.getInputStream();
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479872043/fstmerge_base_1781715764180899845
            while (is.read(buf) > 0) {
=======
            while (is.read(buf) >= 0) {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479872043/fstmerge_var2_1520369045069518796
                // Ignore
            }
            is.close();
        } catch (IOException e) {
            try {
                InputStream es = ((HttpURLConnection)conn).getErrorStream();
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479872043/fstmerge_var1_6558414672748261038
                while (es.read(buf) >= 0) {
                    // Ignore
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479872043/fstmerge_base_1781715764180899845
                while (es.read(buf) > 0) {
                    // Ignore
=======
                if (es!=null) {
                    while (es.read(buf) >= 0) {
                        // Ignore
                    }
                    es.close();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479872043/fstmerge_var2_1520369045069518796
                }
            } catch (IOException ex) {
                // Ignore
            }
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/cli/src/main/java/hudson/cli/CLI.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479872133/fstmerge_var1_7093143314898778440
private static String readPemFile(File f) throws IOException{
        FileInputStream is = new FileInputStream(f);
        try {
        DataInputStream dis = new DataInputStream(is);
        byte[] bytes = new byte[(int) f.length()];
        dis.readFully(bytes);
        dis.close();
        return new String(bytes);
        } finally {
            is.close();
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479872133/fstmerge_base_3725961435456330860
private static String readPemFile(File f) throws IOException{
        DataInputStream dis = new DataInputStream(new FileInputStream(f));
        byte[] bytes = new byte[(int) f.length()];
        dis.readFully(bytes);
        dis.close();
        return new String(bytes);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479872133/fstmerge_var2_5526662060904771189

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/cli/src/main/java/hudson/cli/CLI.java
Conflict type: LineBasedMCFd
Conflict body: 
public FilePath(VirtualChannel channel, String remote) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479872425/fstmerge_var1_1807842443244041723
        this.channel = channel == Jenkins.MasterComputer.localChannel ? null : channel;
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479872425/fstmerge_base_5795220598437383374
        this.channel = channel;
=======
        this.channel = channel instanceof LocalChannel ? null : channel;
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479872425/fstmerge_var2_4276291626529097401
        this.remote = normalize(remote);
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/FilePath.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479872566/fstmerge_var1_7743976485227842237
@Override public Void invoke(File dir, VirtualChannel channel) throws IOException, InterruptedException {
            InputStream in = archive.openStream();
            try {
                CountingInputStream cis = new CountingInputStream(in);
                try {
                    if (archive.toExternalForm().endsWith(".zip")) {
                        unzip(dir, cis);
                    } else {
                        readFromTar("input stream", dir, GZIP.extract(cis));
                    }
                } catch (IOException x) {
                    throw new IOException2(String.format("Failed to unpack %s (%d bytes read)", archive, cis.getByteCount()), x);
                }
            } finally {
                in.close();
            }
            return null;
        }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479872566/fstmerge_base_6118793554360811080
=======
@Override public Void invoke(File dir, VirtualChannel channel) throws IOException, InterruptedException {
            InputStream in = archive.openStream();
            try {
                CountingInputStream cis = new CountingInputStream(in);
                try {
                    if (archive.toExternalForm().endsWith(".zip")) {
                        unzip(dir, cis);
                    } else {
                        readFromTar("input stream", dir, GZIP.extract(cis));
                    }
                } catch (IOException x) {
                    throw new IOException(String.format("Failed to unpack %s (%d bytes read)", archive, cis.getByteCount()), x);
                }
            } finally {
                in.close();
            }
            return null;
        }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479872566/fstmerge_var2_8426117737423361399

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/FilePath.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479872864/fstmerge_var1_4474250615690943866
public int copyRecursiveTo(final DirScanner scanner, final FilePath target, final String description) throws IOException, InterruptedException {
        if(this.channel==target.channel) {
            // local to local copy.
            return act(new FileCallable<Integer>() {
                private static final long serialVersionUID = 1L;
                public Integer invoke(File base, VirtualChannel channel) throws IOException {
                    if(!base.exists())  return 0;
                    assert target.channel==null;
                    final File dest = new File(target.remote);
                    final AtomicInteger count = new AtomicInteger();
                    scanner.scan(base, new FileVisitor() {
                        @Override public void visit(File f, String relativePath) throws IOException {
                            if (f.isFile()) {
                                File target = new File(dest, relativePath);
                                target.getParentFile().mkdirs();
                                Util.copyFile(f, target);
                                count.incrementAndGet();
                            }
                        }
                        @Override public boolean understandsSymlink() {
                            return true;
                        }
                        @Override public void visitSymlink(File link, String target, String relativePath) throws IOException {
                            try {
                                Util.createSymlink(dest, target, relativePath, TaskListener.NULL);
                            } catch (InterruptedException x) {
                                throw (IOException) new IOException(x.toString()).initCause(x);
                            }
                            count.incrementAndGet();
                        }
                    });
                    return count.get();
                }
            });
        } else
        if(this.channel==null) {
            // local -> remote copy
            final Pipe pipe = Pipe.createLocalToRemote();

            Future<Void> future = target.actAsync(new FileCallable<Void>() {
                private static final long serialVersionUID = 1L;
                public Void invoke(File f, VirtualChannel channel) throws IOException {
                    try {
                        readFromTar(remote + '/' + description, f,TarCompression.GZIP.extract(pipe.getIn()));
                        return null;
                    } finally {
                        pipe.getIn().close();
                    }
                }
            });
            Future<Integer> future2 = actAsync(new FileCallable<Integer>() {
                private static final long serialVersionUID = 1L;
                @Override public Integer invoke(File f, VirtualChannel channel) throws IOException, InterruptedException {
                    return writeToTar(new File(remote), scanner, TarCompression.GZIP.compress(pipe.getOut()));
                }
            });
            try {
                // JENKINS-9540 in case the reading side failed, report that error first
                future.get();
                return future2.get();
            } catch (ExecutionException e) {
                throw new IOException2(e);
            }
        } else {
            // remote -> local copy
            final Pipe pipe = Pipe.createRemoteToLocal();

            Future<Integer> future = actAsync(new FileCallable<Integer>() {
                private static final long serialVersionUID = 1L;
                public Integer invoke(File f, VirtualChannel channel) throws IOException {
                    try {
                        return writeToTar(f, scanner, TarCompression.GZIP.compress(pipe.getOut()));
                    } finally {
                        pipe.getOut().close();
                    }
                }
            });
            try {
                readFromTar(remote + '/' + description,new File(target.remote),TarCompression.GZIP.extract(pipe.getIn()));
            } catch (IOException e) {// BuildException or IOException
                try {
                    future.get(3,TimeUnit.SECONDS);
                    throw e;    // the remote side completed successfully, so the error must be local
                } catch (ExecutionException x) {
                    // report both errors
                    throw new IOException2(Functions.printThrowable(e),x);
                } catch (TimeoutException _) {
                    // remote is hanging
                    throw e;
                }
            }
            try {
                return future.get();
            } catch (ExecutionException e) {
                throw new IOException2(e);
            }
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479872864/fstmerge_base_4658169057682376772
=======
public int copyRecursiveTo(final DirScanner scanner, final FilePath target, final String description) throws IOException, InterruptedException {
        if(this.channel==target.channel) {
            // local to local copy.
            return act(new FileCallable<Integer>() {
                private static final long serialVersionUID = 1L;
                public Integer invoke(File base, VirtualChannel channel) throws IOException {
                    if(!base.exists())  return 0;
                    assert target.channel==null;
                    final File dest = new File(target.remote);
                    final AtomicInteger count = new AtomicInteger();
                    scanner.scan(base, new FileVisitor() {
                        @Override public void visit(File f, String relativePath) throws IOException {
                            if (f.isFile()) {
                                File target = new File(dest, relativePath);
                                IOUtils.mkdirs(target.getParentFile());
                                Util.copyFile(f, target);
                                count.incrementAndGet();
                            }
                        }
                        @Override public boolean understandsSymlink() {
                            return true;
                        }
                        @Override public void visitSymlink(File link, String target, String relativePath) throws IOException {
                            try {
                                IOUtils.mkdirs(new File(dest, relativePath).getParentFile());
                                Util.createSymlink(dest, target, relativePath, TaskListener.NULL);
                            } catch (InterruptedException x) {
                                throw (IOException) new IOException(x.toString()).initCause(x);
                            }
                            count.incrementAndGet();
                        }
                    });
                    return count.get();
                }
            });
        } else
        if(this.channel==null) {
            // local -> remote copy
            final Pipe pipe = Pipe.createLocalToRemote();

            Future<Void> future = target.actAsync(new FileCallable<Void>() {
                private static final long serialVersionUID = 1L;
                public Void invoke(File f, VirtualChannel channel) throws IOException {
                    try {
                        readFromTar(remote + '/' + description, f,TarCompression.GZIP.extract(pipe.getIn()));
                        return null;
                    } finally {
                        pipe.getIn().close();
                    }
                }
            });
            Future<Integer> future2 = actAsync(new FileCallable<Integer>() {
                private static final long serialVersionUID = 1L;
                @Override public Integer invoke(File f, VirtualChannel channel) throws IOException, InterruptedException {
                    return writeToTar(new File(remote), scanner, TarCompression.GZIP.compress(pipe.getOut()));
                }
            });
            try {
                // JENKINS-9540 in case the reading side failed, report that error first
                future.get();
                return future2.get();
            } catch (ExecutionException e) {
                throw new IOException(e);
            }
        } else {
            // remote -> local copy
            final Pipe pipe = Pipe.createRemoteToLocal();

            Future<Integer> future = actAsync(new FileCallable<Integer>() {
                private static final long serialVersionUID = 1L;
                public Integer invoke(File f, VirtualChannel channel) throws IOException {
                    try {
                        return writeToTar(f, scanner, TarCompression.GZIP.compress(pipe.getOut()));
                    } finally {
                        pipe.getOut().close();
                    }
                }
            });
            try {
                readFromTar(remote + '/' + description,new File(target.remote),TarCompression.GZIP.extract(pipe.getIn()));
            } catch (IOException e) {// BuildException or IOException
                try {
                    future.get(3,TimeUnit.SECONDS);
                    throw e;    // the remote side completed successfully, so the error must be local
                } catch (ExecutionException x) {
                    // report both errors
                    throw new IOException(Functions.printThrowable(e),x);
                } catch (TimeoutException _) {
                    // remote is hanging
                    throw e;
                }
            }
            try {
                return future.get();
            } catch (ExecutionException e) {
                throw new IOException(e);
            }
        }
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479872864/fstmerge_var2_7364393926015875886

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/FilePath.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479873431/fstmerge_var1_1799827781785382829
private static void createClassJarFromWebInfClasses(File archive, File destDir, Project prj) {
        File classesJar = new File(destDir, "WEB-INF/lib/classes.jar");

        ZipFileSet zfs = new ZipFileSet();
        zfs.setProject(prj);
        zfs.setSrc(archive);
        zfs.setIncludes("WEB-INF/classes/");

        MappedResourceCollection mapper = new MappedResourceCollection();
        mapper.add(zfs);

        GlobPatternMapper gm = new GlobPatternMapper();
        gm.setFrom("WEB-INF/classes/*");
        gm.setTo("*");
        mapper.add(gm);

        final long dirTime = archive.lastModified();
        Zip z = new Zip() {
            /**
             * Forces the fixed timestamp for directories to make sure
             * classes.jar always get a consistent checksum.
             */
            protected void zipDir(Resource dir, ZipOutputStream zOut, String vPath,
                                  int mode, ZipExtraField[] extra)
                throws IOException {

                ZipOutputStream wrapped = new ZipOutputStream(new NullOutputStream()) {
                    @Override
                    public void putNextEntry(ZipEntry ze) throws IOException {
                        ze.setTime(dirTime+1999);   // roundup
                        super.putNextEntry(ze);
                    }
                };
                super.zipDir(dir,wrapped,vPath,mode,extra);
            }
        };
        z.setProject(prj);
        z.setTaskType("zip");
        classesJar.getParentFile().mkdirs();
        z.setDestFile(classesJar);
        z.add(mapper);
        z.execute();
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479873431/fstmerge_base_5113383702394039476
=======
private static void createClassJarFromWebInfClasses(File archive, File destDir, Project prj) throws IOException {
        File classesJar = new File(destDir, "WEB-INF/lib/classes.jar");

        ZipFileSet zfs = new ZipFileSet();
        zfs.setProject(prj);
        zfs.setSrc(archive);
        zfs.setIncludes("WEB-INF/classes/");

        MappedResourceCollection mapper = new MappedResourceCollection();
        mapper.add(zfs);

        GlobPatternMapper gm = new GlobPatternMapper();
        gm.setFrom("WEB-INF/classes/*");
        gm.setTo("*");
        mapper.add(gm);

        final long dirTime = archive.lastModified();
        // this ZipOutputStream is reused and not created for each directory
        final ZipOutputStream wrappedZOut = new ZipOutputStream(new NullOutputStream()) {
            @Override
            public void putNextEntry(ZipEntry ze) throws IOException {
                ze.setTime(dirTime+1999);   // roundup
                super.putNextEntry(ze);
            }
        };
        try {
            Zip z = new Zip() {
                /**
                 * Forces the fixed timestamp for directories to make sure
                 * classes.jar always get a consistent checksum.
                 */
                protected void zipDir(Resource dir, ZipOutputStream zOut, String vPath,
                                      int mode, ZipExtraField[] extra)
                    throws IOException {
                    // use wrappedZOut instead of zOut
                    super.zipDir(dir,wrappedZOut,vPath,mode,extra);
                }
            };
            z.setProject(prj);
            z.setTaskType("zip");
            classesJar.getParentFile().mkdirs();
            z.setDestFile(classesJar);
            z.add(mapper);
            z.execute();
        } finally {
            wrappedZOut.close();
        }
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479873431/fstmerge_var2_3613902489272099624

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/ClassicPluginStrategy.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479873481/fstmerge_var1_4465277787707702494
@Override
        protected Class defineClassFromData(File container, byte[] classData, String classname) throws IOException {
            return super.defineClassFromData(container, pluginManager.getCompatibilityTransformer().transform(classname,classData), classname);
        }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479873481/fstmerge_base_5706559335396792210
=======
@Override
        protected Class defineClassFromData(File container, byte[] classData, String classname) throws IOException {
            if (!DISABLE_TRANSFORMER)
                classData = pluginManager.getCompatibilityTransformer().transform(classname, classData);
            return super.defineClassFromData(container, classData, classname);
        }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479873481/fstmerge_var2_6982205617685093761

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/ClassicPluginStrategy.java
Conflict type: LineBasedMCFd
Conflict body: 
public void contextInitialized(ServletContextEvent event) {
        final ServletContext context = event.getServletContext();
        File home=null;
        try {

            // use the current request to determine the language
            LocaleProvider.setProvider(new LocaleProvider() {
                public Locale get() {
                    return Functions.getCurrentLocale();
                }
            });

            // quick check to see if we (seem to) have enough permissions to run. (see #719)
            JVM jvm;
            try {
                jvm = new JVM();
                new URLClassLoader(new URL[0],getClass().getClassLoader());
            } catch(SecurityException e) {
                throw new InsufficientPermissionDetected(e);
            }

            try {// remove Sun PKCS11 provider if present. See http://wiki.jenkins-ci.org/display/JENKINS/Solaris+Issue+6276483
                Security.removeProvider("SunPKCS11-Solaris");
            } catch (SecurityException e) {
                // ignore this error.
            }

            installLogger();

            final FileAndDescription describedHomeDir = getHomeDir(event);
            home = describedHomeDir.file.getAbsoluteFile();
            home.mkdirs();
            System.out.println("Jenkins home directory: "+home+" found at: "+describedHomeDir.description);

            // check that home exists (as mkdirs could have failed silently), otherwise throw a meaningful error
            if (!home.exists())
                throw new NoHomeDir(home);

            recordBootAttempt(home);

            // make sure that we are using XStream in the "enhanced" (JVM-specific) mode
            if(jvm.bestReflectionProvider().getClass()==PureJavaReflectionProvider.class) {
                throw new IncompatibleVMDetected(); // nope
            }

//  JNA is no longer a hard requirement. It's just nice to have. See HUDSON-4820 for more context.
//            // make sure JNA works. this can fail if
//            //    - platform is unsupported
//            //    - JNA is already loaded in another classloader
//            // see http://wiki.jenkins-ci.org/display/JENKINS/JNA+is+already+loaded
//            // TODO: or shall we instead modify Hudson to work gracefully without JNA?
//            try {
//                /*
//                    java.lang.UnsatisfiedLinkError: Native Library /builds/apps/glassfish/domains/hudson-domain/generated/jsp/j2ee-modules/hudson-1.309/loader/com/sun/jna/sunos-sparc/libjnidispatch.so already loaded in another classloader
//                        at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1743)
//                        at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1674)
//                        at java.lang.Runtime.load0(Runtime.java:770)
//                        at java.lang.System.load(System.java:1005)
//                        at com.sun.jna.Native.loadNativeLibraryFromJar(Native.java:746)
//                        at com.sun.jna.Native.loadNativeLibrary(Native.java:680)
//                        at com.sun.jna.Native.<clinit>(Native.java:108)
//                        at hudson.util.jna.GNUCLibrary.<clinit>(GNUCLibrary.java:86)
//                        at hudson.Util.createSymlink(Util.java:970)
//                        at hudson.model.Run.run(Run.java:1174)
//                        at hudson.matrix.MatrixBuild.run(MatrixBuild.java:149)
//                        at hudson.model.ResourceController.execute(ResourceController.java:88)
//                        at hudson.model.Executor.run(Executor.java:123)
//                 */
//                String.valueOf(Native.POINTER_SIZE); // this meaningless operation forces the classloading and initialization
//            } catch (LinkageError e) {
//                if (e.getMessage().contains("another classloader"))
//                    context.setAttribute(APP,new JNADoublyLoaded(e));
//                else
//                    context.setAttribute(APP,new HudsonFailedToLoad(e));
//            }

            // make sure this is servlet 2.4 container or above
            try {
                ServletResponse.class.getMethod("setCharacterEncoding",String.class);
            } catch (NoSuchMethodException e) {
                throw new IncompatibleServletVersionDetected(ServletResponse.class);
            }

            // make sure that we see Ant 1.7
            try {
                FileSet.class.getMethod("getDirectoryScanner");
            } catch (NoSuchMethodException e) {
                throw new IncompatibleAntVersionDetected(FileSet.class);
            }

            // make sure AWT is functioning, or else JFreeChart won't even load.
            if(ChartUtil.awtProblemCause!=null) {
                throw new AWTProblem(ChartUtil.awtProblemCause);
            }

            // some containers (in particular Tomcat) doesn't abort a launch
            // even if the temp directory doesn't exist.
            // check that and report an error
            try {
                File f = File.createTempFile("test", "test");
                f.delete();
            } catch (IOException e) {
                throw new NoTempDir(e);
            }

            // Tomcat breaks XSLT with JDK 5.0 and onward. Check if that's the case, and if so,
            // try to correct it
            try {
                TransformerFactory.newInstance();
                // if this works we are all happy
            } catch (TransformerFactoryConfigurationError x) {
                // no it didn't.
                LOGGER.log(WARNING, "XSLT not configured correctly. Hudson will try to fix this. See http://issues.apache.org/bugzilla/show_bug.cgi?id=40895 for more details",x);
                System.setProperty(TransformerFactory.class.getName(),"com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl");
                try {
                    TransformerFactory.newInstance();
                    LOGGER.info("XSLT is set to the JAXP RI in JRE");
                } catch(TransformerFactoryConfigurationError y) {
                    LOGGER.log(SEVERE, "Failed to correct the problem.");
                }
            }

            installExpressionFactory(event);

            context.setAttribute(APP,new HudsonIsLoading());

<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479874125/fstmerge_var1_2365554599085877649
            initThread = new Thread("Jenkins initialization thread") {
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479874125/fstmerge_base_5840060107923064690
            initThread = new Thread("hudson initialization thread") {
=======
            final File _home = home;
            initThread = new Thread("Jenkins initialization thread") {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479874125/fstmerge_var2_2390987848614264810
                @Override
                public void run() {
                    boolean success = false;
                    try {
                        Jenkins instance = new Hudson(_home, context);
                        context.setAttribute(APP, instance);

                        BootFailure.getBootFailureFile(_home).delete();

                        // at this point we are open for business and serving requests normally
                        LOGGER.info("Jenkins is fully up and running");
                        success = true;
                    } catch (Error e) {
                        new HudsonFailedToLoad(e).publish(context,_home);
                        throw e;
                    } catch (Exception e) {
                        new HudsonFailedToLoad(e).publish(context,_home);
                    } finally {
                        Jenkins instance = Jenkins.getInstance();
                        if(!success && instance!=null)
                            instance.cleanUp();
                    }
                }
            };
            initThread.start();
        } catch (BootFailure e) {
            e.publish(context,home);
        } catch (Error e) {
            LOGGER.log(SEVERE, "Failed to initialize Jenkins",e);
            throw e;
        } catch (RuntimeException e) {
            LOGGER.log(SEVERE, "Failed to initialize Jenkins",e);
            throw e;
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/WebAppMain.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479874516/fstmerge_var1_8657636552545660629
public static boolean isMatrixProject(Object o) {
        return o instanceof MatrixProject;
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479874516/fstmerge_base_6166614198531716338
=======
@Deprecated
    public static boolean isMatrixProject(Object o) {
        return o != null && o.getClass().getName().equals("hudson.matrix.MatrixProject");
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479874516/fstmerge_var2_5843968715975547032

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/Functions.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479874625/fstmerge_var1_5943090384948211000
@Restricted(DoNotUse.class)
    public static String[] printLogRecordHtml(LogRecord r, LogRecord prior) {
        String[] oldParts = prior == null ? new String[4] : logRecordPreformat(prior);
        String[] newParts = logRecordPreformat(r);
        for (int i = 0; i < /* not 4 */3; i++) {
            newParts[i] = "<span class='" + (newParts[i].equals(oldParts[i]) ? "logrecord-metadata-old" : "logrecord-metadata-new") + "'>" + newParts[i] + "</span>";
        }
        return newParts;
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479874625/fstmerge_base_2693901221911485667
=======
@Restricted(NoExternalUse.class)
    public static String[] printLogRecordHtml(LogRecord r, LogRecord prior) {
        String[] oldParts = prior == null ? new String[4] : logRecordPreformat(prior);
        String[] newParts = logRecordPreformat(r);
        for (int i = 0; i < /* not 4 */3; i++) {
            newParts[i] = "<span class='" + (newParts[i].equals(oldParts[i]) ? "logrecord-metadata-old" : "logrecord-metadata-new") + "'>" + newParts[i] + "</span>";
        }
        newParts[3] = Util.xmlEscape(newParts[3]);
        return newParts;
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479874625/fstmerge_var2_154056161946773622

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/Functions.java
Conflict type: LineBasedMCFd
Conflict body: 
public static String getRelativeLinkTo(Item p) {
        Map<Object,String> ancestors = new HashMap<Object,String>();
        View view=null;

        StaplerRequest request = Stapler.getCurrentRequest();
        for( Ancestor a : request.getAncestors() ) {
            ancestors.put(a.getObject(),a.getRelativePath());
            if(a.getObject() instanceof View)
                view = (View) a.getObject();
        }

        String path = ancestors.get(p);
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479874871/fstmerge_base_3287709136516667199
        if(path!=null)  return path;
=======
        if(path!=null) {
            return normalizeURI(path + '/');
        }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479874871/fstmerge_var2_4000510330014735289

        Item i=p;
        String url = "";
        Collection<TopLevelItem> viewItems;
        if (view != null) {
            viewItems = view.getItems();
        } else {
            viewItems = Collections.emptyList();
        }
        while(true) {
            ItemGroup ig = i.getParent();
            url = i.getShortUrl()+url;

<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479874871/fstmerge_base_3287709136516667199
            if(ig== Jenkins.getInstance()) {
=======
            if(ig== Jenkins.getInstance() || (view != null && ig == view.getOwnerItemGroup())) {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479874871/fstmerge_var2_4000510330014735289
                assert i instanceof TopLevelItem;
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479874871/fstmerge_var1_3146665698467995049
                if(viewItems.contains((TopLevelItem)i)) {
                    // if p and the current page belongs to the same view, then return a relative path
                    return normalizeURI(ancestors.get(view)+'/'+url);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479874871/fstmerge_base_3287709136516667199
                if(view!=null && view.contains((TopLevelItem)i)) {
                    // if p and the current page belongs to the same view, then return a relative path
                    return ancestors.get(view)+'/'+url;
=======
                if (view != null) {
                    // assume p and the current page belong to the same view, so return a relative path
                    // (even if they did not, View.getItem does not by default verify ownership)
                    return normalizeURI(ancestors.get(view)+'/'+url);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479874871/fstmerge_var2_4000510330014735289
                } else {
                    // otherwise return a path from the root Hudson
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479874871/fstmerge_base_3287709136516667199
                    return request.getContextPath()+'/'+p.getUrl();
=======
                    return normalizeURI(request.getContextPath()+'/'+p.getUrl());
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479874871/fstmerge_var2_4000510330014735289
                }
            }

            path = ancestors.get(ig);
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479874871/fstmerge_base_3287709136516667199
            if(path!=null)  return path+'/'+url;
=======
            if(path!=null) {
                return normalizeURI(path+'/'+url);
            }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479874871/fstmerge_var2_4000510330014735289

            assert ig instanceof Item; // if not, ig must have been the Hudson instance
            i = (Item) ig;
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/Functions.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479875127/fstmerge_var1_1868399571878423593
public static String breakableString(final String plain) {

        return plain.replaceAll("(\\p{Punct}+\\w)", "<wbr>$1")
                .replaceAll("(\\w{10})(?=\\w{3})", "$1<wbr>")
        ;
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479875127/fstmerge_base_4449164784043532925
=======
public static String breakableString(final String plain) {
        if (plain == null) {
            return null;
        }
        return plain.replaceAll("([\\p{Punct}&&[^;]]+\\w)", "<wbr>$1")
                .replaceAll("([^\\p{Punct}\\s-]{20})(?=[^\\p{Punct}\\s-]{10})", "$1<wbr>")
        ;
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479875127/fstmerge_var2_4459137944248908032

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/Functions.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479875132/fstmerge_var1_4509425768023389494
public static void advertiseHeaders(HttpServletResponse rsp) {
        Jenkins j = Jenkins.getInstance();

        rsp.setHeader("X-Hudson","1.395");
        rsp.setHeader("X-Jenkins", Jenkins.VERSION);
        rsp.setHeader("X-Jenkins-Session", Jenkins.SESSION_HASH);

        TcpSlaveAgentListener tal = j.tcpSlaveAgentListener;
        if (tal !=null) {
            rsp.setIntHeader("X-Hudson-CLI-Port", tal.getPort());
            rsp.setIntHeader("X-Jenkins-CLI-Port", tal.getPort());
            rsp.setIntHeader("X-Jenkins-CLI2-Port", tal.getPort());
            rsp.setHeader("X-Jenkins-CLI-Host", TcpSlaveAgentListener.CLI_HOST_NAME);
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479875132/fstmerge_base_1108168233209279164
=======
public static void advertiseHeaders(HttpServletResponse rsp) {
        Jenkins j = Jenkins.getInstance();
        if (j!=null) {
            rsp.setHeader("X-Hudson","1.395");
            rsp.setHeader("X-Jenkins", Jenkins.VERSION);
            rsp.setHeader("X-Jenkins-Session", Jenkins.SESSION_HASH);

            TcpSlaveAgentListener tal = j.tcpSlaveAgentListener;
            if (tal !=null) {
                rsp.setIntHeader("X-Hudson-CLI-Port", tal.getPort());
                rsp.setIntHeader("X-Jenkins-CLI-Port", tal.getPort());
                rsp.setIntHeader("X-Jenkins-CLI2-Port", tal.getPort());
                rsp.setHeader("X-Jenkins-CLI-Host", TcpSlaveAgentListener.CLI_HOST_NAME);
            }
        }
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479875132/fstmerge_var2_4168348178737471972

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/Functions.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479875625/fstmerge_var1_6478644368320125543
public static String getDigestOf(File file) throws IOException {
        InputStream is = new FileInputStream(file);
        try {
            return getDigestOf(new BufferedInputStream(is));
        } finally {
            is.close();
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479875625/fstmerge_base_8542665231745175652
=======
@Nonnull
    public static String getDigestOf(@Nonnull File file) throws IOException {
        InputStream is = new FileInputStream(file);
        try {
            return getDigestOf(new BufferedInputStream(is));
        } finally {
            is.close();
        }
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479875625/fstmerge_var2_5132916963805948897

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/Util.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479875787/fstmerge_var1_6166431392242177992
public static String wrapToErrorSpan(String s) {
        s = "<span class=error style='display:inline-block'>"+s+"</span>";
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479875787/fstmerge_base_2576633418144267573
public static String wrapToErrorSpan(String s) {
        s = "<span class=error><img src='"+
            Stapler.getCurrentRequest().getContextPath()+ Jenkins.RESOURCE_PATH+
            "/images/none.gif' height=16 width=1>"+s+"</span>";
=======
@Nonnull
    public static String wrapToErrorSpan(@Nonnull String s) {
        s = "<span class=error style='display:inline-block'>"+s+"</span>";
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479875787/fstmerge_var2_5586894888140515162
        return s;
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/Util.java
Conflict type: LineBasedMCFd
Conflict body: 
protected int run() throws Exception {
        job.checkPermission(Item.BUILD);

        ParametersAction a = null;
        if (!parameters.isEmpty()) {
            ParametersDefinitionProperty pdp = job.getProperty(ParametersDefinitionProperty.class);
            if (pdp==null)
                throw new AbortException(job.getFullDisplayName()+" is not parameterized but the -p option was specified");

            //TODO: switch to type annotations after the migration to Java 1.8
            List<ParameterValue> values = new ArrayList<ParameterValue>();

            for (Entry<String, String> e : parameters.entrySet()) {
                String name = e.getKey();
                ParameterDefinition pd = pdp.getParameterDefinition(name);
                if (pd==null) {
                    throw new AbortException(String.format("\'%s\' is not a valid parameter. Did you mean %s?",
                            name, EditDistance.findNearest(name, pdp.getParameterDefinitionNames())));
                }
                ParameterValue val = pd.createValue(this, Util.fixNull(e.getValue()));
                if (val == null) {
                    throw new AbortException(String.format("Cannot resolve the value for the parameter \'%s\'.",name));
                }
                values.add(val);
            }

            // handle missing parameters by adding as default values ISSUE JENKINS-7162
            for(ParameterDefinition pd :  pdp.getParameterDefinitions()) {
                if (parameters.containsKey(pd.getName()))
                    continue;

                // not passed in use default
                ParameterValue defaultValue = pd.getDefaultParameterValue();
                if (defaultValue == null) {
                    throw new AbortException(String.format("No default value for the parameter \'%s\'.",pd.getName()));
                }
                values.add(defaultValue);
            }

            a = new ParametersAction(values);
        }

        if (checkSCM) {
            if (job.poll(new StreamTaskListener(stdout, getClientCharset())).change == Change.NONE) {
                return 0;
            }
        }

<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479877410/fstmerge_base_2353285439693456527
=======
        if (!job.isBuildable()) {
            String msg = Messages.BuildCommand_CLICause_CannotBuildUnknownReasons(job.getFullDisplayName());
            if (job.isDisabled()) {
                msg = Messages.BuildCommand_CLICause_CannotBuildDisabled(job.getFullDisplayName());
            } else if (job.isHoldOffBuildUntilSave()){
                msg = Messages.BuildCommand_CLICause_CannotBuildConfigNotSaved(job.getFullDisplayName());
            }
            stderr.println(msg);
            return -1;
        }

>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479877410/fstmerge_var2_7313694332971050120
        QueueTaskFuture<? extends AbstractBuild> f = job.scheduleBuild2(0, new CLICause(Jenkins.getAuthentication().getName()), a);
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479877410/fstmerge_var1_536562796669724305
        
        if (wait || sync) {
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479877410/fstmerge_base_2353285439693456527

        if (wait || sync) {
=======
        
        if (wait || sync || follow) {
            if (f == null) {
                stderr.println(BUILD_SCHEDULING_REFUSED);
                return -1;
            }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479877410/fstmerge_var2_7313694332971050120
            AbstractBuild b = f.waitForStart();    // wait for the start
            stdout.println("Started "+b.getFullDisplayName());

            if (sync || follow) {
                try {
                    if (consoleOutput) {
                        // read output in a retry loop, by default try only once
                        // writeWholeLogTo may fail with FileNotFound
                        // exception on a slow/busy machine, if it takes
                        // longish to create the log file
                        int retryInterval = 100;
                        for (int i=0;i<=retryCnt;) {
                            try {
                                b.writeWholeLogTo(stdout);
                                break;
                            }
                            catch (FileNotFoundException e) {
                                if ( i == retryCnt ) {
                                    throw e;
                                }
                                i++;
                                Thread.sleep(retryInterval);
                            }
                        }
                    }
                    f.get();    // wait for the completion
                    stdout.println("Completed "+b.getFullDisplayName()+" : "+b.getResult());
                    return b.getResult().ordinal;
                } catch (InterruptedException e) {
                    if (follow) {
                        return 125;
                    } else {
                        // if the CLI is aborted, try to abort the build as well
                        f.cancel(true);
                        throw e;
                    }
                }
            }
        }

        return 0;
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/cli/BuildCommand.java
Conflict type: SameIdFd
Conflict body: 
~~FSTMerge~~ @Argument(index=0, required=true, usage="Name of the build variable")
    public String name; ##FSTMerge## ##FSTMerge## @Argument(index=0, metaVar="NAME", required=true, usage="Name of the build variable")
    public String name;
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/cli/SetBuildParameterCommand.java
Conflict type: SameIdFd
Conflict body: 
~~FSTMerge~~ @Argument(index=1,required=true, usage="Value of the build variable")
    public String value; ##FSTMerge## ##FSTMerge## @Argument(index=1, metaVar="VALUE", required=true, usage="Value of the build variable")
    public String value;
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/cli/SetBuildParameterCommand.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479877784/fstmerge_var1_4857953868671755807
@Override
    protected int run() throws Exception {
        Run r = getCurrentlyBuilding();

        StringParameterValue p = new StringParameterValue(name, value);

        ParametersAction a = r.getAction(ParametersAction.class);
        if (a!=null) {
            ParametersAction b = a.createUpdated(Collections.singleton(p));
            r.addAction(b);
            r.getActions().remove(a);
        } else {
            r.addAction(new ParametersAction(p));
        }

        return 0;
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479877784/fstmerge_base_7249210103878170214
=======
@Override
    protected int run() throws Exception {
        Run r = getCurrentlyBuilding();

        StringParameterValue p = new StringParameterValue(name, value);

        ParametersAction a = r.getAction(ParametersAction.class);
        if (a!=null) {
            r.replaceAction(a.createUpdated(Collections.singleton(p)));
        } else {
            r.addAction(new ParametersAction(p));
        }

        return 0;
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479877784/fstmerge_var2_6005044184633096453

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/cli/SetBuildParameterCommand.java
Conflict type: LineBasedMCFd
Conflict body: 
@Override
    public List<TopLevelItem> getItems() {
        SortedSet<String> names;
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479878320/fstmerge_base_8970722532660796097
=======
        List<TopLevelItem> items = new ArrayList<TopLevelItem>();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479878320/fstmerge_var2_4922244303403335062

        synchronized (this) {
            names = new TreeSet<String>(jobNames);
        }

<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479878320/fstmerge_base_8970722532660796097
        if (includePattern != null) {
            for (Item item : getOwnerItemGroup().getItems()) {
                String itemName = item.getName();
                if (includePattern.matcher(itemName).matches()) {
                    names.add(itemName);
                }
            }
        }
=======
        ItemGroup<? extends TopLevelItem> parent = getOwnerItemGroup();
        List<TopLevelItem> parentItems = new ArrayList<TopLevelItem>(parent.getItems());
        includeItems(parent, parentItems, names);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479878320/fstmerge_var2_4922244303403335062

        Boolean statusFilter = this.statusFilter; // capture the value to isolate us from concurrent update
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479878320/fstmerge_var1_8236709096303629673
        for (TopLevelItem item : Items.getAllItems(getOwnerItemGroup(), TopLevelItem.class)) {
            if (!names.contains(item.getRelativeNameFrom(getOwnerItemGroup()))) continue;
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479878320/fstmerge_base_8970722532660796097
        List<TopLevelItem> items = new ArrayList<TopLevelItem>(names.size());
        for (TopLevelItem item : getOwnerItemGroup().getItems()) {
            if (!names.contains(item.getName())) continue;
=======
        Iterable<? extends TopLevelItem> candidates;
        if (recurse) {
            candidates = Items.getAllItems(parent, TopLevelItem.class);
        } else {
            candidates = parent.getItems();
        }
        for (TopLevelItem item : candidates) {
            if (!names.contains(item.getRelativeNameFrom(getOwnerItemGroup()))) continue;
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479878320/fstmerge_var2_4922244303403335062
            // Add if no status filter or filter matches enabled/disabled status:
            if(statusFilter == null || !(item instanceof AbstractProject)
                              || ((AbstractProject)item).isDisabled() ^ statusFilter)
                items.add(item);
        }

        // check the filters
        Iterable<ViewJobFilter> jobFilters = getJobFilters();
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479878320/fstmerge_var1_8236709096303629673
        List<TopLevelItem> allItems = new ArrayList<TopLevelItem>(parentItems);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479878320/fstmerge_base_8970722532660796097
        List<TopLevelItem> allItems = new ArrayList<TopLevelItem>(getOwnerItemGroup().getItems());
=======
        List<TopLevelItem> allItems = new ArrayList<TopLevelItem>(parentItems);
        if (recurse) allItems = expand(allItems, new ArrayList<TopLevelItem>());
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479878320/fstmerge_var2_4922244303403335062
    	for (ViewJobFilter jobFilter: jobFilters) {
    		items = jobFilter.filter(items, allItems, this);
    	}
        // for sanity, trim off duplicates
        items = new ArrayList<TopLevelItem>(new LinkedHashSet<TopLevelItem>(items));
        
        return items;
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/ListView.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479878351/fstmerge_var1_7936079757567124594
void setRecurse(boolean recurse) {
        this.recurse = recurse;
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479878351/fstmerge_base_4507912273489966003
=======
public void setRecurse(boolean recurse) {
        this.recurse = recurse;
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479878351/fstmerge_var2_2493462358559671399

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/ListView.java
Conflict type: LineBasedMCFd
Conflict body: 
private static User getOrCreate(String id, String fullName, boolean create) {
        String idkey = idStrategy().keyFor(id);

        byNameLock.readLock().lock();
        User u;
        try {
            u = byName.get(idkey);
        } finally {
            byNameLock.readLock().unlock();
        }
        if (u==null && (create || getConfigFileFor(id).exists())) {
            User tmp = new User(id, fullName);
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479878483/fstmerge_var1_6263230445115201937
            User prev = byName.putIfAbsent(idkey, u = tmp);
            if (prev != null) {
                u = prev; // if some has already put a value in the map, use it
                if (LOGGER.isLoggable(Level.FINE) && !fullName.equals(prev.getFullName())) {
                    LOGGER.log(Level.FINE, "mismatch on fullName (‘" + fullName + "’ vs. ‘" + prev.getFullName() + "’) for ‘" + id + "’", new Throwable());
                }
            }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479878483/fstmerge_base_8659875743300829989
            User prev = byName.putIfAbsent(idkey, u = tmp);
            if (prev!=null)
                u = prev;   // if some has already put a value in the map, use it
=======
            User prev;
            byNameLock.readLock().lock();
            try {
                prev = byName.putIfAbsent(idkey, u = tmp);
            } finally {
                byNameLock.readLock().unlock();
            }
            if (prev != null) {
                u = prev; // if some has already put a value in the map, use it
                if (LOGGER.isLoggable(Level.FINE) && !fullName.equals(prev.getFullName())) {
                    LOGGER.log(Level.FINE, "mismatch on fullName (‘" + fullName + "’ vs. ‘" + prev.getFullName() + "’) for ‘" + id + "’", new Throwable());
                }
            } else if (!id.equals(fullName) && !getConfigFileFor(id).exists()) {
                // JENKINS-16332: since the fullName may not be recoverable from the id, and various code may store the id only, we must save the fullName
                try {
                    u.save();
                } catch (IOException x) {
                    LOGGER.log(Level.WARNING, null, x);
                }
            }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479878483/fstmerge_var2_1853928148126886311
        }
        return u;
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/User.java
Conflict type: LineBasedMCFd
Conflict body: 
@WithBridgeMethods(List.class)
    public RunList getBuilds() {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479878514/fstmerge_var1_8447700338541295583
        List<AbstractBuild> r = new ArrayList<AbstractBuild>();
        for (AbstractProject<?,?> p : Jenkins.getInstance().getAllItems(AbstractProject.class))
            for (AbstractBuild<?,?> b : p.getBuilds().newBuilds()){
                if(b.hasParticipant(this))
                    r.add(b);
                else {
                    //append builds that were run by this user
                    Cause.UserIdCause cause = b.getCause(Cause.UserIdCause.class);
                    if (cause != null) {
                        String userId = cause.getUserId();
                        if (userId != null && this.getId() != null && userId.equals(this.getId()))
                            r.add(b);
                    }
                }
            }
        return RunList.fromRuns(r);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479878514/fstmerge_base_872128187412028113
        List<AbstractBuild> r = new ArrayList<AbstractBuild>();
        for (AbstractProject<?,?> p : Jenkins.getInstance().getAllItems(AbstractProject.class))
            for (AbstractBuild<?,?> b : p.getBuilds().newBuilds())
                if(b.hasParticipant(this))
                    r.add(b);
        return RunList.fromRuns(r);
=======
    	return new RunList<Run<?,?>>(Jenkins.getInstance().getAllItems(Job.class)).filter(new Predicate<Run<?,?>>() {
            @Override public boolean apply(Run<?,?> r) {
                return r instanceof AbstractBuild && relatedTo((AbstractBuild<?,?>) r);
            }
        });
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479878514/fstmerge_var2_8708379055890977174
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/User.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879249/fstmerge_var1_8450063467117639762
public ParametersAction createUpdated(Collection<? extends ParameterValue> newValues) {
        List<ParameterValue> r = new ArrayList<ParameterValue>();

        Set<String> names = new HashSet<String>();
        for (ParameterValue v : newValues) {
            names.add(v.name);
        }

        for (Iterator<ParameterValue> itr = parameters.iterator(); itr.hasNext(); ) {
            ParameterValue v = itr.next();
            if (!names.contains(v.getName()))
                r.add(v);
        }

        r.addAll(newValues);

        return new ParametersAction(r);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879249/fstmerge_base_4878215233430105755
=======
@Nonnull
    public ParametersAction createUpdated(Collection<? extends ParameterValue> overrides) {
        if(overrides == null) {
            return new ParametersAction(parameters);
        }
        List<ParameterValue> combinedParameters = newArrayList(overrides);
        Set<String> names = newHashSet();

        for(ParameterValue v : overrides) {
            if (v == null) continue;
            names.add(v.getName());
        }

        for (ParameterValue v : parameters) {
            if (v == null) continue;
            if (!names.contains(v.getName())) {
                combinedParameters.add(v);
            }
        }

        return new ParametersAction(combinedParameters);
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879249/fstmerge_var2_6785767132291534933

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/ParametersAction.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879375/fstmerge_var1_8985887706113275272
public synchronized WaitingItem schedule(Task p, int quietPeriod, Action... actions) {
    	return schedule2(p, quietPeriod, actions).getCreateItem();
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879375/fstmerge_base_2487174950536079718
public synchronized WaitingItem schedule(Task p, int quietPeriod, Action... actions) {
    	return schedule(p, quietPeriod, Arrays.asList(actions));
=======
public synchronized @CheckForNull WaitingItem schedule(Task p, int quietPeriod, Action... actions) {
    	return schedule2(p, quietPeriod, actions).getCreateItem();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879375/fstmerge_var2_8527399537180708064
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/Queue.java
Conflict type: LineBasedMCFd
Conflict body: 
public synchronized boolean cancel(Item item) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879389/fstmerge_var1_4173123330755679804
        LOGGER.log(Level.FINE, "Cancelling {0} item#{1}", new Object[] {item.task, item.id});
        boolean r = item.leave(this);

        LeftItem li = new LeftItem(item);
        li.enter(this);

||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879389/fstmerge_base_7003581742996746808
        LOGGER.fine("Cancelling " + item.task.getFullDisplayName() + " item#" + item.id);
        // use bitwise-OR to make sure that all the branches get evaluated all the time
        boolean r = (item instanceof WaitingItem && waitingList.remove(item)) | blockedProjects.remove(item) | buildables.remove(item);
        if(r)
            item.onCancelled();
=======
        LOGGER.log(Level.FINE, "Cancelling {0} item#{1}", new Object[] {item.task, item.id});
        boolean r = item.cancel(this);

        LeftItem li = new LeftItem(item);
        li.enter(this);

>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879389/fstmerge_var2_3902349183983168720
        return r;
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/Queue.java
Conflict type: LineBasedMCFd
Conflict body: 
public synchronized void maintain() {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879501/fstmerge_var1_1959854107269671884
        LOGGER.log(Level.FINE, "Queue maintenance started {0}", this);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879501/fstmerge_base_164899097241533485
        if (LOGGER.isLoggable(Level.FINE))
            LOGGER.fine("Queue maintenance started " + this);
=======
        LOGGER.log(Level.FINE, "Queue maintenance started {0}", this);

        // The executors that are currently waiting for a job to run.
        Map<Executor,JobOffer> parked = new HashMap<Executor,JobOffer>();

        {// update parked
            for (Computer c : Jenkins.getInstance().getComputers()) {
                for (Executor e : c.getExecutors()) {
                    if (e.isParking()) {
                        parked.put(e,new JobOffer(e));
                    }
                }
            }
        }

>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879501/fstmerge_var2_2712418266973268012

        {// blocked -> buildable
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879501/fstmerge_base_164899097241533485
            Iterator<BlockedItem> itr = blockedProjects.values().iterator();
            while (itr.hasNext()) {
                BlockedItem p = itr.next();
=======
            for (BlockedItem p : new ArrayList<BlockedItem>(blockedProjects.values())) {// copy as we'll mutate the list
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879501/fstmerge_var2_2712418266973268012
                if (!isBuildBlocked(p) && allowNewBuildableTask(p.task)) {
                    // ready to be executed
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879501/fstmerge_base_164899097241533485
                    LOGGER.fine(p.task.getFullDisplayName() + " no longer blocked");
                    itr.remove();
=======
                    p.leave(this);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879501/fstmerge_var2_2712418266973268012
                    makeBuildable(new BuildableItem(p));
                }
            }
        }

        // waitingList -> buildable/blocked
        while (!waitingList.isEmpty()) {
            WaitingItem top = peek();

            if (top.timestamp.compareTo(new GregorianCalendar())>0)
                break; // finished moving all ready items from queue

<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879501/fstmerge_base_164899097241533485
            waitingList.remove(top);
=======
            top.leave(this);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879501/fstmerge_var2_2712418266973268012
            Task p = top.task;
            if (!isBuildBlocked(top) && allowNewBuildableTask(p)) {
                // ready to be executed immediately
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879501/fstmerge_base_164899097241533485
                LOGGER.fine(p.getFullDisplayName() + " ready to build");
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879501/fstmerge_var2_2712418266973268012
                makeBuildable(new BuildableItem(top));
            } else {
                // this can't be built now because another build is in progress
                // set this project aside.
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879501/fstmerge_base_164899097241533485
                LOGGER.fine(p.getFullDisplayName() + " is blocked");
                blockedProjects.put(p,new BlockedItem(top));
=======
                new BlockedItem(top).enter(this);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879501/fstmerge_var2_2712418266973268012
            }
        }

        final QueueSorter s = sorter;
        if (s != null)
        	s.sortBuildableItems(buildables);

        // allocate buildable jobs to executors
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879501/fstmerge_base_164899097241533485
        Iterator<BuildableItem> itr = buildables.iterator();
        while (itr.hasNext()) {
            BuildableItem p = itr.next();

=======
        for (BuildableItem p : new ArrayList<BuildableItem>(buildables)) {// copy as we'll mutate the list in the loop
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879501/fstmerge_var2_2712418266973268012
            // one last check to make sure this build is not blocked.
            if (isBuildBlocked(p)) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879501/fstmerge_base_164899097241533485
                itr.remove();
                blockedProjects.put(p.task,new BlockedItem(p));
=======
                p.leave(this);
                new BlockedItem(p).enter(this);
                LOGGER.log(Level.FINE, "Catching that {0} is blocked in the last minute", p);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879501/fstmerge_var2_2712418266973268012
                continue;
            }

            List<JobOffer> candidates = new ArrayList<JobOffer>(parked.size());
            for (JobOffer j : parked.values())
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879501/fstmerge_base_164899097241533485
                if(j.canTake(p))
=======
                if (j.canTake(p))
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879501/fstmerge_var2_2712418266973268012
                    candidates.add(j);

            MappingWorksheet ws = new MappingWorksheet(p, candidates);
            Mapping m = loadBalancer.map(p.task, ws);
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879501/fstmerge_base_164899097241533485
            if (m == null)
=======
            if (m == null) {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879501/fstmerge_var2_2712418266973268012
                // if we couldn't find the executor that fits,
                // just leave it in the buildables list and
                // check if we can execute other projects
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879501/fstmerge_base_164899097241533485
=======
                LOGGER.log(Level.FINER, "Failed to map {0} to executors. candidates={1} parked={2}", new Object[]{p, candidates, parked.values()});
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879501/fstmerge_var2_2712418266973268012
                continue;
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879501/fstmerge_base_164899097241533485
=======
            }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879501/fstmerge_var2_2712418266973268012

            // found a matching executor. use it.
            WorkUnitContext wuc = new WorkUnitContext(p);
            m.execute(wuc);

<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879501/fstmerge_base_164899097241533485
            itr.remove();
=======
            p.leave(this);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879501/fstmerge_var2_2712418266973268012
            if (!wuc.getWorkUnits().isEmpty())
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879501/fstmerge_base_164899097241533485
                pendings.add(p);
=======
                makePending(p);
            else
                LOGGER.log(Level.FINE, "BuildableItem {0} with empty work units!?", p);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879501/fstmerge_var2_2712418266973268012
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/Queue.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879513/fstmerge_var1_2877324743271059938
private boolean makePending(BuildableItem p) {
        p.isPending = true;
        return pendings.add(p);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879513/fstmerge_base_5659158507428693006
=======
private boolean makePending(BuildableItem p) {
        // LOGGER.info("Making "+p.task+" pending"); // REMOVE
        p.isPending = true;
        return pendings.add(p);
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879513/fstmerge_var2_4925290942439718936

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/Queue.java
Conflict type: LineBasedMCFd
Conflict body: 
@Override
        public String toString() {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879702/fstmerge_var1_8071722887858073785
            return getClass().getName() + ':' + task + ':' + getWhy();
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879702/fstmerge_base_5895299532694481068
            return getClass().getName()+':'+task.toString();
=======
            return getClass().getName() + ':' + task + ':' + id;
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879702/fstmerge_var2_8381160371813738599
        }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/Queue.java
Conflict type: LineBasedMCFd
Conflict body: 
public CauseOfBlockage getCauseOfBlockage() {
            Jenkins jenkins = Jenkins.getInstance();
            if(ifBlockedByHudsonShutdown(task))
                return CauseOfBlockage.fromMessage(Messages._Queue_HudsonIsAboutToShutDown());

            Label label = getAssignedLabel();
            List<Node> allNodes = jenkins.getNodes();
            if (allNodes.isEmpty())
                label = null;    // no master/slave. pointless to talk about nodes

            if (label != null) {
                Set<Node> nodes = label.getNodes();
                if (label.isOffline()) {
                    if (nodes.size() != 1)      return new BecauseLabelIsOffline(label);
                    else                        return new BecauseNodeIsOffline(nodes.iterator().next());
                } else {
                    if (nodes.size() != 1)      return new BecauseLabelIsBusy(label);
                    else                        return new BecauseNodeIsBusy(nodes.iterator().next());
                }
            } else {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879787/fstmerge_var1_606259365927177853
                CauseOfBlockage c;
                for (Node node : allNodes) {
                    if (node.toComputer().isPartiallyIdle()) {
                        c = canTake(node);
                        if (c==null)    break;
                    }
                }

||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879787/fstmerge_base_2326115713948240793
                CauseOfBlockage c = null;
                for (Node node : allNodes) {
                    if (node.toComputer().isPartiallyIdle()) {
                        c = canTake(node);
                        if (c==null)    break;
                    }
                }

=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879787/fstmerge_var2_9001240932516260380
                return CauseOfBlockage.createNeedsMoreExecutor(Messages._Queue_WaitingForNextAvailableExecutor());
            }
        }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/Queue.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879885/fstmerge_var1_403350575694709579
public synchronized WorkUnit pop() throws InterruptedException {
        final Executor exec = Executor.currentExecutor();

        if (exec instanceof OneOffExecutor) {
            OneOffExecutor ooe = (OneOffExecutor) exec;
            final WorkUnit wu = ooe.getAssignedWorkUnit();
            pendings.remove(wu.context.item);

            LeftItem li = new LeftItem(wu.context);
            li.enter(this);
            return wu;
        }

        try {
            while (true) {
                final JobOffer offer = new JobOffer(exec);
                long sleep = -1;

                // consider myself parked
                assert !parked.containsKey(exec);
                parked.put(exec, offer);

                // reuse executor thread to do a queue maintenance.
                // at the end of this we get all the buildable jobs
                // in the buildables field.
                maintain();

                // we went over all the buildable projects and awaken
                // all the executors that got work to do. now, go to sleep
                // until this thread is awakened. If this executor assigned a job to
                // itself above, the block method will return immediately.

                if (!waitingList.isEmpty()) {
                    // wait until the first item in the queue is due
                    sleep = peek().timestamp.getTimeInMillis() - new GregorianCalendar().getTimeInMillis();
                    if (sleep < 100) sleep = 100;    // avoid wait(0)
                }

                if (sleep == -1)
                    offer.event.block();
                else
                    offer.event.block(sleep);

                // retract the offer object
                assert parked.get(exec) == offer;
                parked.remove(exec);

                // am I woken up because I have a project to build?
                if (offer.workUnit != null) {
                    // if so, just build it
                    LOGGER.log(Level.FINE, "Pop returning {0} for {1}", new Object[] {offer.workUnit, exec.getName()});

                    // TODO: I think this has to be done by the last executor that leaves the pop(), not by main executor
                    if (offer.workUnit.isMainWork()) {
                        pendings.remove(offer.workUnit.context.item);
                        LeftItem li = new LeftItem(offer.workUnit.context);
                        li.enter(this);
                    }

                    return offer.workUnit;
                }
                // otherwise run a queue maintenance
            }
        } finally {
            // remove myself from the parked list
            JobOffer offer = parked.remove(exec);
            if (offer != null && offer.workUnit != null) {
                // we are already assigned a project, but now we can't handle it.
                offer.workUnit.context.abort(new AbortException());
                if(offer.workUnit.context.item!=null && pendings.contains(offer.workUnit.context.item)){
                    //we are already assigned a project and moved it into pendings, but something wrong had happened before an executor could take it. 
                    pendings.remove(offer.workUnit.context.item);
                    //return it into queue, it does not have to cause this problem, it can be caused by another item.
                    buildables.add(offer.workUnit.context.item);
                }
                    
            }

            // since this executor might have been chosen for
            // maintenance, schedule another one. Worst case
            // we'll just run a pointless maintenance, and that's
            // fine.
            scheduleMaintenance();
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879885/fstmerge_base_301465463248369351
public synchronized WorkUnit pop() throws InterruptedException {
        final Executor exec = Executor.currentExecutor();

        if (exec instanceof OneOffExecutor) {
            OneOffExecutor ooe = (OneOffExecutor) exec;
            final WorkUnit wu = ooe.getAssignedWorkUnit();
            pendings.remove(wu.context.item);
            return wu;
        }

        try {
            while (true) {
                final JobOffer offer = new JobOffer(exec);
                long sleep = -1;

                // consider myself parked
                assert !parked.containsKey(exec);
                parked.put(exec, offer);

                // reuse executor thread to do a queue maintenance.
                // at the end of this we get all the buildable jobs
                // in the buildables field.
                maintain();

                // we went over all the buildable projects and awaken
                // all the executors that got work to do. now, go to sleep
                // until this thread is awakened. If this executor assigned a job to
                // itself above, the block method will return immediately.

                if (!waitingList.isEmpty()) {
                    // wait until the first item in the queue is due
                    sleep = peek().timestamp.getTimeInMillis() - new GregorianCalendar().getTimeInMillis();
                    if (sleep < 100) sleep = 100;    // avoid wait(0)
                }

                if (sleep == -1)
                    offer.event.block();
                else
                    offer.event.block(sleep);

                // retract the offer object
                assert parked.get(exec) == offer;
                parked.remove(exec);

                // am I woken up because I have a project to build?
                if (offer.workUnit != null) {
                    // if so, just build it
                    LOGGER.fine("Pop returning " + offer.workUnit + " for " + exec.getName());

                    // TODO: I think this has to be done by the last executor that leaves the pop(), not by main executor
                    if (offer.workUnit.isMainWork())
                        pendings.remove(offer.workUnit.context.item);

                    return offer.workUnit;
                }
                // otherwise run a queue maintenance
            }
        } finally {
            // remove myself from the parked list
            JobOffer offer = parked.remove(exec);
            if (offer != null && offer.workUnit != null) {
                // we are already assigned a project, but now we can't handle it.
                offer.workUnit.context.abort(new AbortException());
            }

            // since this executor might have been chosen for
            // maintenance, schedule another one. Worst case
            // we'll just run a pointless maintenance, and that's
            // fine.
            scheduleMaintenance();
        }
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479879885/fstmerge_var2_3773209826359502515

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/Queue.java
Conflict type: LineBasedMCFd
Conflict body: 
@Override protected void compute() throws Exception {
            int itemCount = 0;
            for (Item item : items) {
                for (Job<?,?> job : item.getAllJobs()) {
                    if (job instanceof AbstractProject) {
                        AbstractProject<?,?> p = (AbstractProject) job;
                        RunList<? extends AbstractBuild<?,?>> builds = p.getBuilds();
                        int buildCount = 0;
                        for (AbstractBuild<?,?> build : builds) {
                            if (canceled()) {
                                return;
                            }
                            for (ChangeLogSet.Entry entry : build.getChangeSet()) {
                                User user = entry.getAuthor();
                                UserInfo info = users.get(user);
                                if (info == null) {
                                    UserInfo userInfo = new UserInfo(user, p, build.getTimestamp());
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479880250/fstmerge_base_8325048490794866150
                                    userInfo.avatar = UserAvatarResolver.resolve(user, iconSize);
=======
                                    userInfo.avatar = UserAvatarResolver.resolveOrNull(user, iconSize);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479880250/fstmerge_var2_9156710155167011218
                                    synchronized (this) {
                                        users.put(user, userInfo);
                                        modified.add(user);
                                    }
                                } else if (info.getLastChange().before(build.getTimestamp())) {
                                    synchronized (this) {
                                        info.project = p;
                                        info.lastChange = build.getTimestamp();
                                        modified.add(user);
                                    }
                                }
                            }
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479880250/fstmerge_base_8325048490794866150
                            // XXX consider also adding the user of the UserCause when applicable
=======
                            // TODO consider also adding the user of the UserCause when applicable
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479880250/fstmerge_var2_9156710155167011218
                            buildCount++;
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479880250/fstmerge_base_8325048490794866150
=======
                            // TODO this defeats lazy-loading. Should rather do a breadth-first search, as in hudson.plugins.view.dashboard.builds.LatestBuilds
                            // (though currently there is no quick implementation of RunMap.size() ~ idOnDisk.size(), which would be needed for proper progress)
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479880250/fstmerge_var2_9156710155167011218
                            progress((itemCount + 1.0 * buildCount / builds.size()) / (items.size() + 1));
                        }
                    }
                }
                itemCount++;
                progress(1.0 * itemCount / (items.size() + /* handling User.getAll */1));
            }
            if (unknown != null) {
                if (canceled()) {
                    return;
                }
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479880250/fstmerge_var1_3941710982096500976
                for (User u : User.getAll()) { // TODO nice to have a method to iterate these lazily
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479880250/fstmerge_base_8325048490794866150
                for (User u : User.getAll()) { // XXX nice to have a method to iterate these lazily
=======
                for (User u : User.getAll()) { // TODO nice to have a method to iterate these lazily
                    if (canceled()) {
                        return;
                    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479880250/fstmerge_var2_9156710155167011218
                    if (u == unknown) {
                        continue;
                    }
                    if (!users.containsKey(u)) {
                        UserInfo userInfo = new UserInfo(u, null, null);
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479880250/fstmerge_base_8325048490794866150
                        userInfo.avatar = UserAvatarResolver.resolve(u, iconSize);
=======
                        userInfo.avatar = UserAvatarResolver.resolveOrNull(u, iconSize);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479880250/fstmerge_var2_9156710155167011218
                        synchronized (this) {
                            users.put(u, userInfo);
                            modified.add(u);
                        }
                    }
                }
            }
        }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/View.java
Conflict type: LineBasedMCFd
Conflict body: 
@WebMethod(name = "config.xml")
    public HttpResponse doConfigDotXml(StaplerRequest req) throws IOException {
        if (req.getMethod().equals("GET")) {
            // read
            checkPermission(READ);
            return new HttpResponse() {
                public void generateResponse(StaplerRequest req, StaplerResponse rsp, Object node) throws IOException, ServletException {
                    rsp.setContentType("application/xml");
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479880320/fstmerge_var1_5576555494623014162
                    // pity we don't have a handy way to clone Jenkins.XSTREAM to temp add the omit Field
                    XStream2 xStream2 = new XStream2();
                    xStream2.omitField(View.class, "owner");
                    xStream2.toXMLUTF8(View.this,  rsp.getOutputStream());
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479880320/fstmerge_base_6806578724962067897
                    // pity we don't have a handy way to clone Jenkins.XSTREAM to temp add the omit Field
                    XStream2 xStream2 = new XStream2();
                    xStream2.omitField(View.class, "owner");
                    xStream2.toXMLUTF8(this,  rsp.getOutputStream());
=======
                    View.this.writeXml(rsp.getOutputStream());
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479880320/fstmerge_var2_1554048917366208622
                }
            };
        }
        if (req.getMethod().equals("POST")) {
            // submission
            updateByXml(new StreamSource(req.getReader()));
            return HttpResponses.ok();
        }

        // huh?
        return HttpResponses.error(SC_BAD_REQUEST, "Unexpected request method " + req.getMethod());
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/View.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479880512/fstmerge_var1_6414184043884715114
private void serveFile(StaplerRequest req, StaplerResponse rsp, VirtualFile root, String icon, boolean serveDirIndex) throws IOException, ServletException, InterruptedException {
        // handle form submission
        String pattern = req.getParameter("pattern");
        if(pattern==null)
            pattern = req.getParameter("path"); // compatibility with Hudson<1.129
        if(pattern!=null && !Util.isAbsoluteUri(pattern)) {// avoid open redirect
            rsp.sendRedirect2(pattern);
            return;
        }

        String path = getPath(req);
        if(path.replace('\\','/').indexOf("/../")!=-1) {
            // don't serve anything other than files in the artifacts dir
            rsp.sendError(HttpServletResponse.SC_BAD_REQUEST);
            return;
        }

        // split the path to the base directory portion "abc/def/ghi" which doesn't include any wildcard,
        // and the GLOB portion "**/*.xml" (the rest)
        StringBuilder _base = new StringBuilder();
        StringBuilder _rest = new StringBuilder();
        int restSize=-1; // number of ".." needed to go back to the 'base' level.
        boolean zip=false;  // if we are asked to serve a zip file bundle
        boolean plain = false; // if asked to serve a plain text directory listing
        {
            boolean inBase = true;
            StringTokenizer pathTokens = new StringTokenizer(path,"/");
            while(pathTokens.hasMoreTokens()) {
                String pathElement = pathTokens.nextToken();
                // Treat * and ? as wildcard unless they match a literal filename
                if((pathElement.contains("?") || pathElement.contains("*"))
                        && inBase && !root.child((_base.length() > 0 ? _base + "/" : "") + pathElement).exists())
                    inBase = false;
                if(pathElement.equals("*zip*")) {
                    // the expected syntax is foo/bar/*zip*/bar.zip
                    // the last 'bar.zip' portion is to causes browses to set a good default file name.
                    // so the 'rest' portion ends here.
                    zip=true;
                    break;
                }
                if(pathElement.equals("*plain*")) {
                    plain = true;
                    break;
                }

                StringBuilder sb = inBase?_base:_rest;
                if(sb.length()>0)   sb.append('/');
                sb.append(pathElement);
                if(!inBase)
                    restSize++;
            }
        }
        restSize = Math.max(restSize,0);
        String base = _base.toString();
        String rest = _rest.toString();

        // this is the base file/directory
        VirtualFile baseFile = root.child(base);

        if(baseFile.isDirectory()) {
            if(zip) {
                rsp.setContentType("application/zip");
                zip(rsp.getOutputStream(), baseFile, rest);
                return;
            }
            if (plain) {
                rsp.setContentType("text/plain;charset=UTF-8");
                OutputStream os = rsp.getOutputStream();
                try {
                    for (VirtualFile kid : baseFile.list()) {
                        os.write(kid.getName().getBytes("UTF-8"));
                        if (kid.isDirectory()) {
                            os.write('/');
                        }
                        os.write('\n');
                    }
                    os.flush();
                } finally {
                    os.close();
                }
                return;
            }

            if(rest.length()==0) {
                // if the target page to be displayed is a directory and the path doesn't end with '/', redirect
                StringBuffer reqUrl = req.getRequestURL();
                if(reqUrl.charAt(reqUrl.length()-1)!='/') {
                    rsp.sendRedirect2(reqUrl.append('/').toString());
                    return;
                }
            }

            List<List<Path>> glob = null;

            if(rest.length()>0) {
                // the rest is Ant glob pattern
                glob = patternScan(baseFile, rest, createBackRef(restSize));
            } else
            if(serveDirIndex) {
                // serve directory index
                glob = buildChildPaths(baseFile, req.getLocale());
            }

            if(glob!=null) {
                // serve glob
                req.setAttribute("it", this);
                List<Path> parentPaths = buildParentPath(base,restSize);
                req.setAttribute("parentPath",parentPaths);
                req.setAttribute("backPath", createBackRef(restSize));
                req.setAttribute("topPath", createBackRef(parentPaths.size()+restSize));
                req.setAttribute("files", glob);
                req.setAttribute("icon", icon);
                req.setAttribute("path", path);
                req.setAttribute("pattern",rest);
                req.setAttribute("dir", baseFile);
                req.getView(this,"dir.jelly").forward(req, rsp);
                return;
            }

            // convert a directory service request to a single file service request by serving
            // 'index.html'
            baseFile = baseFile.child(indexFileName);
        }

        //serve a single file
        if(!baseFile.exists()) {
            rsp.sendError(HttpServletResponse.SC_NOT_FOUND);
            return;
        }

        boolean view = rest.equals("*view*");

        if(rest.equals("*fingerprint*")) {
            rsp.forward(Jenkins.getInstance().getFingerprint(Util.getDigestOf(baseFile.open())), "/", req);
            return;
        }

        long lastModified = baseFile.lastModified();
        long length = baseFile.length();

        if(LOGGER.isLoggable(Level.FINE))
            LOGGER.fine("Serving "+baseFile+" with lastModified=" + lastModified + ", length=" + length);

        InputStream in = baseFile.open();
        if (view) {
            // for binary files, provide the file name for download
            rsp.setHeader("Content-Disposition", "inline; filename=" + baseFile.getName());

            // pseudo file name to let the Stapler set text/plain
            rsp.serveFile(req, in, lastModified, -1, length, "plain.txt");
        } else {
            rsp.serveFile(req, in, lastModified, -1, length, baseFile.getName() );
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479880512/fstmerge_base_536272057950358744
=======
private void serveFile(StaplerRequest req, StaplerResponse rsp, VirtualFile root, String icon, boolean serveDirIndex) throws IOException, ServletException, InterruptedException {
        // handle form submission
        String pattern = req.getParameter("pattern");
        if(pattern==null)
            pattern = req.getParameter("path"); // compatibility with Hudson<1.129
        if(pattern!=null && !Util.isAbsoluteUri(pattern)) {// avoid open redirect
            rsp.sendRedirect2(pattern);
            return;
        }

        String path = getPath(req);
        if(path.replace('\\','/').indexOf("/../")!=-1) {
            // don't serve anything other than files in the artifacts dir
            rsp.sendError(HttpServletResponse.SC_BAD_REQUEST);
            return;
        }

        // split the path to the base directory portion "abc/def/ghi" which doesn't include any wildcard,
        // and the GLOB portion "**/*.xml" (the rest)
        StringBuilder _base = new StringBuilder();
        StringBuilder _rest = new StringBuilder();
        int restSize=-1; // number of ".." needed to go back to the 'base' level.
        boolean zip=false;  // if we are asked to serve a zip file bundle
        boolean plain = false; // if asked to serve a plain text directory listing
        {
            boolean inBase = true;
            StringTokenizer pathTokens = new StringTokenizer(path,"/");
            while(pathTokens.hasMoreTokens()) {
                String pathElement = pathTokens.nextToken();
                // Treat * and ? as wildcard unless they match a literal filename
                if((pathElement.contains("?") || pathElement.contains("*"))
                        && inBase && !root.child((_base.length() > 0 ? _base + "/" : "") + pathElement).exists())
                    inBase = false;
                if(pathElement.equals("*zip*")) {
                    // the expected syntax is foo/bar/*zip*/bar.zip
                    // the last 'bar.zip' portion is to causes browses to set a good default file name.
                    // so the 'rest' portion ends here.
                    zip=true;
                    break;
                }
                if(pathElement.equals("*plain*")) {
                    plain = true;
                    break;
                }

                StringBuilder sb = inBase?_base:_rest;
                if(sb.length()>0)   sb.append('/');
                sb.append(pathElement);
                if(!inBase)
                    restSize++;
            }
        }
        restSize = Math.max(restSize,0);
        String base = _base.toString();
        String rest = _rest.toString();

        // this is the base file/directory
        VirtualFile baseFile = root.child(base);

        if(baseFile.isDirectory()) {
            if(zip) {
                rsp.setContentType("application/zip");
                zip(rsp.getOutputStream(), baseFile, rest);
                return;
            }
            if (plain) {
                rsp.setContentType("text/plain;charset=UTF-8");
                OutputStream os = rsp.getOutputStream();
                try {
                    for (VirtualFile kid : baseFile.list()) {
                        os.write(kid.getName().getBytes("UTF-8"));
                        if (kid.isDirectory()) {
                            os.write('/');
                        }
                        os.write('\n');
                    }
                    os.flush();
                } finally {
                    os.close();
                }
                return;
            }

            if(rest.length()==0) {
                // if the target page to be displayed is a directory and the path doesn't end with '/', redirect
                StringBuffer reqUrl = req.getRequestURL();
                if(reqUrl.charAt(reqUrl.length()-1)!='/') {
                    rsp.sendRedirect2(reqUrl.append('/').toString());
                    return;
                }
            }

            List<List<Path>> glob = null;

            if(rest.length()>0) {
                // the rest is Ant glob pattern
                glob = patternScan(baseFile, rest, createBackRef(restSize));
            } else
            if(serveDirIndex) {
                // serve directory index
                glob = baseFile.run(new BuildChildPaths(baseFile, req.getLocale()));
            }

            if(glob!=null) {
                // serve glob
                req.setAttribute("it", this);
                List<Path> parentPaths = buildParentPath(base,restSize);
                req.setAttribute("parentPath",parentPaths);
                req.setAttribute("backPath", createBackRef(restSize));
                req.setAttribute("topPath", createBackRef(parentPaths.size()+restSize));
                req.setAttribute("files", glob);
                req.setAttribute("icon", icon);
                req.setAttribute("path", path);
                req.setAttribute("pattern",rest);
                req.setAttribute("dir", baseFile);
                req.getView(this,"dir.jelly").forward(req, rsp);
                return;
            }

            // convert a directory service request to a single file service request by serving
            // 'index.html'
            baseFile = baseFile.child(indexFileName);
        }

        //serve a single file
        if(!baseFile.exists()) {
            rsp.sendError(HttpServletResponse.SC_NOT_FOUND);
            return;
        }

        boolean view = rest.equals("*view*");

        if(rest.equals("*fingerprint*")) {
            rsp.forward(Jenkins.getInstance().getFingerprint(Util.getDigestOf(baseFile.open())), "/", req);
            return;
        }

        long lastModified = baseFile.lastModified();
        long length = baseFile.length();

        if(LOGGER.isLoggable(Level.FINE))
            LOGGER.fine("Serving "+baseFile+" with lastModified=" + lastModified + ", length=" + length);

        InputStream in = baseFile.open();
        if (view) {
            // for binary files, provide the file name for download
            rsp.setHeader("Content-Disposition", "inline; filename=" + baseFile.getName());

            // pseudo file name to let the Stapler set text/plain
            rsp.serveFile(req, in, lastModified, -1, length, "plain.txt");
        } else {
            rsp.serveFile(req, in, lastModified, -1, length, baseFile.getName() );
        }
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479880512/fstmerge_var2_5831180825384205918

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/DirectoryBrowserSupport.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479880533/fstmerge_var1_7895822017853224880
private static void zip(OutputStream outputStream, VirtualFile dir, String glob) throws IOException {
        ZipOutputStream zos = new ZipOutputStream(outputStream);
        for (String n : dir.list(glob.length() == 0 ? "**" : glob)) {
            ZipEntry e = new ZipEntry(n);
            VirtualFile f = dir.child(n);
            e.setTime(f.lastModified());
            zos.putNextEntry(e);
            Util.copyStream(f.open(), outputStream);
            zos.closeEntry();
        }
        zos.close();
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479880533/fstmerge_base_7870046623674933114
=======
private static void zip(OutputStream outputStream, VirtualFile dir, String glob) throws IOException {
        ZipOutputStream zos = new ZipOutputStream(outputStream);
        zos.setEncoding(System.getProperty("file.encoding")); // TODO JENKINS-20663 make this overridable via query parameter
        for (String n : dir.list(glob.length() == 0 ? "**" : glob)) {
            String relativePath;
            if (glob.length() == 0) {
                // JENKINS-19947: traditional behavior is to prepend the directory name
                relativePath = dir.getName() + '/' + n;
            } else {
                relativePath = n;
            }
            ZipEntry e = new ZipEntry(relativePath);
            VirtualFile f = dir.child(n);
            e.setTime(f.lastModified());
            zos.putNextEntry(e);
            InputStream in = f.open();
            try {
                Util.copyStream(in, zos);
            } finally {
                IOUtils.closeQuietly(in);
            }
            zos.closeEntry();
        }
        zos.close();
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479880533/fstmerge_var2_3143837794370944138

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/DirectoryBrowserSupport.java
Conflict type: LineBasedMCFd
Conflict body: 
public CauseOfBlockage canTake(Queue.BuildableItem item) {
        Label l = item.getAssignedLabel();
        if(l!=null && !l.contains(this))
            return CauseOfBlockage.fromMessage(Messages._Node_LabelMissing(getNodeName(),l));   // the task needs to be executed on label that this node doesn't have.

<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479880800/fstmerge_var1_4697477849405749150
        if(l==null && getMode()== Mode.EXCLUSIVE) {
            // flyweight tasks need to get executed somewhere, if every node
            if (!(item.task instanceof Queue.FlyweightTask && (
                    this instanceof Jenkins
                            || Jenkins.getInstance().getNumExecutors() < 1
                            || Jenkins.getInstance().getMode() == Mode.EXCLUSIVE)
            )) {
                return CauseOfBlockage.fromMessage(Messages._Node_BecauseNodeIsReserved(getNodeName()));   // this node is reserved for tasks that are tied to it
            }
        }

        Authentication identity = item.authenticate();
        if (!getACL().hasPermission(identity,Computer.BUILD)) {
            // doesn't have a permission
            // TODO: does it make more sense to define a separate permission?
            return CauseOfBlockage.fromMessage(Messages._Node_LackingBuildPermission(identity.getName(),getNodeName()));
        }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479880800/fstmerge_base_3079828241681328892
        if(l==null && getMode()== Mode.EXCLUSIVE)
            return CauseOfBlockage.fromMessage(Messages._Node_BecauseNodeIsReserved(getNodeName()));   // this node is reserved for tasks that are tied to it
=======
        if(l==null && getMode()== Mode.EXCLUSIVE) {
            // flyweight tasks need to get executed somewhere, if every node
            if (!(item.task instanceof Queue.FlyweightTask && (
                    this instanceof Jenkins
                            || Jenkins.getInstance().getNumExecutors() < 1
                            || Jenkins.getInstance().getMode() == Mode.EXCLUSIVE)
            )) {
                return CauseOfBlockage.fromMessage(Messages._Node_BecauseNodeIsReserved(getNodeName()));   // this node is reserved for tasks that are tied to it
            }
        }

        Authentication identity = item.authenticate();
        if (!getACL().hasPermission(identity,Computer.BUILD)) {
            // doesn't have a permission
            return CauseOfBlockage.fromMessage(Messages._Node_LackingBuildPermission(identity.getName(),getNodeName()));
        }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479880800/fstmerge_var2_8814636731129767899

        // Check each NodeProperty to see whether they object to this node
        // taking the task
        for (NodeProperty prop: getNodeProperties()) {
            CauseOfBlockage c = prop.canTake(item);
            if (c!=null)    return c;
        }

        // Looks like we can take the task
        return null;
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/Node.java
Conflict type: LineBasedMCFd
Conflict body: 
public String getUrl() {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479881872/fstmerge_var1_2041469009892636299
        return "computer/" + Util.rawEncode(getDisplayName()) + "/";
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479881872/fstmerge_base_5544833522509508371
        return "computer/"+getDisplayName()+"/";
=======
        return "computer/" + Util.rawEncode(getName()) + "/";
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479881872/fstmerge_var2_5123086814358604308
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/Computer.java
Conflict type: LineBasedMCFd
Conflict body: 
~~FSTMerge~~ public static final ExecutorService threadPoolForRemoting = Executors.newCachedThreadPool(new ExceptionCatchingThreadFactory(
            new ThreadFactory() {
                
                private final AtomicInteger threadNumber = new AtomicInteger(1);
                
                @Override
                public Thread newThread(Runnable r) {
                    Thread t = new Thread(r);
                    t.setName("Jenkins-Remoting-Thread-"+threadNumber.getAndIncrement());
                    t.setDaemon(true);
                    return t;
                }
            })); ##FSTMerge## public static final ExecutorService threadPoolForRemoting = Executors.newCachedThreadPool(new ExceptionCatchingThreadFactory(new DaemonThreadFactory())); ##FSTMerge## public static final ExecutorService threadPoolForRemoting = new ContextResettingExecutorService(
            Executors.newCachedThreadPool(
                    new ExceptionCatchingThreadFactory(
                            new NamingThreadFactory(new DaemonThreadFactory(), "Computer.threadPoolForRemoting"))));
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/Computer.java
Conflict type: LineBasedMCFd
Conflict body: 
@RequirePOST
    public HttpResponse doChangeOfflineCause(@QueryParameter String offlineMessage) throws IOException, ServletException {
        checkPermission(DISCONNECT);
        offlineMessage = Util.fixEmptyAndTrim(offlineMessage);
        setTemporarilyOffline(true,
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882049/fstmerge_var1_158616827587001317
                OfflineCause.create(hudson.slaves.Messages._SlaveComputer_DisconnectedBy(
                        Jenkins.getAuthentication().getName(),
                        offlineMessage != null ? " : " + offlineMessage : "")));
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882049/fstmerge_base_913802986208941060
                OfflineCause.create(hudson.slaves.Messages._SlaveComputer_DisconnectedBy(
                    Jenkins.getAuthentication().getName(),
                    offlineMessage!=null ? " : " + offlineMessage : "")));
=======
                new OfflineCause.UserCause(User.current(), offlineMessage));
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882049/fstmerge_var2_3977775878340184670
        return HttpResponses.redirectToDot();
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/Computer.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882565/fstmerge_var1_7550421443934903683
@SuppressWarnings("deprecation")
    protected void onLoad() {
        for (Action a : getActions()) {
            if (a instanceof RunAction2) {
                ((RunAction2) a).onLoad(this);
            } else if (a instanceof RunAction) {
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882565/fstmerge_base_7149214195805942486
protected void onLoad() {
        for (Action a : getActions())
            if (a instanceof RunAction)
=======
@SuppressWarnings("deprecation")
    protected void onLoad() {
        for (Action a : getAllActions()) {
            if (a instanceof RunAction2) {
                ((RunAction2) a).onLoad(this);
            } else if (a instanceof RunAction) {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882565/fstmerge_var2_4692817065448519626
                ((RunAction) a).onLoad();
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882565/fstmerge_base_7149214195805942486
=======
            }
        }
        if (artifactManager != null) {
            artifactManager.onLoad(this);
        }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882565/fstmerge_var2_4692817065448519626
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/Run.java
Conflict type: LineBasedMCFd
Conflict body: 
@Deprecated
    public List<Action> getTransientActions() {
        List<Action> actions = new ArrayList<Action>();
        for (TransientBuildActionFactory factory: TransientBuildActionFactory.all()) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882569/fstmerge_var1_4160395844098717385
            actions.addAll(factory.createFor(this));
            assert !actions.contains(null) : "null action added by " + factory;
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882569/fstmerge_base_7605219646751726318
            actions.addAll(factory.createFor(this));
=======
            for (Action created : factory.createFor(this)) {
                if (created == null) {
                    LOGGER.log(WARNING, "null action added by {0}", factory);
                    continue;
                }
                actions.add(created);
            }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882569/fstmerge_var2_7163946111260458292
        }
        return Collections.unmodifiableList(actions);
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/Run.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882574/fstmerge_var1_5832315342558308328
@SuppressWarnings("deprecation")
    @Override
    public void addAction(Action a) {
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882574/fstmerge_base_7522532531894806595
@Override
    public void addAction(Action a) {
=======
@SuppressWarnings("deprecation")
    @Override
    public void addAction(@Nonnull Action a) {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882574/fstmerge_var2_2439895591093417913
        super.addAction(a);
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882574/fstmerge_base_7522532531894806595
        if (a instanceof RunAction)
=======
        if (a instanceof RunAction2) {
            ((RunAction2) a).onAttached(this);
        } else if (a instanceof RunAction) {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882574/fstmerge_var2_2439895591093417913
            ((RunAction) a).onAttached(this);
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882574/fstmerge_base_7522532531894806595
=======
        }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882574/fstmerge_var2_2439895591093417913
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/Run.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882582/fstmerge_var1_2203046398369141151
static long parseTimestampFromBuildDir(File buildDir) throws IOException, InvalidDirectoryNameException {
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882582/fstmerge_base_1162433810748520718
static long parseTimestampFromBuildDir(File buildDir) throws IOException {
=======
static long parseTimestampFromBuildDir(@Nonnull File buildDir) 
            throws IOException, InvalidDirectoryNameException {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882582/fstmerge_var2_2278086378749193696
        try {
            if(Util.isSymlink(buildDir)) {
                // "Util.resolveSymlink(file)" resolves NTFS symlinks. 
                File target = Util.resolveSymlinkToFile(buildDir);
                if(target != null)
                    buildDir = target;
            }
            // canonicalization to ensure we are looking at the ID in the directory name
            // as opposed to build numbers which are used in symlinks
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882582/fstmerge_base_1162433810748520718
            return ID_FORMATTER.get().parse(buildDir.getCanonicalFile().getName()).getTime();
=======
            // (just in case the symlink check above did not work)
            buildDir = buildDir.getCanonicalFile();
            return ID_FORMATTER.get().parse(buildDir.getName()).getTime();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882582/fstmerge_var2_2278086378749193696
        } catch (ParseException e) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882582/fstmerge_base_1162433810748520718
            throw new IOException2("Invalid directory name "+buildDir,e);
        } catch (NumberFormatException e) {
            throw new IOException2("Invalid directory name "+buildDir,e);
=======
            throw new InvalidDirectoryNameException(buildDir);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882582/fstmerge_var2_2278086378749193696
        } catch (InterruptedException e) {
            throw new IOException("Interrupted while resolving symlink directory "+buildDir,e);
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/Run.java
Conflict type: LineBasedMCFd
Conflict body: 
public @Nonnull List<Artifact> getArtifactsUpTo(int artifactsNumber) {
        ArtifactList r = new ArtifactList();
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882827/fstmerge_var1_5319101511530914777
        try {
            addArtifacts(getArtifactManager().root(), "", "", r, null, n);
        } catch (IOException x) {
            LOGGER.log(Level.WARNING, null, x);
        }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882827/fstmerge_base_5792032926943330244
        addArtifacts(getArtifactsDir(),"","",r,null,n);
=======
        try {
            addArtifacts(getArtifactManager().root(), "", "", r, null, artifactsNumber);
        } catch (IOException x) {
            LOGGER.log(Level.WARNING, null, x);
        }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882827/fstmerge_var2_283518409997408077
        r.computeDisplayName();
        return r;
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/Run.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882836/fstmerge_var1_3074997005400958716
private int addArtifacts(VirtualFile dir, String path, String pathHref, ArtifactList r, Artifact parent, int upTo) throws IOException {
        VirtualFile[] kids = dir.list();
        Arrays.sort(kids);

        int n = 0;
        for (VirtualFile sub : kids) {
            String child = sub.getName();
            String childPath = path + child;
            String childHref = pathHref + Util.rawEncode(child);
            String length = sub.isFile() ? String.valueOf(sub.length()) : "";
            boolean collapsed = (kids.length==1 && parent!=null);
            Artifact a;
            if (collapsed) {
                // Collapse single items into parent node where possible:
                a = new Artifact(parent.getFileName() + '/' + child, childPath,
                                 sub.isDirectory() ? null : childHref, length,
                                 parent.getTreeNodeId());
                r.tree.put(a, r.tree.remove(parent));
            } else {
                // Use null href for a directory:
                a = new Artifact(child, childPath,
                                 sub.isDirectory() ? null : childHref, length,
                                 "n" + ++r.idSeq);
                r.tree.put(a, parent!=null ? parent.getTreeNodeId() : null);
            }
            if (sub.isDirectory()) {
                n += addArtifacts(sub, childPath + '/', childHref + '/', r, a, upTo-n);
                if (n>=upTo) break;
            } else {
                // Don't store collapsed path in ArrayList (for correct data in external API)
                r.add(collapsed ? new Artifact(child, a.relativePath, a.href, length, a.treeNodeId) : a);
                if (++n>=upTo) break;
            }
        }
        return n;
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882836/fstmerge_base_3082552738641789973
=======
private int addArtifacts(@Nonnull VirtualFile dir, 
            @Nonnull String path, @Nonnull String pathHref, 
            @Nonnull ArtifactList r, @Nonnull Artifact parent, int upTo) throws IOException {
        VirtualFile[] kids = dir.list();
        Arrays.sort(kids);

        int n = 0;
        for (VirtualFile sub : kids) {
            String child = sub.getName();
            String childPath = path + child;
            String childHref = pathHref + Util.rawEncode(child);
            String length = sub.isFile() ? String.valueOf(sub.length()) : "";
            boolean collapsed = (kids.length==1 && parent!=null);
            Artifact a;
            if (collapsed) {
                // Collapse single items into parent node where possible:
                a = new Artifact(parent.getFileName() + '/' + child, childPath,
                                 sub.isDirectory() ? null : childHref, length,
                                 parent.getTreeNodeId());
                r.tree.put(a, r.tree.remove(parent));
            } else {
                // Use null href for a directory:
                a = new Artifact(child, childPath,
                                 sub.isDirectory() ? null : childHref, length,
                                 "n" + ++r.idSeq);
                r.tree.put(a, parent!=null ? parent.getTreeNodeId() : null);
            }
            if (sub.isDirectory()) {
                n += addArtifacts(sub, childPath + '/', childHref + '/', r, a, upTo-n);
                if (n>=upTo) break;
            } else {
                // Don't store collapsed path in ArrayList (for correct data in external API)
                r.add(collapsed ? new Artifact(child, a.relativePath, a.href, length, a.treeNodeId) : a);
                if (++n>=upTo) break;
            }
        }
        return n;
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882836/fstmerge_var2_5298228495515368398

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/Run.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882859/fstmerge_var1_880400010926002275
@Deprecated
        public File getFile() {
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882859/fstmerge_base_2466016312271336914
public File getFile() {
=======
@Deprecated
        public @Nonnull File getFile() {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882859/fstmerge_var2_3276564659745533236
            return new File(getArtifactsDir(),relativePath);
        }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/Run.java
Conflict type: LineBasedMCFd
Conflict body: 
public void delete() throws IOException {
        File rootDir = getRootDir();
        if (!rootDir.isDirectory()) {
            throw new IOException(this + ": " + rootDir + " looks to have already been deleted; siblings: " + Arrays.toString(project.getBuildDir().list()));
        }
        
        RunListener.fireDeleted(this);

        synchronized (this) { // avoid holding a lock while calling plugin impls of onDeleted
        // if we have a symlink, delete it, too
        File link = new File(project.getBuildDir(), String.valueOf(getNumber()));
        link.delete();

<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882952/fstmerge_var1_1573189973675355216
        File rootDir = getRootDir();
        if (!rootDir.isDirectory()) {
            throw new IOException(rootDir + " looks to have already been deleted");
        }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882952/fstmerge_base_1078978575235039423
        File rootDir = getRootDir();
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882952/fstmerge_var2_2011268259605972382
        File tmp = new File(rootDir.getParentFile(),'.'+rootDir.getName());
        
        if (tmp.exists()) {
            Util.deleteRecursive(tmp);
        }
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882952/fstmerge_base_1078978575235039423
        // XXX on Java 7 prefer: Files.move(rootDir.toPath(), tmp.toPath(), StandardCopyOption.ATOMIC_MOVE)
=======
        // TODO on Java 7 prefer: Files.move(rootDir.toPath(), tmp.toPath(), StandardCopyOption.ATOMIC_MOVE)
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882952/fstmerge_var2_2011268259605972382
        boolean renamingSucceeded = rootDir.renameTo(tmp);
        Util.deleteRecursive(tmp);
        // some user reported that they see some left-over .xyz files in the workspace,
        // so just to make sure we've really deleted it, schedule the deletion on VM exit, too.
        if(tmp.exists())
            tmp.deleteOnExit();

        if(!renamingSucceeded)
            throw new IOException(rootDir+" is in use");
        LOGGER.log(FINE, "{0}: {1} successfully deleted", new Object[] {this, rootDir});

        removeRunFromParent();
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/Run.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882966/fstmerge_var1_3393512143021574226
static void waitForCheckpoint(CheckPoint id, @CheckForNull BuildListener listener, @CheckForNull String waiter) throws InterruptedException {
        while(true) {
            Run b = RunnerStack.INSTANCE.peek().getBuild().getPreviousBuildInProgress();
            if(b==null)     return; // no pending earlier build
            Run.RunExecution runner = b.runner;
            if(runner==null) {
                // polled at the wrong moment. try again.
                Thread.sleep(0);
                continue;
            }
            if(runner.checkpoints.waitForCheckPoint(id, listener, waiter))
                return; // confirmed that the previous build reached the check point

            // the previous build finished without ever reaching the check point. try again.
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882966/fstmerge_base_3401088144246759573
=======
static void waitForCheckpoint(@Nonnull CheckPoint id, @CheckForNull BuildListener listener, @CheckForNull String waiter) throws InterruptedException {
        while(true) {
            Run<?,?>.RunExecution exec = RunnerStack.INSTANCE.peek();
            if (exec == null) {
                return;
            }
            Run b = exec.getBuild().getPreviousBuildInProgress();
            if(b==null)     return; // no pending earlier build
            Run.RunExecution runner = b.runner;
            if(runner==null) {
                // polled at the wrong moment. try again.
                Thread.sleep(0);
                continue;
            }
            if(runner.checkpoints.waitForCheckPoint(id, listener, waiter))
                return; // confirmed that the previous build reached the check point

            // the previous build finished without ever reaching the check point. try again.
        }
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882966/fstmerge_var2_4317479923132819364

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/Run.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882975/fstmerge_var1_5027509187728128773
protected synchronized boolean waitForCheckPoint(CheckPoint identifier, @CheckForNull BuildListener listener, @CheckForNull String waiter) throws InterruptedException {
                final Thread t = Thread.currentThread();
                final String oldName = t.getName();
                t.setName(oldName + " : waiting for " + identifier + " on " + getFullDisplayName() + " from " + waiter);
                try {
                    boolean first = true;
                    while (!allDone && !checkpoints.contains(identifier)) {
                        if (first && listener != null && waiter != null) {
                            listener.getLogger().println(Messages.Run__is_waiting_for_a_checkpoint_on_(waiter, getFullDisplayName()));
                        }
                        wait();
                        first = false;
                    }
                    return checkpoints.contains(identifier);
                } finally {
                    t.setName(oldName);
                }
            }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882975/fstmerge_base_5031961058345593304
=======
protected synchronized boolean waitForCheckPoint(@Nonnull CheckPoint identifier, @CheckForNull BuildListener listener, @CheckForNull String waiter) throws InterruptedException {
                final Thread t = Thread.currentThread();
                final String oldName = t.getName();
                t.setName(oldName + " : waiting for " + identifier + " on " + getFullDisplayName() + " from " + waiter);
                try {
                    boolean first = true;
                    while (!allDone && !checkpoints.contains(identifier)) {
                        if (first && listener != null && waiter != null) {
                            listener.getLogger().println(Messages.Run__is_waiting_for_a_checkpoint_on_(waiter, getFullDisplayName()));
                        }
                        wait();
                        first = false;
                    }
                    return checkpoints.contains(identifier);
                } finally {
                    t.setName(oldName);
                }
            }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479882975/fstmerge_var2_5876530531243614485

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/Run.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479883025/fstmerge_var1_2493448978655327835
public final void updateSymlinks(TaskListener listener) throws InterruptedException {
        Util.createSymlink(getParent().getBuildDir(), getId(), String.valueOf(getNumber()), listener);
        createSymlink(listener, "lastSuccessful", PermalinkProjectAction.Permalink.LAST_SUCCESSFUL_BUILD);
        createSymlink(listener, "lastStable", PermalinkProjectAction.Permalink.LAST_STABLE_BUILD);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479883025/fstmerge_base_6581779195588109274
=======
public final void updateSymlinks(@Nonnull TaskListener listener) throws InterruptedException {
        Util.createSymlink(getParent().getBuildDir(), getId(), String.valueOf(getNumber()), listener);
        createSymlink(listener, "lastSuccessful", PermalinkProjectAction.Permalink.LAST_SUCCESSFUL_BUILD);
        createSymlink(listener, "lastStable", PermalinkProjectAction.Permalink.LAST_STABLE_BUILD);
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479883025/fstmerge_var2_5157594633946727306

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/Run.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479883030/fstmerge_var1_5276335422539778155
private void createSymlink(TaskListener listener, String name, PermalinkProjectAction.Permalink target) throws InterruptedException {
        File buildDir = getParent().getBuildDir();
        File rootDir = getParent().getRootDir();
        String targetDir;
        if (buildDir.equals(new File(rootDir, "builds"))) {
            targetDir = "builds" + File.separator + target.getId();
        } else {
            targetDir = buildDir + File.separator + target.getId();
        }
        Util.createSymlink(rootDir, targetDir, name, listener);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479883030/fstmerge_base_3876795674964481710
=======
private void createSymlink(@Nonnull TaskListener listener, @Nonnull String name, @Nonnull PermalinkProjectAction.Permalink target) throws InterruptedException {
        File buildDir = getParent().getBuildDir();
        File rootDir = getParent().getRootDir();
        String targetDir;
        if (buildDir.equals(new File(rootDir, "builds"))) {
            targetDir = "builds" + File.separator + target.getId();
        } else {
            targetDir = buildDir + File.separator + target.getId();
        }
        Util.createSymlink(rootDir, targetDir, name, listener);
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479883030/fstmerge_var2_6782270661446030967

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/Run.java
Conflict type: LineBasedMCFd
Conflict body: 
public @Nonnull DirectoryBrowserSupport doArtifact() {
        if(Functions.isArtifactsPermissionEnabled()) {
          checkPermission(ARTIFACTS);
        }
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479883081/fstmerge_var1_2008239337721460762
        return new DirectoryBrowserSupport(this, getArtifactManager().root(), project.getDisplayName() + ' ' + getDisplayName(), "package.png", true);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479883081/fstmerge_base_6623855802596958521
        return new DirectoryBrowserSupport(this,new FilePath(getArtifactsDir()), project.getDisplayName()+' '+getDisplayName(), "package.png", true);
=======
        return new DirectoryBrowserSupport(this, getArtifactManager().root(), Messages.Run_ArtifactsBrowserTitle(project.getDisplayName(), getDisplayName()), "package.png", true);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479883081/fstmerge_var2_3984898105678601938
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/Run.java
Conflict type: LineBasedMCFd
Conflict body: 
@RequirePOST
    public void doDoDelete( StaplerRequest req, StaplerResponse rsp ) throws IOException, ServletException {
        checkPermission(DELETE);

        // We should not simply delete the build if it has been explicitly
        // marked to be preserved, or if the build should not be deleted
        // due to dependencies!
        String why = getWhyKeepLog();
        if (why!=null) {
            sendError(Messages.Run_UnableToDelete(getFullDisplayName(), why), req, rsp);
            return;
        }

<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479883119/fstmerge_var1_3574203058284569440
        try{
            delete();
        }
        catch(IOException ex){
            StringWriter writer = new StringWriter();
            ex.printStackTrace(new PrintWriter(writer));
            req.setAttribute("stackTraces", writer);
            req.getView(this, "delete-retry.jelly").forward(req, rsp);  
            return;
        } 
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479883119/fstmerge_base_8732531300756279392
        delete();
=======
        try{
            delete();
        }
        catch(IOException ex){
            StringWriter writer = new StringWriter();
            ex.printStackTrace(new PrintWriter(writer));
            req.setAttribute("stackTraces", writer);
            req.getView(this, "delete-retry.jelly").forward(req, rsp);  
            return;
        }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479883119/fstmerge_var2_5900426736083658461
        rsp.sendRedirect2(req.getContextPath()+'/' + getParent().getUrl());
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/Run.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479883838/fstmerge_var1_6240270208486544899
public static void checkPermission(AbstractProject project, BuildAuthorizationToken token, StaplerRequest req, StaplerResponse rsp) throws IOException {
        if (!Jenkins.getInstance().isUseSecurity())
            return;    // everyone is authorized

        if(token!=null && token.token != null) {
            //check the provided token
            String providedToken = req.getParameter("token");
            if (providedToken != null && providedToken.equals(token.token))
                return;
            if (providedToken != null)
                throw new AccessDeniedException(Messages.BuildAuthorizationToken_InvalidTokenProvided());
        }

        project.checkPermission(AbstractProject.BUILD);

        if (req.getMethod().equals("POST")) {
            return;
        }

        if (req.getAttribute(ApiTokenProperty.class.getName()) instanceof User) {
            return;
        }

        rsp.setStatus(HttpServletResponse.SC_METHOD_NOT_ALLOWED);
        rsp.addHeader("Allow", "POST");
        throw HttpResponses.forwardToView(project, "requirePOST.jelly");
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479883838/fstmerge_base_7859203863466760462
public static void checkPermission(AbstractProject project, BuildAuthorizationToken token, StaplerRequest req, StaplerResponse rsp) throws IOException {
        if (!Jenkins.getInstance().isUseSecurity())
            return;    // everyone is authorized

        if(token!=null && token.token != null) {
            //check the provided token
            String providedToken = req.getParameter("token");
            if (providedToken != null && providedToken.equals(token.token))
                return;
            if (providedToken != null)
                throw new AccessDeniedException(Messages.BuildAuthorizationToken_InvalidTokenProvided());
        }

        project.checkPermission(AbstractProject.BUILD);

        if (req.getMethod().equals("POST")) {
            return;
        }

        if (req.getAttribute(ApiTokenProperty.class.getName()) instanceof User) {
            return;
        }

        throw HttpResponses.forwardToView(project, "requirePOST.jelly");
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479883838/fstmerge_var2_2878737959162750976

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/BuildAuthorizationToken.java
Conflict type: LineBasedMCFd
Conflict body: 
public void delete() throws IOException, InterruptedException {
        checkPermission(DELETE);
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479884095/fstmerge_var1_1837107531321276658
        performDelete();

        try {
            invokeOnDeleted();
        } catch (AbstractMethodError e) {
            // ignore
        }

        Jenkins.getInstance().rebuildDependencyGraphAsync();
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479884095/fstmerge_base_4361095888326850494
        performDelete();

        try {
            invokeOnDeleted();
        } catch (AbstractMethodError e) {
            // ignore
        }

        Jenkins.getInstance().rebuildDependencyGraph();
=======
        synchronized (this) { // could just make performDelete synchronized but overriders might not honor that
            performDelete();
        } // JENKINS-19446: leave synch block, but JENKINS-22001: still notify synchronously
        invokeOnDeleted();
        Jenkins.getInstance().rebuildDependencyGraphAsync();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479884095/fstmerge_var2_6905897304009777898
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/AbstractItem.java
Conflict type: LineBasedMCFd
Conflict body: 
public void updateByXml(Source source) throws IOException {
        checkPermission(CONFIGURE);
        XmlFile configXmlFile = getConfigFile();
        AtomicFileWriter out = new AtomicFileWriter(configXmlFile.getFile());
        try {
            try {
                // this allows us to use UTF-8 for storing data,
                // plus it checks any well-formedness issue in the submitted
                // data
                Transformer t = TransformerFactory.newInstance()
                        .newTransformer();
                t.transform(source,
                        new StreamResult(out));
                out.close();
            } catch (TransformerException e) {
                throw new IOException("Failed to persist config.xml", e);
            }

            // try to reflect the changes by reloading
            new XmlFile(Items.XSTREAM, out.getTemporaryFile()).unmarshal(this);
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479884117/fstmerge_var1_713178987646754409
            Items.updatingByXml.set(true);
            try {
                onLoad(getParent(), getRootDir().getName());
            } finally {
                Items.updatingByXml.set(false);
            }
            Jenkins.getInstance().rebuildDependencyGraphAsync();
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479884117/fstmerge_base_3217071340062843871
            Items.updatingByXml.set(true);
            try {
                onLoad(getParent(), getRootDir().getName());
            } finally {
                Items.updatingByXml.set(false);
            }
            Jenkins.getInstance().rebuildDependencyGraph();
=======
            Items.whileUpdatingByXml(new Callable<Void,IOException>() {
                @Override public Void call() throws IOException {
                    onLoad(getParent(), getRootDir().getName());
                    return null;
                }
            });
            Jenkins.getInstance().rebuildDependencyGraphAsync();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479884117/fstmerge_var2_4013238491121867674

            // if everything went well, commit this new version
            out.commit();
            SaveableListener.fireOnChange(this, getConfigFile());
        } finally {
            out.abort(); // don't leave anything behind
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/AbstractItem.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479884231/fstmerge_var1_5195274866791116077
@Deprecated
    public void _doBuild(StaplerRequest req, StaplerResponse rsp) throws IOException, ServletException {
        _doBuild(req,rsp,TimeDuration.fromString(req.getParameter("delay")));
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479884231/fstmerge_base_537128954895877322
public void _doBuild(StaplerRequest req, StaplerResponse rsp) throws IOException, ServletException {
        _doBuild(req,rsp,TimeDuration.fromString(req.getParameter("delay")));
=======
@Deprecated
    public void _doBuild(StaplerRequest req, StaplerResponse rsp) throws IOException, ServletException {
        _doBuild(req, rsp, TimeDuration.fromString(req.getParameter("delay")));
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479884231/fstmerge_var2_3435475611008140739
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/ParametersDefinitionProperty.java
Conflict type: LineBasedMCFd
Conflict body: 
public void _doBuild(StaplerRequest req, StaplerResponse rsp, @QueryParameter TimeDuration delay) throws IOException, ServletException {
        if (delay==null)    delay=new TimeDuration(getJob().getQuietPeriod());


        List<ParameterValue> values = new ArrayList<ParameterValue>();
        
        JSONObject formData = req.getSubmittedForm();
        JSONArray a = JSONArray.fromObject(formData.get("parameter"));

        for (Object o : a) {
            JSONObject jo = (JSONObject) o;
            String name = jo.getString("name");

            ParameterDefinition d = getParameterDefinition(name);
            if(d==null)
                throw new IllegalArgumentException("No such parameter definition: " + name);
            ParameterValue parameterValue = d.createValue(req, jo);
            if (parameterValue != null) {
                values.add(parameterValue);
            } else {
                throw new IllegalArgumentException("Cannot retrieve the parameter value: " + name);
            }
        }

<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479884236/fstmerge_var1_3995025123975472801
    	WaitingItem item = Jenkins.getInstance().getQueue().schedule(
                owner, delay.getTime(), new ParametersAction(values), new CauseAction(new Cause.UserIdCause()));
        if (item!=null) {
            String url = formData.optString("redirectTo");
            if (url==null || Util.isAbsoluteUri(url))   // avoid open redirect
                url = req.getContextPath()+'/'+item.getUrl();
            rsp.sendRedirect(formData.optInt("statusCode",SC_CREATED), url);
        } else
            // send the user back to the job top page.
            rsp.sendRedirect(".");
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479884236/fstmerge_base_6939392566636585972
    	Jenkins.getInstance().getQueue().schedule(
                owner, delay.getTime(), new ParametersAction(values), new CauseAction(new Cause.UserIdCause()));

        // send the user back to the job top page.
        rsp.sendRedirect(".");
=======
    	WaitingItem item = Jenkins.getInstance().getQueue().schedule(
                getJob(), delay.getTime(), new ParametersAction(values), new CauseAction(new Cause.UserIdCause()));
        if (item!=null) {
            String url = formData.optString("redirectTo");
            if (url==null || Util.isAbsoluteUri(url))   // avoid open redirect
                url = req.getContextPath()+'/'+item.getUrl();
            rsp.sendRedirect(formData.optInt("statusCode",SC_CREATED), url);
        } else
            // send the user back to the job top page.
            rsp.sendRedirect(".");
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479884236/fstmerge_var2_1922537188083459342
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/ParametersDefinitionProperty.java
Conflict type: LineBasedMCFd
Conflict body: 
~~FSTMerge~~ private final ExecutorService installerService = new AtmostOneThreadExecutor(
        new DaemonThreadFactory(new ThreadFactory() {
            public Thread newThread(Runnable r) {
                Thread t = new Thread(r);
                t.setName("Update center installer thread");
                return t;
            }
        })); ##FSTMerge## private final ExecutorService installerService = Executors.newSingleThreadExecutor(
        new DaemonThreadFactory(new ThreadFactory() {
            public Thread newThread(Runnable r) {
                Thread t = new Thread(r);
                t.setName("Update center installer thread");
                return t;
            }
        })); ##FSTMerge## private final ExecutorService installerService = new AtmostOneThreadExecutor(
        new NamingThreadFactory(new DaemonThreadFactory(), "Update center installer thread"));
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/UpdateCenter.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479885204/fstmerge_var1_7451085565342599821
@Override public String getShortDescription() {
        return name + "=" + getRun().getFullDisplayName();
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479885204/fstmerge_base_4825802173832902434
=======
@Override public String getShortDescription() {
        Run run = getRun();
        return name + "=" + ((null == run) ? getJobName() + " #" + getNumber() : run.getFullDisplayName());
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479885204/fstmerge_var2_3800631437940904917

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/RunParameterValue.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479885208/fstmerge_var1_4420748857650554026
@Override
    public void buildEnvVars(AbstractBuild<?,?> build, EnvVars env) {
        Run run = getRun();
        
        String value = Jenkins.getInstance().getRootUrl() + run.getUrl();
        env.put(name, value);

        env.put(name + ".jobName", getJobName());   // undocumented, left for backward compatibility
        env.put(name + "_JOBNAME", getJobName());   // prefer this version

        env.put(name + ".number" , getNumber ());   // same as above
        env.put(name + "_NUMBER" , getNumber ());
        
        env.put(name + "_NAME",  run.getDisplayName());  // since 1.504

        String buildResult = (null == run.getResult()) ? "UNKNOWN" : run.getResult().toString();
        env.put(name + "_RESULT",  buildResult);  // since 1.517

        env.put(name.toUpperCase(Locale.ENGLISH),value); // backward compatibility pre 1.345

    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479885208/fstmerge_base_1777610659944025712
@Override
    public void buildEnvVars(AbstractBuild<?,?> build, EnvVars env) {
        Run run = getRun();
        
        String value = Jenkins.getInstance().getRootUrl() + run.getUrl();
        env.put(name, value);

        env.put(name + ".jobName", getJobName());   // undocumented, left for backward compatibility
        env.put(name + "_JOBNAME", getJobName());   // prefer this version

        env.put(name + ".number" , getNumber ());   // same as above
        env.put(name + "_NUMBER" , getNumber ());
        
        env.put(name + "_NAME",  run.getDisplayName());  // since 1.504

        env.put(name.toUpperCase(Locale.ENGLISH),value); // backward compatibility pre 1.345

    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479885208/fstmerge_var2_2175787437091729153

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/RunParameterValue.java
Conflict type: LineBasedMCFd
Conflict body: 
public void interrupt(Result result, CauseOfInterruption... causes) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479885731/fstmerge_var1_288953785913593558
        if (LOGGER.isLoggable(FINE))
            LOGGER.log(FINE, String.format("%s is interrupted(%s): %s", getDisplayName(), result, Util.join(Arrays.asList(causes),",")), new InterruptedException());

||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479885731/fstmerge_base_3678029449599180288
=======
        if (LOGGER.isLoggable(FINE))
            LOGGER.log(FINE, String.format("%s is interrupted(%s): %s", getDisplayName(), result, Util.join(Arrays.asList(causes),",")), new InterruptedException());

        synchronized (this) {
            if (!started) {
                // not yet started, so simply dispose this
                owner.removeExecutor(this);
                return;
            }
        }

>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479885731/fstmerge_var2_1147354728862653426
        interruptStatus = result;
        synchronized (this.causes) {
            for (CauseOfInterruption c : causes) {
                if (!this.causes.contains(c))
                    this.causes.add(c);
            }
        }
        super.interrupt();
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/Executor.java
Conflict type: LineBasedMCFd
Conflict body: 
@Override
    public void run() {
        startTime = System.currentTimeMillis();

        // run as the system user. see ACL.SYSTEM for more discussion about why this is somewhat broken
        ACL.impersonate(ACL.SYSTEM);

        try {
            if (induceDeath)        throw new ThreadDeath();

            SubTask task;
            // transition from idle to building.
            // perform this state change as an atomic operation wrt other queue operations
            synchronized (queue) {
                workUnit.setExecutor(this);
                queue.onStartExecuting(this);
                if (LOGGER.isLoggable(FINE))
                    LOGGER.log(FINE, getName()+" grabbed "+workUnit+" from queue");
                task = workUnit.work;
                executable = task.createExecutable();
                workUnit.setExecutable(executable);
            }
            if (LOGGER.isLoggable(FINE))
                LOGGER.log(FINE, getName()+" is going to execute "+executable);

<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479885741/fstmerge_var1_3185838274221064019
                SubTask task;
                try {
                    // transition from idle to building.
                    // perform this state change as an atomic operation wrt other queue operations
                    synchronized (queue) {
                        workUnit = grabJob();
                        workUnit.setExecutor(this);
                        if (LOGGER.isLoggable(FINE))
                            LOGGER.log(FINE, getName()+" grabbed "+workUnit+" from queue");
                        task = workUnit.work;
                        startTime = System.currentTimeMillis();
                        executable = task.createExecutable();
                        workUnit.setExecutable(executable);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479885741/fstmerge_base_3731083875527297901
                SubTask task;
                try {
                    // transition from idle to building.
                    // perform this state change as an atomic operation wrt other queue operations
                    synchronized (queue) {
                        workUnit = grabJob();
                        workUnit.setExecutor(this);
                        if (LOGGER.isLoggable(FINE))
                            LOGGER.log(FINE, getName()+" grabbed "+workUnit+" from queue");
                        task = workUnit.work;
                        startTime = System.currentTimeMillis();
                        executable = task.createExecutable();
=======
            Throwable problems = null;
            try {
                workUnit.context.synchronizeStart();

                if (executable instanceof Actionable) {
                    for (Action action: workUnit.context.actions) {
                        ((Actionable) executable).addAction(action);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479885741/fstmerge_var2_4928309899036781149
                    }
                }

                ACL.impersonate(workUnit.context.item.authenticate());
                setName(getName() + " : executing " + executable.toString());
                if (LOGGER.isLoggable(FINE))
                    LOGGER.log(FINE, getName()+" is now executing "+executable);
                queue.execute(executable, task);
            } catch (Throwable e) {
                // for some reason the executor died. this is really
                // a bug in the code, but we don't want the executor to die,
                // so just leave some info and go on to build other things
                LOGGER.log(Level.SEVERE, "Executor threw an exception", e);
                workUnit.context.abort(e);
                problems = e;
            } finally {
                long time = System.currentTimeMillis()-startTime;
                if (LOGGER.isLoggable(FINE))
                    LOGGER.log(FINE, getName()+" completed "+executable+" in "+time+"ms");
                try {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479885741/fstmerge_var1_3185838274221064019
                    workUnit.context.synchronizeStart();

                    if (executable instanceof Actionable) {
                        for (Action action: workUnit.context.actions) {
                            ((Actionable) executable).addAction(action);
                        }
                    }

                    final SecurityContext savedContext = ACL.impersonate(workUnit.context.item.authenticate());
                    try {
                        setName(threadName + " : executing " + executable.toString());
                        if (LOGGER.isLoggable(FINE))
                            LOGGER.log(FINE, getName()+" is now executing "+executable);
                        queue.execute(executable, task);
                    } finally {
                        SecurityContextHolder.setContext(savedContext);
                    }
                } catch (Throwable e) {
                    // for some reason the executor died. this is really
                    // a bug in the code, but we don't want the executor to die,
                    // so just leave some info and go on to build other things
                    LOGGER.log(Level.SEVERE, "Executor threw an exception", e);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479885741/fstmerge_base_3731083875527297901
                    workUnit.context.synchronizeStart();

                    if (executable instanceof Actionable) {
                        for (Action action: workUnit.context.actions) {
                            ((Actionable) executable).addAction(action);
                        }
                    }
                    setName(threadName+" : executing "+executable.toString());
                    if (LOGGER.isLoggable(FINE))
                        LOGGER.log(FINE, getName()+" is now executing "+executable);
                    queue.execute(executable, task);
                } catch (Throwable e) {
                    // for some reason the executor died. this is really
                    // a bug in the code, but we don't want the executor to die,
                    // so just leave some info and go on to build other things
                    LOGGER.log(Level.SEVERE, "Executor threw an exception", e);
=======
                    workUnit.context.synchronizeEnd(executable,problems,time);
                } catch (InterruptedException e) {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479885741/fstmerge_var2_4928309899036781149
                    workUnit.context.abort(e);
                } finally {
                    workUnit.setExecutor(null);
                }
            }
        } catch (InterruptedException e) {
            LOGGER.log(FINE, getName()+" interrupted",e);
            // die peacefully
        } catch(Exception e) {
            causeOfDeath = e;
            LOGGER.log(SEVERE, "Unexpected executor death", e);
        } catch (Error e) {
            causeOfDeath = e;
            LOGGER.log(SEVERE, "Unexpected executor death", e);
        } finally {
            if (causeOfDeath==null)
                // let this thread die and be replaced by a fresh unstarted instance
                owner.removeExecutor(this);

            queue.scheduleMaintenance();
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/Executor.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479886056/fstmerge_var1_3861865066513812787
public RunList getBuilds() {
        // use getFilter() method so we dont have to worry about null filter value.
        switch (getFilter()) {
            case COMPLETED:
                return getProject().getBuilds().overThresholdOnly(Result.ABORTED);
            case SUCCESSFUL:
                return getProject().getBuilds().overThresholdOnly(Result.UNSTABLE);
            case STABLE	:
                return getProject().getBuilds().overThresholdOnly(Result.SUCCESS);
            default:
                return getProject().getBuilds();
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479886056/fstmerge_base_2098531916713096492
=======
public RunList getBuilds() {
        // use getFilter() method so we dont have to worry about null filter value.
        switch (getFilter()) {
            case COMPLETED:
                return getProject().getBuilds().overThresholdOnly(Result.ABORTED).completedOnly();
            case SUCCESSFUL:
                return getProject().getBuilds().overThresholdOnly(Result.UNSTABLE).completedOnly();
            case STABLE	:
                return getProject().getBuilds().overThresholdOnly(Result.SUCCESS).completedOnly();
            default:
                return getProject().getBuilds();
        }
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479886056/fstmerge_var2_171387105926416215

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/RunParameterDefinition.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479886194/fstmerge_var1_3577104717267137839
public void buildEnvironmentFor(Run r, EnvVars envs, TaskListener listener) throws IOException, InterruptedException {}
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479886194/fstmerge_base_2141127714142156724
public abstract void buildEnvironmentFor(Run r, EnvVars envs, TaskListener listener) throws IOException, InterruptedException;
=======
public void buildEnvironmentFor(@Nonnull Run r, @Nonnull EnvVars envs, @Nonnull TaskListener listener) throws IOException, InterruptedException {}
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479886194/fstmerge_var2_7405273560797483441

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/EnvironmentContributor.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479886199/fstmerge_var1_5028236669539711059
public void buildEnvironmentFor(Job j, EnvVars envs, TaskListener listener) throws IOException, InterruptedException {}
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479886199/fstmerge_base_2990398851516802515
=======
public void buildEnvironmentFor(@Nonnull Job j, @Nonnull EnvVars envs, @Nonnull TaskListener listener) throws IOException, InterruptedException {}
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479886199/fstmerge_var2_4962069221049617705

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/EnvironmentContributor.java
Conflict type: ImplementList
Conflict body: 
~~FSTMerge~~ implements BuildableItem, ModelObjectWithChildren ##FSTMerge## implements BuildableItem ##FSTMerge## implements BuildableItem, ModelObjectWithChildren, LazyBuildMixIn.LazyLoadingJob<P,R>, ParameterizedJobMixIn.ParameterizedJob
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/AbstractProject.java
Conflict type: LineBasedMCFd
Conflict body: 
@Override
    public void onLoad(ItemGroup<? extends Item> parent, String name) throws IOException {
        super.onLoad(parent, name);
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479886589/fstmerge_var1_1547157717638842598

        RunMap<R> builds = createBuildRunMap();

        RunMap<R> currentBuilds = this.builds;

        if (currentBuilds==null && parent!=null) {
            // are we overwriting what currently exist?
            // this is primarily when Jenkins is getting reloaded
            Item current;
            try {
                current = parent.getItem(name);
            } catch (RuntimeException x) {
                LOGGER.log(Level.WARNING, "failed to look up " + name + " in " + parent, x);
                current = null;
            }
            if (current!=null && current.getClass()==getClass()) {
                currentBuilds = ((AbstractProject)current).builds;
            }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479886589/fstmerge_base_8797295864638118117

        RunMap<R> builds = createBuildRunMap();

        RunMap<R> currentBuilds = this.builds;

        if (currentBuilds==null) {
            // are we overwriting what currently exist?
            // this is primarily when Jenkins is getting reloaded
            Item current = parent.getItem(name);
            if (current!=null && current.getClass()==getClass()) {
                currentBuilds = ((AbstractProject)current).builds;
            }
=======
        if (buildMixIn == null) {
            buildMixIn = createBuildMixIn();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479886589/fstmerge_var2_1868436061315039373
        }
        buildMixIn.onLoad(parent, name);
        builds = buildMixIn.getRunMap();
        triggers().setOwner(this);
        for (Trigger t : triggers()) {
            t.start(this, Items.currentlyUpdatingByXml());
        }
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479886589/fstmerge_var1_1547157717638842598
        this.builds = builds;
        triggers().setOwner(this);
        for (Trigger t : triggers())
            t.start(this, Items.updatingByXml.get());
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479886589/fstmerge_base_8797295864638118117
        this.builds = builds;
        for (Trigger t : triggers())
            t.start(this, Items.updatingByXml.get());
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479886589/fstmerge_var2_1868436061315039373
        if(scm==null)
            scm = new NullSCM(); // perhaps it was pointing to a plugin that no longer exists.

        if(transientActions==null)
            transientActions = new Vector<Action>();    // happens when loaded from disk
        updateTransientActions();
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/AbstractProject.java
Conflict type: LineBasedMCFd
Conflict body: 
public String getBuildNowText() {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479886653/fstmerge_var1_412705619373953199
        return AlternativeUiTextProvider.get(BUILD_NOW_TEXT, this, isParameterized() ? Messages.AbstractProject_build_with_parameters() : Messages.AbstractProject_BuildNow());
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479886653/fstmerge_base_3800215310971735142
        return AlternativeUiTextProvider.get(BUILD_NOW_TEXT,this,Messages.AbstractProject_BuildNow());
=======
        return AlternativeUiTextProvider.get(BUILD_NOW_TEXT, this, getParameterizedJobMixIn().getBuildNowText());
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479886653/fstmerge_var2_369356926683996661
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/AbstractProject.java
Conflict type: LineBasedMCFd
Conflict body: 
@Override
    public void doConfigSubmit( StaplerRequest req, StaplerResponse rsp ) throws IOException, ServletException, FormException {
        super.doConfigSubmit(req,rsp);

        updateTransientActions();

<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479886806/fstmerge_var1_1340044224252437967
        Set<AbstractProject> upstream = Collections.emptySet();
        if(req.getParameter("pseudoUpstreamTrigger")!=null) {
            upstream = new HashSet<AbstractProject>(Items.fromNameList(getParent(),req.getParameter("upstreamProjects"),AbstractProject.class));
        }

        convertUpstreamBuildTrigger(upstream);

||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479886806/fstmerge_base_1432425526353194526
        Set<AbstractProject> upstream = Collections.emptySet();
        if(req.getParameter("pseudoUpstreamTrigger")!=null) {
            upstream = new HashSet<AbstractProject>(Items.fromNameList(getParent(),req.getParameter("upstreamProjects"),AbstractProject.class));
        }

        // dependency setting might have been changed by the user, so rebuild.
        Jenkins.getInstance().rebuildDependencyGraph();
        convertUpstreamBuildTrigger(upstream);


=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479886806/fstmerge_var2_8517548139641606111
        // notify the queue as the project might be now tied to different node
        Jenkins.getInstance().getQueue().scheduleMaintenance();

        // this is to reflect the upstream build adjustments done above
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479886806/fstmerge_base_1432425526353194526
        Jenkins.getInstance().rebuildDependencyGraph();
=======
        Jenkins.getInstance().rebuildDependencyGraphAsync();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479886806/fstmerge_var2_8517548139641606111
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/AbstractProject.java
Conflict type: LineBasedMCFd
Conflict body: 
@SuppressWarnings("unchecked")
    @WithBridgeMethods(Future.class)
    public QueueTaskFuture<R> scheduleBuild2(int quietPeriod, Cause c, Collection<? extends Action> actions) {
        List<Action> queueActions = new ArrayList<Action>(actions);
        if (c != null) {
            queueActions.add(new CauseAction(c));
        }
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479886836/fstmerge_var1_1788594025905235032

        ScheduleResult i = Jenkins.getInstance().getQueue().schedule2(this, quietPeriod, queueActions);
        if(i.isAccepted())
            return (QueueTaskFuture)i.getItem().getFuture();
        return null;
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479886836/fstmerge_base_7618503827653904

        WaitingItem i = Jenkins.getInstance().getQueue().schedule(this, quietPeriod, queueActions);
        if(i!=null)
            return (QueueTaskFuture)i.getFuture();
        return null;
=======
        return getParameterizedJobMixIn().scheduleBuild2(quietPeriod, queueActions.toArray(new Action[queueActions.size()]));
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479886836/fstmerge_var2_5352530609320407239
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/AbstractProject.java
Conflict type: LineBasedMCFd
Conflict body: 
@Override
    public RunMap<R> _getRuns() {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479886875/fstmerge_var1_2836295740841255850
        if (builds == null) {
            throw new IllegalStateException("no run map created yet for " + this);
        }
        assert builds.baseDirInitialized() : "neither onCreatedFromScratch nor onLoad called on " + this + " yet";
        return builds;
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479886875/fstmerge_base_6208634954930534509
        assert builds.baseDirInitialized() : "neither onCreatedFromScratch nor onLoad called on " + this + " yet";
        return builds;
=======
        return buildMixIn._getRuns();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479886875/fstmerge_var2_2230853739396039665
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/AbstractProject.java
Conflict type: LineBasedMCFd
Conflict body: 
@Override
    public void removeRun(R run) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479886881/fstmerge_var1_5183657520143195910
        if (!this.builds.remove(run)) {
            LOGGER.log(Level.WARNING, "{0} did not contain {1} to begin with", new Object[] {this, run});
        }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479886881/fstmerge_base_418783683316121082
        this.builds.remove(run);
=======
        buildMixIn.removeRun(run);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479886881/fstmerge_var2_8109057828126047769
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/AbstractProject.java
Conflict type: LineBasedMCFd
Conflict body: 
@Override
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479886921/fstmerge_var1_6894969059069261777
    public @CheckForNull R getLastBuild() {
        return builds.newestBuild();
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479886921/fstmerge_base_5231717129236689683
    public R getLastBuild() {
        return builds.newestBuild();
=======
    public @CheckForNull R getLastBuild() {
        return buildMixIn.getLastBuild();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479886921/fstmerge_var2_1192912187551962297
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/AbstractProject.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479887052/fstmerge_var1_6350982936777035837
private PollingResult _poll(TaskListener listener, SCM scm) throws IOException, InterruptedException {
        if (scm.requiresWorkspaceForPolling()) {
            R b = getSomeBuildWithExistingWorkspace();
            if (b == null) b = getLastBuild();
            // lock the workspace for the given build
            FilePath ws=b.getWorkspace();

            WorkspaceOfflineReason workspaceOfflineReason = workspaceOffline( b );
            if ( workspaceOfflineReason != null ) {
                // workspace offline
                for (WorkspaceBrowser browser : Jenkins.getInstance().getExtensionList(WorkspaceBrowser.class)) {
                    ws = browser.getWorkspace(this);
                    if (ws != null) {
                        return pollWithWorkspace(listener, scm, b, ws, browser.getWorkspaceList());
                    }
                }

                // build now, or nothing will ever be built
                Label label = getAssignedLabel();
                if (label != null && label.isSelfLabel()) {
                    // if the build is fixed on a node, then attempting a build will do us
                    // no good. We should just wait for the slave to come back.
                    listener.getLogger().print(Messages.AbstractProject_NoWorkspace());
                    listener.getLogger().println( " (" + workspaceOfflineReason.name() + ")");
                    return NO_CHANGES;
                }
                listener.getLogger().println( ws==null
                    ? Messages.AbstractProject_WorkspaceOffline()
                    : Messages.AbstractProject_NoWorkspace());
                if (isInQueue()) {
                    listener.getLogger().println(Messages.AbstractProject_AwaitingBuildForWorkspace());
                    return NO_CHANGES;
                } else {
                    listener.getLogger().print(Messages.AbstractProject_NewBuildForWorkspace());
                    listener.getLogger().println( " (" + workspaceOfflineReason.name() + ")");
                    return BUILD_NOW;
                }
            } else {
                WorkspaceList l = b.getBuiltOn().toComputer().getWorkspaceList();
                return pollWithWorkspace(listener, scm, b, ws, l);

            }
        } else {
            // polling without workspace
            LOGGER.fine("Polling SCM changes of " + getName());

            if (pollingBaseline==null) // see NOTE-NO-BASELINE above
                calcPollingBaseline(getLastBuild(),null,listener);
            PollingResult r = scm.poll(this, null, null, listener, pollingBaseline);
            pollingBaseline = r.remote;
            return r;
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479887052/fstmerge_base_47728198835087172
=======
private PollingResult _poll(TaskListener listener, SCM scm) throws IOException, InterruptedException {
        if (scm.requiresWorkspaceForPolling()) {
            R b = getSomeBuildWithExistingWorkspace();
            if (b == null) b = getLastBuild();
            // lock the workspace for the given build
            FilePath ws=b.getWorkspace();

            WorkspaceOfflineReason workspaceOfflineReason = workspaceOffline( b );
            if ( workspaceOfflineReason != null ) {
                // workspace offline
                for (WorkspaceBrowser browser : Jenkins.getInstance().getExtensionList(WorkspaceBrowser.class)) {
                    ws = browser.getWorkspace(this);
                    if (ws != null) {
                        return pollWithWorkspace(listener, scm, b, ws, browser.getWorkspaceList());
                    }
                }

                // At this point we start thinking about triggering a build just to get a workspace,
                // because otherwise there's no way we can detect changes.
                // However, first there are some conditions in which we do not want to do so.
                // give time for slaves to come online if we are right after reconnection (JENKINS-8408)
                long running = Jenkins.getInstance().getInjector().getInstance(Uptime.class).getUptime();
                long remaining = TimeUnit2.MINUTES.toMillis(10)-running;
                if (remaining>0 && /* this logic breaks tests of polling */!Functions.getIsUnitTest()) {
                    listener.getLogger().print(Messages.AbstractProject_AwaitingWorkspaceToComeOnline(remaining/1000));
                    listener.getLogger().println( " (" + workspaceOfflineReason.name() + ")");
                    return NO_CHANGES;
                }

                // Do not trigger build, if no suitable slave is online
                if (workspaceOfflineReason.equals(WorkspaceOfflineReason.all_suitable_nodes_are_offline)) {
                    // No suitable executor is online
                    listener.getLogger().print(Messages.AbstractProject_AwaitingWorkspaceToComeOnline(running/1000));
                    listener.getLogger().println( " (" + workspaceOfflineReason.name() + ")");
                    return NO_CHANGES;
                }

                Label label = getAssignedLabel();
                if (label != null && label.isSelfLabel()) {
                    // if the build is fixed on a node, then attempting a build will do us
                    // no good. We should just wait for the slave to come back.
                    listener.getLogger().print(Messages.AbstractProject_NoWorkspace());
                    listener.getLogger().println( " (" + workspaceOfflineReason.name() + ")");
                    return NO_CHANGES;
                }

                listener.getLogger().println( ws==null
                    ? Messages.AbstractProject_WorkspaceOffline()
                    : Messages.AbstractProject_NoWorkspace());
                if (isInQueue()) {
                    listener.getLogger().println(Messages.AbstractProject_AwaitingBuildForWorkspace());
                    return NO_CHANGES;
                }

                // build now, or nothing will ever be built
                listener.getLogger().print(Messages.AbstractProject_NewBuildForWorkspace());
                listener.getLogger().println( " (" + workspaceOfflineReason.name() + ")");
                return BUILD_NOW;
            } else {
                WorkspaceList l = b.getBuiltOn().toComputer().getWorkspaceList();
                return pollWithWorkspace(listener, scm, b, ws, l);
            }
			
        } else {
            // polling without workspace
            LOGGER.fine("Polling SCM changes of " + getName());
            if (pollingBaseline==null) // see NOTE-NO-BASELINE above
                calcPollingBaseline(getLastBuild(),null,listener);
            PollingResult r = scm.poll(this, null, null, listener, pollingBaseline);
            pollingBaseline = r.remote;
            return r;
        }
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479887052/fstmerge_var2_5154657348951469896

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/AbstractProject.java
Conflict type: LineBasedMCFd
Conflict body: 
@SuppressWarnings("unchecked")
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479887089/fstmerge_var1_5762953446960739183
    public Map<TriggerDescriptor,Trigger<?>> getTriggers() {
        return triggers().toMap();
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479887089/fstmerge_base_919678922729171462
    public synchronized Map<TriggerDescriptor,Trigger> getTriggers() {
        return (Map)Descriptor.toMap(triggers());
=======
    @Override public Map<TriggerDescriptor,Trigger<?>> getTriggers() {
        return triggers().toMap();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479887089/fstmerge_var2_8295541896853764862
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/AbstractProject.java
Conflict type: LineBasedMCFd
Conflict body: 
public void doBuild( StaplerRequest req, StaplerResponse rsp, @QueryParameter TimeDuration delay ) throws IOException, ServletException {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479887150/fstmerge_var1_8885357708754329219
        if (delay==null)    delay=new TimeDuration(getQuietPeriod());

        // if a build is parameterized, let that take over
        ParametersDefinitionProperty pp = getProperty(ParametersDefinitionProperty.class);
        if (pp != null && !req.getMethod().equals("POST")) {
            // show the parameter entry form.
            req.getView(pp, "index.jelly").forward(req, rsp);
            return;
        }

        BuildAuthorizationToken.checkPermission(this, authToken, req, rsp);

        if (pp != null) {
            pp._doBuild(req,rsp,delay);
            return;
        }

        if (!isBuildable())
            throw HttpResponses.error(SC_INTERNAL_SERVER_ERROR,new IOException(getFullName()+" is not buildable"));

        ScheduleResult r = Jenkins.getInstance().getQueue().schedule2(this, delay.getTime(), getBuildCause(req));
        if (r.isAccepted()) {
            rsp.sendRedirect(SC_CREATED,req.getContextPath()+'/'+r.getItem().getUrl());
        } else
            rsp.sendRedirect(".");
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479887150/fstmerge_base_2979102869627967788
        if (delay==null)    delay=new TimeDuration(getQuietPeriod());

        // if a build is parameterized, let that take over
        ParametersDefinitionProperty pp = getProperty(ParametersDefinitionProperty.class);
        if (pp != null && !req.getMethod().equals("POST")) {
            // show the parameter entry form.
            req.getView(pp, "index.jelly").forward(req, rsp);
            return;
        }

        BuildAuthorizationToken.checkPermission(this, authToken, req, rsp);

        if (pp != null) {
            pp._doBuild(req,rsp,delay);
            return;
        }

        if (!isBuildable())
            throw HttpResponses.error(SC_INTERNAL_SERVER_ERROR,new IOException(getFullName()+" is not buildable"));

        Jenkins.getInstance().getQueue().schedule(this, (int)delay.getTime(), getBuildCause(req));
        rsp.sendRedirect(".");
=======
        getParameterizedJobMixIn().doBuild(req, rsp, delay);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479887150/fstmerge_var2_7714981062356777163
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/AbstractProject.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479887301/fstmerge_var1_8009726756822220906
@Override
    @RequirePOST
    public void doDoDelete(StaplerRequest req, StaplerResponse rsp) throws IOException, ServletException, InterruptedException {
        delete();
        if (req == null || rsp == null)
            return;
        List<Ancestor> ancestors = req.getAncestors();
        ListIterator<Ancestor> it = ancestors.listIterator(ancestors.size());
        String url = getParent().getUrl(); // fallback but we ought to get to Jenkins.instance at the root
        while (it.hasPrevious()) {
            Object a = it.previous().getObject();
            if (a instanceof View) {
                url = ((View) a).getUrl();
                break;
            } else if (a instanceof ViewGroup) {
                url = ((ViewGroup) a).getUrl();
                break;
            }
        }
        rsp.sendRedirect2(req.getContextPath() + '/' + url);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479887301/fstmerge_base_6985989881311556954
@Override
    @RequirePOST
    public void doDoDelete(StaplerRequest req, StaplerResponse rsp) throws IOException, ServletException, InterruptedException {
        delete();
        if (req == null || rsp == null)
            return;
        View view = req.findAncestorObject(View.class);
        if (view == null)
            rsp.sendRedirect2(req.getContextPath() + '/' + getParent().getUrl());
        else 
            rsp.sendRedirect2(req.getContextPath() + '/' + view.getUrl());
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479887301/fstmerge_var2_8197243165283544486

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/AbstractProject.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479887547/fstmerge_var1_2734902984005431468
@Override public void onLoad(Run<?,?> r) {
        // noop
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479887547/fstmerge_base_8756096356395544803
=======
@Override public void onLoad(Run<?,?> owner) {
        for (Cause c : causes) {
            if (c != null) {
                c.onLoad(owner);
            }
        }
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479887547/fstmerge_var2_7245064811104713133

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/CauseAction.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479887551/fstmerge_var1_5992488699263509902
@Override public void onAttached(Run<?,?> owner) {
        if (owner instanceof AbstractBuild) {// this should be always true but being defensive here
            AbstractBuild b = (AbstractBuild) owner;
            for (Cause c : causes) {
                c.onAddedTo(b);
            }
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479887551/fstmerge_base_2423423521573933654
=======
@Override public void onAttached(Run<?,?> owner) {
        for (Cause c : causes) {
            if (c != null) {
                c.onAddedTo(owner);
            }
        }
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479887551/fstmerge_var2_4567066692582487557

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/CauseAction.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479887613/fstmerge_var1_9213087607881177769
public static <T extends Item> List<T> getAllItems(final ItemGroup root, Class<T> type) {
        List<T> r = new ArrayList<T>();

        Stack<ItemGroup> q = new Stack<ItemGroup>();
        q.push(root);

        while(!q.isEmpty()) {
            ItemGroup<?> parent = q.pop();
            for (Item i : parent.getItems()) {
                if(type.isInstance(i)) {
                    if (i.hasPermission(Item.READ))
                        r.add(type.cast(i));
                }
                if(i instanceof ItemGroup)
                    q.push((ItemGroup)i);
            }
        }
        // sort by relative name, ignoring case
        Collections.sort(r, new Comparator<T>() {
            @Override
            public int compare(T o1, T o2) {
                if (o1 == null) {
                    if (o2 == null) {
                        return 0;
                    }
                    return 1;
                }
                if (o2 == null) {
                    return -1;
                }
                return o1.getRelativeNameFrom(root).compareToIgnoreCase(o2.getRelativeNameFrom(root));
            }
            
        });
        return r;
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479887613/fstmerge_base_2748005354317967159
=======
public static <T extends Item> List<T> getAllItems(final ItemGroup root, Class<T> type) {
        List<T> r = new ArrayList<T>();
        getAllItems(root, type, r);
        return r;
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479887613/fstmerge_var2_5892449559059640938

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/Items.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479887982/fstmerge_var1_5899479372299808637
@SuppressWarnings("unchecked")
    protected List<RunT> getEstimatedDurationCandidates() {
        List<RunT> candidates = new ArrayList<RunT>(3);
        RunT lastSuccessful = (RunT) Permalink.LAST_SUCCESSFUL_BUILD.resolve(this);
        int lastSuccessfulNumber = -1;
        if (lastSuccessful != null) {
            candidates.add(lastSuccessful);
            lastSuccessfulNumber = lastSuccessful.getNumber();
        }

        int i = 0;
        RunT r = (RunT) Permalink.LAST_BUILD.resolve(this);
        List<RunT> fallbackCandidates = new ArrayList<RunT>(3);
        while (r != null && candidates.size() < 3 && i < 6) {
            if (!r.isBuilding() && r.getResult() != null && r.getNumber() != lastSuccessfulNumber) {
                Result result = r.getResult();
                if (result.isBetterOrEqualTo(Result.UNSTABLE)) {
                    candidates.add(r);
                } else if (result.isCompleteBuild()) {
                    fallbackCandidates.add(r);
                }
            }
            i++;
            r = r.getPreviousBuild();
        }
        
        while (candidates.size() < 3) {
            if (fallbackCandidates.isEmpty())
                break;
            RunT run = fallbackCandidates.remove(0);
            candidates.add(run);
        }
        
        return candidates;
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479887982/fstmerge_base_2318315828559430717
=======
@SuppressWarnings("unchecked")
    protected List<RunT> getEstimatedDurationCandidates() {
        List<RunT> candidates = new ArrayList<RunT>(3);
        RunT lastSuccessful = getLastSuccessfulBuild();
        int lastSuccessfulNumber = -1;
        if (lastSuccessful != null) {
            candidates.add(lastSuccessful);
            lastSuccessfulNumber = lastSuccessful.getNumber();
        }

        int i = 0;
        RunT r = getLastBuild();
        List<RunT> fallbackCandidates = new ArrayList<RunT>(3);
        while (r != null && candidates.size() < 3 && i < 6) {
            if (!r.isBuilding() && r.getResult() != null && r.getNumber() != lastSuccessfulNumber) {
                Result result = r.getResult();
                if (result.isBetterOrEqualTo(Result.UNSTABLE)) {
                    candidates.add(r);
                } else if (result.isCompleteBuild()) {
                    fallbackCandidates.add(r);
                }
            }
            i++;
            r = r.getPreviousBuild();
        }
        
        while (candidates.size() < 3) {
            if (fallbackCandidates.isEmpty())
                break;
            RunT run = fallbackCandidates.remove(0);
            candidates.add(run);
        }
        
        return candidates;
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479887982/fstmerge_var2_7052210358027779465

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/Job.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479888280/fstmerge_var1_8495171144285321142
private boolean check(File fingerprintFile) {
        try {
            Fingerprint fp = Fingerprint.load(fingerprintFile);
            if (fp == null || !fp.isAlive()) {
                logger.fine("deleting obsolete " + fingerprintFile);
                fingerprintFile.delete();
                return true;
            } else {
                // get the fingerprint in the official map so have the changes visible to Jenkins
                // otherwise the mutation made in FingerprintMap can override our trimming.
                logger.finer("possibly trimming " + fingerprintFile);
                fp = Jenkins.getInstance()._getFingerprint(fp.getHashString());
                return fp.trim();
            }
        } catch (IOException e) {
            logger.log(Level.WARNING, "Failed to process "+fingerprintFile, e);
            return false;
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479888280/fstmerge_base_1413250667304113732
private boolean check(File fingerprintFile) {
        try {
            Fingerprint fp = Fingerprint.load(fingerprintFile);
            if(!fp.isAlive()) {
                fingerprintFile.delete();
                return true;
            }
        } catch (IOException e) {
            logger.log(Level.WARNING, "Failed to process "+fingerprintFile, e);
        }
        return false;
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479888280/fstmerge_var2_2186938068562988060

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/FingerprintCleanupThread.java
Conflict type: LineBasedMCFd
Conflict body: 
@Override
    public R getPreviousBuild() {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479888354/fstmerge_var1_9119188566505443435
        while (true) {
            BuildReference<R> r = previousBuild;    // capture the value once

            if (r==null) {
                // having two neighbors pointing to each other is important to make RunMap.removeValue work
                P _parent = getParent();
                if (_parent == null) {
                    throw new IllegalStateException("no parent for " + number + " in " + workspace);
                }
                R pb = _parent._getRuns().search(number-1, Direction.DESC);
                if (pb!=null) {
                    ((AbstractBuild)pb).nextBuild = selfReference;   // establish bi-di link
                    this.previousBuild = pb.selfReference;
                    return pb;
                } else {
                    // this indicates that we know there's no previous build
                    // (as opposed to we don't know if/what our previous build is.
                    this.previousBuild = selfReference;
                    return null;
                }
            }
            if (r==selfReference)
                return null;

            R referent = r.get();
            if (referent!=null) return referent;

            // the reference points to a GC-ed object, drop the reference and do it again
            this.previousBuild = null;
        }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479888354/fstmerge_base_8488359966094071902
        while (true) {
            BuildReference<R> r = previousBuild;    // capture the value once

            if (r==null) {
                // having two neighbors pointing to each other is important to make RunMap.removeValue work
                R pb = getParent().builds.search(number-1, Direction.DESC);
                if (pb!=null) {
                    ((AbstractBuild)pb).nextBuild = selfReference;   // establish bi-di link
                    this.previousBuild = pb.selfReference;
                    return pb;
                } else {
                    // this indicates that we know there's no previous build
                    // (as opposed to we don't know if/what our previous build is.
                    this.previousBuild = selfReference;
                    return null;
                }
            }
            if (r==selfReference)
                return null;

            R referent = r.get();
            if (referent!=null) return referent;

            // the reference points to a GC-ed object, drop the reference and do it again
            this.previousBuild = null;
        }
=======
        return getRunMixIn().getPreviousBuild();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479888354/fstmerge_var2_7670915632442967117
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/AbstractBuild.java
Conflict type: LineBasedMCFd
Conflict body: 
protected final boolean performAllBuildSteps(BuildListener listener, Iterable<? extends BuildStep> buildSteps, boolean phase) throws InterruptedException, IOException {
            boolean r = true;
            for (BuildStep bs : buildSteps) {
                if ((bs instanceof Publisher && ((Publisher)bs).needsToRunAfterFinalized()) ^ phase)
                    try {
                        if (!perform(bs,listener)) {
                            LOGGER.log(Level.FINE, "{0} : {1} failed", new Object[] {AbstractBuild.this, bs});
                            r = false;
                        }
                    } catch (Exception e) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479888466/fstmerge_var1_6042582234291789774
                        String msg = "Publisher " + bs.getClass().getName() + " aborted due to exception";
                        e.printStackTrace(listener.error(msg));
                        LOGGER.log(WARNING, msg, e);
                        setResult(Result.FAILURE);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479888466/fstmerge_base_5725278651074614948
                        String msg = "Publisher " + bs.getClass().getName() + " aborted due to exception";
                        e.printStackTrace(listener.error(msg));
                        LOGGER.log(Level.WARNING, msg, e);
                        setResult(Result.FAILURE);
=======
                        reportError(bs, e, listener, phase);
                    } catch (LinkageError e) {
                        reportError(bs, e, listener, phase);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479888466/fstmerge_var2_6636646608544114727
                    }
            }
            return r;
        }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/AbstractBuild.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479889611/fstmerge_var1_8511963677795241043
public Item getItem() {
        return null;
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479889611/fstmerge_base_3291711295030023170
=======
public @CheckForNull Item getItem() {
        return null;
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479889611/fstmerge_var2_8940572671689196244

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/queue/ScheduleResult.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479889616/fstmerge_var1_5638130881598504165
public WaitingItem getCreateItem() {
        return null;
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479889616/fstmerge_base_9140220684207843900
=======
public @CheckForNull WaitingItem getCreateItem() {
        return null;
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479889616/fstmerge_var2_640311127055903009

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/model/queue/ScheduleResult.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479890931/fstmerge_var1_1680427866217572445
public @Nonnull String head(int numChars) throws IOException {
        char[] buf = new char[numChars];
        int read = 0;
        Reader r = new FileReader(file);

        try {
            while (read<numChars) {
                int d = r.read(buf,read,buf.length-read);
                if (d<0)
                    break;
                read += d;
            }

            return new String(buf,0,read);
        } finally {
            IOUtils.closeQuietly(r);
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479890931/fstmerge_base_3429647583974812635
=======
public @Nonnull String head(int numChars) throws IOException {
        char[] buf = new char[numChars];
        int read = 0;
        Reader r = new FileReader(file);

        try {
            while (read<numChars) {
                int d = r.read(buf,read,buf.length-read);
                if (d<0)
                    break;
                read += d;
            }

            return new String(buf,0,read);
        } finally {
            org.apache.commons.io.IOUtils.closeQuietly(r);
        }
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479890931/fstmerge_var2_919087867855600553

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/util/TextFile.java
Conflict type: LineBasedMCFd
Conflict body: 
public RunList(View view) {// this is a type unsafe operation
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479891078/fstmerge_base_3141280821384853870
        List<Iterable<R>> jobs = new ArrayList<Iterable<R>>();
        for (Item item : view.getItems())
            for (Job<?,?> j : item.getAllJobs())
                jobs.add(((Job)j).getBuilds());
=======
        Set<Job> jobs = new HashSet<Job>();
        for (TopLevelItem item : view.getItems())
            jobs.addAll(item.getAllJobs());
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479891078/fstmerge_var2_1714130384707104119

<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479891078/fstmerge_var1_5509148354826056361
        List<Iterable<R>> runs = new ArrayList<Iterable<R>>();
        for (Job job : jobs) {
            runs.add(job.getBuilds());
        }
        this.base = combine(runs);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479891078/fstmerge_base_3141280821384853870
        this.base = combine(jobs);
=======
        List<Iterable<R>> runLists = new ArrayList<Iterable<R>>();
        for (Job job : jobs) {
            runLists.add(job.getBuilds());
        }
        this.base = combine(runLists);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479891078/fstmerge_var2_1714130384707104119
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/util/RunList.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479891422/fstmerge_var1_8674680355504204679
private void _onModified() {
        try {
            onModified();
        } catch (IOException e) {
            throw new Error(e);
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479891422/fstmerge_base_1016905664105465429
=======
private void _onModified() {
        try {
            onModified();
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479891422/fstmerge_var2_5042819038515629349

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/util/PersistedList.java
Conflict type: LineBasedMCFd
Conflict body: 
Windows() {
            for (final WinProcess p : WinProcess.all()) {
                int pid = p.getPid();
                if(pid == 0 || pid == 4) continue; // skip the System Idle and System processes
                super.processes.put(pid,new OSProcess(pid) {
                    private EnvVars env;
                    private List<String> args;

                    public OSProcess getParent() {
                        // windows process doesn't have parent/child relationship
                        return null;
                    }

<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479892253/fstmerge_base_5903233820726119750
                    public void killRecursively() {
=======
                    public void killRecursively() throws InterruptedException {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479892253/fstmerge_var2_7294348980874464624
                        LOGGER.finer("Killing recursively "+getPid());
                        p.killRecursively();
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479892253/fstmerge_base_5903233820726119750
=======
                        killByKiller();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479892253/fstmerge_var2_7294348980874464624
                    }

                    public void kill() throws InterruptedException {
                        LOGGER.finer("Killing "+getPid());
                        p.kill();
                        killByKiller();
                    }

                    @Override
                    public synchronized List<String> getArguments() {
                        if(args==null)  args = Arrays.asList(QuotedStringTokenizer.tokenize(p.getCommandLine()));
                        return args;
                    }

                    @Override
                    public synchronized EnvVars getEnvironmentVariables() {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479892253/fstmerge_var1_3485881117321574919
                        if(env !=null)
                          return env;
                        env = new EnvVars();   
                        
                        try 
                        {
                           env.putAll(p.getEnvironmentVariables());
                        } catch (WinpException e)
                        {
                           LOGGER.log(FINE, "Failed to get environment variable ", e);
                        }                          
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479892253/fstmerge_base_5903233820726119750
                        if(env==null)   env = new EnvVars(p.getEnvironmentVariables());
=======
                        if(env !=null)
                          return env;
                        env = new EnvVars();

                        try
                        {
                           env.putAll(p.getEnvironmentVariables());
                        } catch (WinpException e)
                        {
                           LOGGER.log(FINE, "Failed to get environment variable ", e);
                        }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479892253/fstmerge_var2_7294348980874464624
                        return env;
                    }
                });

            }
        }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/util/ProcessTree.java
Conflict type: LineBasedMCFd
Conflict body: 
@Override
    protected MapperWrapper wrapMapper(MapperWrapper next) {
        Mapper m = new CompatibilityMapper(new MapperWrapper(next) {
            @Override
            public String serializedClass(Class type) {
                if (type != null && ImmutableMap.class.isAssignableFrom(type))
                    return super.serializedClass(ImmutableMap.class);
                else if (type != null && ImmutableList.class.isAssignableFrom(type))
                    return super.serializedClass(ImmutableList.class);
                else
                    return super.serializedClass(type);
            }
        });
        AnnotationMapper a = new AnnotationMapper(m, getConverterRegistry(), getConverterLookup(), getClassLoader(), getReflectionProvider(), getJvm());
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479892954/fstmerge_var1_6034772938985284988
        // TODO acc. to XSTR-744 this means that an XStream2 instance is not thread-safe and we would need a pool:
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479892954/fstmerge_base_4630972187909190237
=======
        // TODO JENKINS-19561 this is unsafe:
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479892954/fstmerge_var2_7868790672295606789
        a.autodetectAnnotations(true);

        mapperInjectionPoint = new MapperInjectionPoint(a);

        return mapperInjectionPoint;
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/util/XStream2.java
Conflict type: LineBasedMCFd
Conflict body: 
@Override
    protected void populateCollection(HierarchicalStreamReader reader, UnmarshallingContext context, Collection collection) {
        while (reader.hasMoreChildren()) {
            reader.moveDown();
            try {
                Object item = readItem(reader, context, collection);
                collection.add(item);
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479893749/fstmerge_var1_4217262438601324435
            } catch (CannotResolveClassException e) {
                LOGGER.log(FINE, "Failed to resolve class", e);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479893749/fstmerge_base_4630391655554924633
            } catch (CannotResolveClassException e) {
                LOGGER.log(WARNING,"Failed to resolve class",e);
=======
            } catch (XStreamException e) {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479893749/fstmerge_var2_999949388403403629
                RobustReflectionConverter.addErrorInContext(context, e);
            } catch (LinkageError e) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479893749/fstmerge_var1_4217262438601324435
                LOGGER.log(FINE, "Failed to resolve class", e);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479893749/fstmerge_base_4630391655554924633
                LOGGER.log(WARNING,"Failed to resolve class",e);
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479893749/fstmerge_var2_999949388403403629
                RobustReflectionConverter.addErrorInContext(context, e);
            }
            reader.moveUp();
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/util/RobustCollectionConverter.java
Conflict type: LineBasedMCFd
Conflict body: 
@SuppressWarnings("unchecked")
        public CopyOnWriteList unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) {
            // read the items from xml into a list
            List items = new ArrayList();
            while (reader.hasMoreChildren()) {
                reader.moveDown();
                try {
                    Object item = readItem(reader, context, items);
                    items.add(item);
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479894027/fstmerge_var1_2890381461140243683
                } catch (CannotResolveClassException e) {
                    LOGGER.log(FINE, "Failed to resolve class", e);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479894027/fstmerge_base_8838164538950055523
                } catch (CannotResolveClassException e) {
                    LOGGER.log(WARNING,"Failed to resolve class",e);
=======
                } catch (XStreamException e) {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479894027/fstmerge_var2_6671414117815327808
                    RobustReflectionConverter.addErrorInContext(context, e);
                } catch (LinkageError e) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479894027/fstmerge_var1_2890381461140243683
                    LOGGER.log(FINE, "Failed to resolve class", e);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479894027/fstmerge_base_8838164538950055523
                    LOGGER.log(WARNING,"Failed to resolve class",e);
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479894027/fstmerge_var2_6671414117815327808
                    RobustReflectionConverter.addErrorInContext(context, e);
                }
                reader.moveUp();
            }

            return new CopyOnWriteList(items,true);
        }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/util/CopyOnWriteList.java
Conflict type: LineBasedMCFd
Conflict body: 
public Object doUnmarshal(final Object result, final HierarchicalStreamReader reader, final UnmarshallingContext context) {
        final SeenFields seenFields = new SeenFields();
        Iterator it = reader.getAttributeNames();
        // Remember outermost Saveable encountered, for reporting below
        if (result instanceof Saveable && context.get("Saveable") == null)
            context.put("Saveable", result);

        // Process attributes before recursing into child elements.
        while (it.hasNext()) {
            String attrAlias = (String) it.next();
            String attrName = mapper.attributeForAlias(attrAlias);
            Class classDefiningField = determineWhichClassDefinesField(reader);
            boolean fieldExistsInClass = fieldDefinedInClass(result, attrName);
            if (fieldExistsInClass) {
                Field field = reflectionProvider.getField(result.getClass(), attrName);
                SingleValueConverter converter = mapper.getConverterFromAttribute(field.getDeclaringClass(),attrName,field.getType());
                Class type = field.getType();
                if (converter == null) {
                    converter = mapper.getConverterFromItemType(type);
                }
                if (converter != null) {
                    Object value = converter.fromString(reader.getAttribute(attrAlias));
                    if (type.isPrimitive()) {
                        type = Primitives.box(type);
                    }
                    if (value != null && !type.isAssignableFrom(value.getClass())) {
                        throw new ConversionException("Cannot convert type " + value.getClass().getName() + " to type " + type.getName());
                    }
                    reflectionProvider.writeField(result, attrName, value, classDefiningField);
                    seenFields.add(classDefiningField, attrName);
                }
            }
        }

        Map implicitCollectionsForCurrentObject = null;
        while (reader.hasMoreChildren()) {
            reader.moveDown();

            boolean critical = false;
            try {
                String fieldName = mapper.realMember(result.getClass(), reader.getNodeName());
                for (Class<?> concrete = result.getClass(); concrete != null; concrete = concrete.getSuperclass()) {
                    // Not quite right since a subclass could shadow a field, but probably suffices:
                    if (criticalFields.contains(concrete.getName() + '#' + fieldName)) {
                        critical = true;
                        break;
                    }
                }
                boolean implicitCollectionHasSameName = mapper.getImplicitCollectionDefForFieldName(result.getClass(), reader.getNodeName()) != null;

                Class classDefiningField = determineWhichClassDefinesField(reader);
                boolean fieldExistsInClass = !implicitCollectionHasSameName && fieldDefinedInClass(result,fieldName);

                Class type = determineType(reader, fieldExistsInClass, result, fieldName, classDefiningField);
                final Object value;
                if (fieldExistsInClass) {
                    Field field = reflectionProvider.getField(result.getClass(),fieldName);
                    value = unmarshalField(context, result, type, field);
                    // TODO the reflection provider should have returned the proper field in first place ....
                    Class definedType = reflectionProvider.getFieldType(result, fieldName, classDefiningField);
                    if (!definedType.isPrimitive()) {
                        type = definedType;
                    }
                } else {
                    value = context.convertAnother(result, type);
                }

                if (value != null && !type.isAssignableFrom(value.getClass())) {
                    LOGGER.warning("Cannot convert type " + value.getClass().getName() + " to type " + type.getName());
                    // behave as if we didn't see this element
                } else {
                    if (fieldExistsInClass) {
                        reflectionProvider.writeField(result, fieldName, value, classDefiningField);
                        seenFields.add(classDefiningField, fieldName);
                    } else {
                        implicitCollectionsForCurrentObject = writeValueToImplicitCollection(context, value, implicitCollectionsForCurrentObject, result, fieldName);
                    }
                }
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479894078/fstmerge_var1_1950775388336160022
            } catch (MissingFieldException e) {
                LOGGER.log(FINE, "Skipping a non-existent field " + e.getFieldName(), e);
                addErrorInContext(context, e);
            } catch (CannotResolveClassException e) {
                LOGGER.log(FINE, "Skipping a non-existent type", e);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479894078/fstmerge_base_4576379500315664742
            } catch (MissingFieldException e) {
                if (critical) {
                    throw e;
                }
                LOGGER.log(WARNING,"Skipping a non-existent field "+e.getFieldName(),e);
                addErrorInContext(context, e);
            } catch (CannotResolveClassException e) {
                if (critical) {
                    throw e;
                }
                LOGGER.log(WARNING,"Skipping a non-existent type",e);
=======
            } catch (XStreamException e) {
                if (critical) {
                    throw e;
                }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479894078/fstmerge_var2_6792102337709519983
                addErrorInContext(context, e);
            } catch (LinkageError e) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479894078/fstmerge_var1_1950775388336160022
                LOGGER.log(FINE, "Failed to resolve a type", e);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479894078/fstmerge_base_4576379500315664742
                if (critical) {
                    throw e;
                }
                LOGGER.log(WARNING,"Failed to resolve a type",e);
=======
                if (critical) {
                    throw e;
                }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479894078/fstmerge_var2_6792102337709519983
                addErrorInContext(context, e);
            }

            reader.moveUp();
        }

        // Report any class/field errors in Saveable objects
        if (context.get("ReadError") != null && context.get("Saveable") == result) {
            OldDataMonitor.report((Saveable)result, (ArrayList<Throwable>)context.get("ReadError"));
            context.put("ReadError", null);
        }
        return result;
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/util/RobustReflectionConverter.java
Conflict type: LineBasedMCFd
Conflict body: 
public void visit(final File f, final String _relativePath) throws IOException {
        int mode = IOUtils.mode(f);

        // On Windows, the elements of relativePath are separated by 
        // back-slashes (\), but Zip files need to have their path elements separated
        // by forward-slashes (/)
        String relativePath = _relativePath.replace('\\', '/');
        
        if(f.isDirectory()) {
            ZipEntry dirZipEntry = new ZipEntry(relativePath+'/');
            // Setting this bit explicitly is needed by some unzipping applications (see JENKINS-3294).
            dirZipEntry.setExternalAttributes(BITMASK_IS_DIRECTORY);
            if (mode!=-1)   dirZipEntry.setUnixMode(mode);
            dirZipEntry.setTime(f.lastModified());
            zip.putNextEntry(dirZipEntry);
            zip.closeEntry();
        } else {
            ZipEntry fileZipEntry = new ZipEntry(relativePath);
            if (mode!=-1)   fileZipEntry.setUnixMode(mode);
            fileZipEntry.setTime(f.lastModified());
            zip.putNextEntry(fileZipEntry);
            FileInputStream in = new FileInputStream(f);
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479894954/fstmerge_var1_4325132830609352768
            int len;
            while((len=in.read(buf))>=0)
                zip.write(buf,0,len);
            in.close();
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479894954/fstmerge_base_710560920366678325
            int len;
            while((len=in.read(buf))>0)
                zip.write(buf,0,len);
            in.close();
=======
            try {
                int len;
                while((len=in.read(buf))>=0)
                    zip.write(buf,0,len);
            } finally {
                in.close();
            }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479894954/fstmerge_var2_8006427652383916748
            zip.closeEntry();
        }
        entriesWritten++;
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/util/io/ZipArchiver.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479896212/fstmerge_var1_5285547730327844615
public static @CheckForNull Permission fromId(String id) {
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479896212/fstmerge_base_3447866351972789941
public static Permission fromId(String id) {
=======
public static @CheckForNull Permission fromId(@Nonnull String id) {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479896212/fstmerge_var2_2846979597430095859
        int idx = id.lastIndexOf('.');
        if(idx<0)   return null;

        try {
            // force the initialization so that it will put all its permissions into the list.
            Class cl = Class.forName(id.substring(0,idx),true, Jenkins.getInstance().getPluginManager().uberClassLoader);
            PermissionGroup g = PermissionGroup.get(cl);
            if(g ==null)  return null;
            return g.find(id.substring(idx+1));
        } catch (ClassNotFoundException e) {
            return null;
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/security/Permission.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479896264/fstmerge_var1_6807108104700325198
public static void impersonate(Authentication auth, Runnable body) {
        SecurityContext old = impersonate(auth);
        try {
            body.run();
        } finally {
            SecurityContextHolder.setContext(old);
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479896264/fstmerge_base_5004918616671528398
=======
public static void impersonate(@Nonnull Authentication auth, @Nonnull Runnable body) {
        SecurityContext old = impersonate(auth);
        try {
            body.run();
        } finally {
            SecurityContextHolder.setContext(old);
        }
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479896264/fstmerge_var2_4227002330994548055

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/security/ACL.java
Conflict type: LineBasedMCFd
Conflict body: 
~~FSTMerge~~ private static final String PROXY_HEADER = "X-Forwarded-For"; ##FSTMerge## private final String PROXY_HEADER = "X-Forwarded-For"; ##FSTMerge##
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/security/csrf/DefaultCrumbIssuer.java
Conflict type: LineBasedMCFd
Conflict body: 
@SuppressWarnings("rawtypes")
    public void perform(Job<?,?> job) throws IOException, InterruptedException {
        LOGGER.log(FINE, "Running the log rotation for {0} with numToKeep={1} daysToKeep={2} artifactNumToKeep={3} artifactDaysToKeep={4}", new Object[] {job, numToKeep, daysToKeep, artifactNumToKeep, artifactDaysToKeep});
        
        // always keep the last successful and the last stable builds
        Run lsb = job.getLastSuccessfulBuild();
        Run lstb = job.getLastStableBuild();

        if(numToKeep!=-1) {
            // Note that RunList.size is deprecated, and indeed here we are loading all the builds of the job.
            // However we would need to load the first numToKeep anyway, just to skip over them;
            // and we would need to load the rest anyway, to delete them.
            // (Using RunMap.headMap would not suffice, since we do not know if some recent builds have been deleted for other reasons,
            // so simply subtracting numToKeep from the currently last build number might cause us to delete too many.)
            List<? extends Run<?,?>> builds = job.getBuilds();
            for (Run r : copy(builds.subList(Math.min(builds.size(), numToKeep), builds.size()))) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479897989/fstmerge_var1_8436098771604649772
                if (shouldKeepRun(r, lsb, lstb, null)) {
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479897989/fstmerge_base_7768228107080893010
                if (r.isKeepLog()) {
                    LOGGER.log(FINER, "{0} is not GC-ed because it''s marked as a keeper", r);
                    continue;
                }
                if (r==lsb) {
                    LOGGER.log(FINER, "{0} is not GC-ed because it''s the last successful build", r);
                    continue;
                }
                if (r==lstb) {
                    LOGGER.log(FINER, "{0} is not GC-ed because it''s the last stable build", r);
=======
                if (shouldKeepRun(r, lsb, lstb)) {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479897989/fstmerge_var2_6748391043700910582
                    continue;
                }
                LOGGER.log(FINE, "{0} is to be removed", r);
                r.delete();
            }
        }

        if(daysToKeep!=-1) {
            Calendar cal = new GregorianCalendar();
            cal.add(Calendar.DAY_OF_YEAR,-daysToKeep);
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479897989/fstmerge_var1_8436098771604649772
            for( Run r : copy(job.getBuilds()) ) {
                if (shouldKeepRun(r, lsb, lstb, cal)) {
                    continue;
                }
                LOGGER.log(FINE, "{0} is to be removed", r);
                r.delete();
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479897989/fstmerge_base_7768228107080893010
            for( Run r : copy(job.getBuilds()) ) {
                if (r.isKeepLog()) {
                    LOGGER.log(FINER, "{0} is not GC-ed because it''s marked as a keeper", r);
                    continue;
                }
                if (r==lsb) {
                    LOGGER.log(FINER, "{0} is not GC-ed because it''s the last successful build", r);
                    continue;
                }
                if (r==lstb) {
                    LOGGER.log(FINER, "{0} is not GC-ed because it''s the last stable build", r);
                    continue;
                }
                if (!r.getTimestamp().before(cal)) {
                    LOGGER.log(FINER, "{0} is not GC-ed because it''s still new", r);
                    continue;
                }
                LOGGER.log(FINE, "{0} is to be removed", r);
                r.delete();
=======
            Run r = job.getFirstBuild();
            while (r != null) {
                if (tooNew(r, cal)) {
                    break;
                }
                if (!shouldKeepRun(r, lsb, lstb)) {
                    LOGGER.log(FINE, "{0} is to be removed", r);
                    r.delete();
                }
                r = r.getNextBuild();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479897989/fstmerge_var2_6748391043700910582
            }
        }

        if(artifactNumToKeep!=null && artifactNumToKeep!=-1) {
            List<? extends Run<?,?>> builds = job.getBuilds();
            for (Run r : copy(builds.subList(Math.min(builds.size(), artifactNumToKeep), builds.size()))) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479897989/fstmerge_var1_8436098771604649772
                if (shouldKeepRun(r, lsb, lstb, null)) {
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479897989/fstmerge_base_7768228107080893010
                if (r.isKeepLog()) {
                    LOGGER.log(FINER, "{0} is not purged of artifacts because it''s marked as a keeper", r);
                    continue;
                }
                if (r==lsb) {
                    LOGGER.log(FINER, "{0} is not purged of artifacts because it''s the last successful build", r);
                    continue;
                }
                if (r==lstb) {
                    LOGGER.log(FINER, "{0} is not purged of artifacts because it''s the last stable build", r);
=======
                if (shouldKeepRun(r, lsb, lstb)) {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479897989/fstmerge_var2_6748391043700910582
                    continue;
                }
                LOGGER.log(FINE, "{0} is to be purged of artifacts", r);
                r.deleteArtifacts();
            }
        }

        if(artifactDaysToKeep!=null && artifactDaysToKeep!=-1) {
            Calendar cal = new GregorianCalendar();
            cal.add(Calendar.DAY_OF_YEAR,-artifactDaysToKeep);
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479897989/fstmerge_var1_8436098771604649772
            for( Run r : copy(job.getBuilds())) {
                if (shouldKeepRun(r, lsb, lstb, cal)) {
                    continue;
                }
                LOGGER.log(FINE, "{0} is to be purged of artifacts", r);
                r.deleteArtifacts();
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479897989/fstmerge_base_7768228107080893010
            for( Run r : copy(job.getBuilds())) {
                if (r.isKeepLog()) {
                    LOGGER.log(FINER, "{0} is not purged of artifacts because it''s marked as a keeper", r);
                    continue;
                }
                if (r==lsb) {
                    LOGGER.log(FINER, "{0} is not purged of artifacts because it''s the last successful build", r);
                    continue;
                }
                if (r==lstb) {
                    LOGGER.log(FINER, "{0} is not purged of artifacts because it''s the last stable build", r);
                    continue;
                }
                if (!r.getTimestamp().before(cal)) {
                    LOGGER.log(FINER, "{0} is not purged of artifacts because it''s still new", r);
                    continue;
                }
                LOGGER.log(FINE, "{0} is to be purged of artifacts", r);
                r.deleteArtifacts();
=======
            Run r = job.getFirstBuild();
            while (r != null) {
                if (tooNew(r, cal)) {
                    break;
                }
                if (!shouldKeepRun(r, lsb, lstb)) {
                    LOGGER.log(FINE, "{0} is to be purged of artifacts", r);
                    r.deleteArtifacts();
                }
                r = r.getNextBuild();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479897989/fstmerge_var2_6748391043700910582
            }
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/tasks/LogRotator.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479898779/fstmerge_var1_4485218190931168117
public ArtifactArchiver(String artifacts, String excludes, boolean latestOnly) {
        this(artifacts, excludes, latestOnly, false);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479898779/fstmerge_base_4598448037555365361
=======
@Deprecated
    public ArtifactArchiver(String artifacts, String excludes, boolean latestOnly) {
        this(artifacts, excludes, latestOnly, false, false);
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479898779/fstmerge_var2_3524926665125156259

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/tasks/ArtifactArchiver.java
Conflict type: LineBasedMCFd
Conflict body: 
@Override
    public boolean perform(AbstractBuild<?,?> build, Launcher launcher, BuildListener listener) throws InterruptedException {
        if(artifacts.length()==0) {
            listener.error(Messages.ArtifactArchiver_NoIncludes());
            build.setResult(Result.FAILURE);
            return true;
        }

<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479898813/fstmerge_var1_1970682631008271787
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479898813/fstmerge_base_8796760727814058451
        File dir = build.getArtifactsDir();
        dir.mkdirs();

=======
        if (onlyIfSuccessful && build.getResult() != null && build.getResult().isWorseThan(Result.UNSTABLE)) {
            listener.getLogger().println(Messages.ArtifactArchiver_SkipBecauseOnlyIfSuccessful());
            return true;
        }

>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479898813/fstmerge_var2_8356334853412799182
        listener.getLogger().println(Messages.ArtifactArchiver_ARCHIVING_ARTIFACTS());
        try {
            FilePath ws = build.getWorkspace();
            if (ws==null) { // #3330: slave down?
                return true;
            }

            String artifacts = build.getEnvironment(listener).expand(this.artifacts);
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479898813/fstmerge_var1_1970682631008271787

            Map<String,String> files = ws.act(new ListFiles(artifacts, excludes));
            if (!files.isEmpty()) {
                build.pickArtifactManager().archive(ws, launcher, listener, files);
            } else {
                Result result = build.getResult();
                if (result != null && result.isBetterOrEqualTo(Result.UNSTABLE)) {
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479898813/fstmerge_base_8796760727814058451
            if(ws.copyRecursiveTo(artifacts,excludes,new FilePath(dir))==0) {
                if(build.getResult().isBetterOrEqualTo(Result.UNSTABLE)) {
=======

            Map<String,String> files = ws.act(new ListFiles(artifacts, excludes, defaultExcludes));
            if (!files.isEmpty()) {
                build.pickArtifactManager().archive(ws, launcher, listener, files);
                if (fingerprint) {
                    new Fingerprinter(artifacts).perform(build, launcher, listener);
                }
            } else {
                Result result = build.getResult();
                if (result != null && result.isBetterOrEqualTo(Result.UNSTABLE)) {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479898813/fstmerge_var2_8356334853412799182
                    // If the build failed, don't complain that there was no matching artifact.
                    // The build probably didn't even get to the point where it produces artifacts. 
                    listenerWarnOrError(listener, Messages.ArtifactArchiver_NoMatchFound(artifacts));
                    String msg = null;
                    try {
                    	msg = ws.validateAntFileMask(artifacts);
                    } catch (Exception e) {
                    	listenerWarnOrError(listener, e.getMessage());
                    }
                    if(msg!=null)
                        listenerWarnOrError(listener, msg);
                }
                if (!allowEmptyArchive) {
                	build.setResult(Result.FAILURE);
                }
                return true;
            }
        } catch (IOException e) {
            Util.displayIOException(e,listener);
            e.printStackTrace(listener.error(
                    Messages.ArtifactArchiver_FailedToArchive(artifacts)));
            build.setResult(Result.FAILURE);
            return true;
        }

        return true;
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/tasks/ArtifactArchiver.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479898818/fstmerge_var1_1742326214542079943
@Override public Map<String,String> invoke(File basedir, VirtualChannel channel) throws IOException, InterruptedException {
            Map<String,String> r = new HashMap<String,String>();
            for (String f : Util.createFileSet(basedir, includes, excludes).getDirectoryScanner().getIncludedFiles()) {
                f = f.replace(File.separatorChar, '/');
                r.put(f, f);
            }
            return r;
        }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479898818/fstmerge_base_8618602926259818059
=======
@Override public Map<String,String> invoke(File basedir, VirtualChannel channel) throws IOException, InterruptedException {
            Map<String,String> r = new HashMap<String,String>();

            FileSet fileSet = Util.createFileSet(basedir, includes, excludes);
            fileSet.setDefaultexcludes(defaultExcludes);

            for (String f : fileSet.getDirectoryScanner().getIncludedFiles()) {
                f = f.replace(File.separatorChar, '/');
                r.put(f, f);
            }
            return r;
        }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479898818/fstmerge_var2_8550901116996093532

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/tasks/ArtifactArchiver.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479898847/fstmerge_var1_7902538436028853836
@Override
    public boolean prebuild(AbstractBuild<?, ?> build, BuildListener listener) {
        if(latestOnly) {
            AbstractBuild<?,?> b = build.getProject().getLastCompletedBuild();
            Result bestResultSoFar = Result.NOT_BUILT;
            while(b!=null) {
                if(b.getResult()!=null){
                    if (b.getResult().isBetterThan(bestResultSoFar)) {
                        bestResultSoFar = b.getResult();
                    } else {
                        // remove old artifacts
                        try {
                            if (b.getArtifactManager().delete()) {
                                listener.getLogger().println(Messages.ArtifactArchiver_DeletingOld(b.getDisplayName()));
                            }
                        } catch (IOException e) {
                            e.printStackTrace(listener.error(e.getMessage()));
                        } catch (InterruptedException x) {
                            x.printStackTrace(listener.error(x.getMessage()));
                        }
                    }
                }
                b = b.getPreviousBuild();
            }
        }
        return true;
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479898847/fstmerge_base_3643080036811824883
@Override
    public boolean prebuild(AbstractBuild<?, ?> build, BuildListener listener) {
        if(latestOnly) {
            AbstractBuild<?,?> b = build.getProject().getLastCompletedBuild();
            Result bestResultSoFar = Result.NOT_BUILT;
            while(b!=null) {
                if (b.getResult().isBetterThan(bestResultSoFar)) {
                    bestResultSoFar = b.getResult();
                } else {
                    // remove old artifacts
                    File ad = b.getArtifactsDir();
                    if(ad.exists()) {
                        listener.getLogger().println(Messages.ArtifactArchiver_DeletingOld(b.getDisplayName()));
                        try {
                            Util.deleteRecursive(ad);
                        } catch (IOException e) {
                            e.printStackTrace(listener.error(e.getMessage()));
                        }
                    }
                }
                b = b.getPreviousBuild();
            }
        }
        return true;
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479898847/fstmerge_var2_1128220422595534400

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/tasks/ArtifactArchiver.java
Conflict type: LineBasedMCFd
Conflict body: 
@Override
	public boolean perform(AbstractBuild build, Launcher launcher,
			BuildListener listener) throws InterruptedException, IOException {
		listener.getLogger().println(Messages.JUnitResultArchiver_Recording());
		TestResultAction action;
		
		final String testResults = build.getEnvironment(listener).expand(this.testResults);

		try {
			TestResult result = parse(testResults, build, launcher, listener);

			try {
                // TODO can the build argument be omitted now, or is it used prior to the call to addAction?
				action = new TestResultAction(build, result, listener);
			} catch (NullPointerException npe) {
				throw new AbortException(Messages.JUnitResultArchiver_BadXML(testResults));
			}
            result.freeze(action);
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479899065/fstmerge_base_1082479330196981178
			if (result.getPassCount() == 0 && result.getFailCount() == 0)
=======
			if (result.isEmpty()) {
			    // most likely a configuration error in the job - e.g. false pattern to match the JUnit result files
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479899065/fstmerge_var2_3910265002954688795
				throw new AbortException(Messages.JUnitResultArchiver_ResultIsEmpty());
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479899065/fstmerge_base_1082479330196981178
=======
			}
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479899065/fstmerge_var2_3910265002954688795

            // TODO: Move into JUnitParser [BUG 3123310]
			List<Data> data = new ArrayList<Data>();
			if (testDataPublishers != null) {
				for (TestDataPublisher tdp : testDataPublishers) {
					Data d = tdp.getTestData(build, launcher, listener, result);
					if (d != null) {
						data.add(d);
					}
				}
			}

			action.setData(data);
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479899065/fstmerge_var1_2247029475407165037

			CHECKPOINT.block(listener, getDescriptor().getDisplayName());

||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479899065/fstmerge_base_1082479330196981178

			CHECKPOINT.block();

=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479899065/fstmerge_var2_3910265002954688795
		} catch (AbortException e) {
			if (build.getResult() == Result.FAILURE)
				// most likely a build failed before it gets to the test phase.
				// don't report confusing error message.
				return true;

			listener.getLogger().println(e.getMessage());
			build.setResult(Result.FAILURE);
			return true;
		} catch (IOException e) {
			e.printStackTrace(listener.error("Failed to archive test reports"));
			build.setResult(Result.FAILURE);
			return true;
		}

		build.addAction(action);

		if (action.getResult().getFailCount() > 0)
			build.setResult(Result.UNSTABLE);

		return true;
	}

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/tasks/junit/JUnitResultArchiver.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479899524/fstmerge_var1_8091668779757193678
public String getFullName() {
    	return className+'.'+getName();
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479899524/fstmerge_base_630957556236398087
public String getFullName() {
        return className+'.'+getName();
=======
@Override
    public String getFullName() {
    	return className+'.'+getName();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479899524/fstmerge_var2_3698426005480265588
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/tasks/junit/CaseResult.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479900021/fstmerge_var1_4707542482170305614
public String getFullName() {
    	return getParent().getName() + "." + className;
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479900021/fstmerge_base_2262578488584220981
public String getFullName() {
    	return getParent().getDisplayName() + "." + className;
=======
@Override
    public String getFullName() {
    	return getParent().getName() + "." + className;
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479900021/fstmerge_var2_3692761335054698812
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/tasks/junit/ClassResult.java
Conflict type: LineBasedMCFd
Conflict body: 
private synchronized void update() {
        Jenkins hudson = Jenkins.getInstance();
        lastSuggestedReview = System.currentTimeMillis();

        // clean up the cancelled launch activity, then count the # of executors that we are about to bring up.
        int plannedCapacitySnapshot = 0;
        for (Iterator<PlannedNode> itr = pendingLaunches.iterator(); itr.hasNext();) {
            PlannedNode f = itr.next();
            if(f.future.isDone()) {
                try {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479901215/fstmerge_var1_6536042764553422533
                    Node node = f.future.get();
                    for (CloudProvisioningListener cl : CloudProvisioningListener.all())
                        cl.onComplete(f,node);

                    hudson.addNode(node);
                    LOGGER.info(f.displayName+" provisioning successfully completed. We have now "+hudson.getComputers().length+" computer(s)");
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479901215/fstmerge_base_8238953562525190242
                    hudson.addNode(f.future.get());
                    LOGGER.info(f.displayName+" provisioning successfully completed. We have now "+hudson.getComputers().length+" computer(s)");
=======
                    Node node = f.future.get();
                    for (CloudProvisioningListener cl : CloudProvisioningListener.all())
                        cl.onComplete(f,node);

                    hudson.addNode(node);
                    LOGGER.info(f.displayName+" provisioningE successfully completed. We have now "+hudson.getComputers().length+" computer(s)");
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479901215/fstmerge_var2_2752489099729460886
                } catch (InterruptedException e) {
                    throw new AssertionError(e); // since we confirmed that the future is already done
                } catch (ExecutionException e) {
                    LOGGER.log(Level.WARNING, "Provisioned slave "+f.displayName+" failed to launch",e.getCause());
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479901215/fstmerge_base_8238953562525190242
=======
                    for (CloudProvisioningListener cl : CloudProvisioningListener.all())
                        cl.onFailure(f,e.getCause());
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479901215/fstmerge_var2_2752489099729460886
                } catch (IOException e) {
                    LOGGER.log(Level.WARNING, "Provisioned slave "+f.displayName+" failed to launch",e);
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479901215/fstmerge_base_8238953562525190242
=======
                    for (CloudProvisioningListener cl : CloudProvisioningListener.all())
                        cl.onFailure(f,e);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479901215/fstmerge_var2_2752489099729460886
                }

                f.spent();

                itr.remove();
            } else
                plannedCapacitySnapshot += f.numExecutors;
        }
        float plannedCapacity = plannedCapacitySnapshot;
        plannedCapacitiesEMA.update(plannedCapacity);

        /*
            Here we determine how many additional slaves we need to keep up with the load (if at all),
            which involves a simple math.

            Broadly speaking, first we check that all the executors are fully utilized before attempting
            to start any new slave (this also helps to ignore the temporary gap between different numbers,
            as changes in them are not necessarily synchronized --- for example, there's a time lag between
            when a slave launches (thus bringing the planned capacity down) and the time when its executors
            pick up builds (thus bringing the queue length down.)

            Once we confirm that, we compare the # of buildable items against the additional slaves
            that are being brought online. If we have more jobs than our executors can handle, we'll launch a new slave.

            So this computation involves three stats:

              1. # of idle executors
              2. # of jobs that are starving for executors
              3. # of additional slaves being provisioned (planned capacities.)

            To ignore a temporary surge/drop, we make conservative estimates on each one of them. That is,
            we take the current snapshot value, and we take the current exponential moving average (EMA) value,
            and use the max/min.

            This is another measure to be robust against temporary surge/drop in those indicators, and helps
            us avoid over-reacting to stats.

            If we only use the snapshot value or EMA value, tests confirmed that the gap creates phantom
            excessive loads and Hudson ends up firing excessive capacities. In a static system, over the time
            EMA and the snapshot value becomes the same, so this makes sure that in a long run this conservative
            estimate won't create a starvation.
         */

        int idleSnapshot = stat.computeIdleExecutors();
        int totalSnapshot = stat.computeTotalExecutors();
        boolean needSomeWhenNoneAtAll = (idleSnapshot==0) && (totalSnapshot + plannedCapacitySnapshot == 0) && (stat.computeQueueLength() > 0);
        float idle = Math.max(stat.getLatestIdleExecutors(TIME_SCALE), idleSnapshot);
        if(idle<MARGIN || needSomeWhenNoneAtAll) {
            // make sure the system is fully utilized before attempting any new launch.

            // this is the amount of work left to be done
            float qlen = Math.min(stat.queueLength.getLatest(TIME_SCALE), stat.computeQueueLength());

            // ... and this is the additional executors we've already provisioned.
            plannedCapacity = Math.max(plannedCapacitiesEMA.getLatest(TIME_SCALE),plannedCapacity);

            float excessWorkload = qlen - plannedCapacity;
            if (needSomeWhenNoneAtAll && excessWorkload < 1) {
                // in this specific exceptional case we should just provision right now
                // the exponential smoothing will delay the build unnecessarily
                excessWorkload = 1;
            }
            float m = calcThresholdMargin(totalSnapshot);
            if(excessWorkload>1-m) {// and there's more work to do...
                LOGGER.fine("Excess workload "+excessWorkload+" detected. (planned capacity="+plannedCapacity+",Qlen="+qlen+",idle="+idle+"&"+idleSnapshot+",total="+totalSnapshot+"m,="+m+")");
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479901215/fstmerge_base_8238953562525190242
=======

            CLOUD:
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479901215/fstmerge_var2_2752489099729460886
                for( Cloud c : hudson.clouds ) {
                    if(excessWorkload<0)    break;  // enough slaves allocated

                    // Make sure this cloud actually can provision for this label.
                    if (c.canProvision(label)) {
                        // provisioning a new node should be conservative --- for example if exceeWorkload is 1.4,
                        // we don't want to allocate two nodes but just one.
                        // OTOH, because of the exponential decay, even when we need one slave, excess workload is always
                        // something like 0.95, in which case we want to allocate one node.
                        // so the threshold here is 1-MARGIN, and hence floor(excessWorkload+MARGIN) is needed to handle this.
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479901215/fstmerge_base_8238953562525190242
                        
                        Collection<PlannedNode> additionalCapacities = c.provision(label, (int)Math.round(Math.floor(excessWorkload+m)));
=======

                        int workloadToProvision = (int) Math.round(Math.floor(excessWorkload + m));

                        for (CloudProvisioningListener cl : CloudProvisioningListener.all())
                            // consider displaying reasons in a future cloud ux
                            if (cl.canProvision(c,label,workloadToProvision) != null)
                                break CLOUD;

                        Collection<PlannedNode> additionalCapacities = c.provision(label, workloadToProvision);

                        for (CloudProvisioningListener cl : CloudProvisioningListener.all())
                            cl.onStarted(c, label, additionalCapacities);

>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479901215/fstmerge_var2_2752489099729460886
                        for (PlannedNode ac : additionalCapacities) {
                            excessWorkload -= ac.numExecutors;
                            LOGGER.info("Started provisioning "+ac.displayName+" from "+c.name+" with "+ac.numExecutors+" executors. Remaining excess workload:"+excessWorkload);
                        }
                        pendingLaunches.addAll(additionalCapacities);
                    }
                }
            }
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/slaves/NodeProvisioner.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479903261/fstmerge_var1_8151309710422047549
public FilePath performInstallation(ToolInstallation tool, Node node, TaskListener log) throws IOException, InterruptedException {
        FilePath dir = preferredLocation(tool, node);
        // TODO support Windows batch scripts, Unix scripts with interpreter line, etc. (see CommandInterpreter subclasses)
        FilePath script = dir.createTextTempFile("hudson", ".sh", command);
        try {
            String[] cmd = {"sh", "-e", script.getRemote()};
            int r = node.createLauncher(log).launch().cmds(cmd).stdout(log).pwd(dir).join();
            if (r != 0) {
                throw new IOException("Command returned status " + r);
            }
        } finally {
            script.delete();
        }
        return dir.child(toolHome);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479903261/fstmerge_base_9074626554977032548
public FilePath performInstallation(ToolInstallation tool, Node node, TaskListener log) throws IOException, InterruptedException {
        FilePath dir = preferredLocation(tool, node);
        // XXX support Windows batch scripts, Unix scripts with interpreter line, etc. (see CommandInterpreter subclasses)
        FilePath script = dir.createTextTempFile("hudson", ".sh", command);
        try {
            String[] cmd = {"sh", "-e", script.getRemote()};
            int r = node.createLauncher(log).launch().cmds(cmd).stdout(log).pwd(dir).join();
            if (r != 0) {
                throw new IOException("Command returned status " + r);
            }
        } finally {
            script.delete();
        }
        return dir.child(toolHome);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479903261/fstmerge_var2_6829016695168247642

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/tools/CommandInstaller.java
Conflict type: LineBasedMCFd
Conflict body: 
public void install(Launcher launcher, Platform p, FileSystem fs, TaskListener log, String expectedLocation, String jdkBundle) throws IOException, InterruptedException {
        PrintStream out = log.getLogger();

        out.println("Installing "+ jdkBundle);
        switch (p) {
        case LINUX:
        case SOLARIS:
            // JDK on Unix up to 6 was distributed as shell script installer, but in JDK7 it switched to a plain tgz.
            // so check if the file is gzipped, and if so, treat it accordingly
            byte[] header = new byte[2];
            {
                DataInputStream in = new DataInputStream(fs.read(jdkBundle));
                try {
                    in.readFully(header);
                } finally {
                    IOUtils.closeQuietly(in);
                }
            }

            ProcStarter starter;
            if (header[0]==0x1F && header[1]==(byte)0x8B) {// gzip
                starter = launcher.launch().cmds("tar", "xvzf", jdkBundle);
            } else {
                fs.chmod(jdkBundle,0755);
                starter = launcher.launch().cmds(jdkBundle, "-noregister");
            }

            int exit = starter
                    .stdin(new ByteArrayInputStream("yes".getBytes())).stdout(out)
                    .pwd(new FilePath(launcher.getChannel(), expectedLocation)).join();
            if (exit != 0)
                throw new AbortException(Messages.JDKInstaller_FailedToInstallJDK(exit));

            // JDK creates its own sub-directory, so pull them up
            List<String> paths = fs.listSubDirectories(expectedLocation);
            for (Iterator<String> itr = paths.iterator(); itr.hasNext();) {
                String s =  itr.next();
                if (!s.matches("j(2s)?dk.*"))
                    itr.remove();
            }
            if(paths.size()!=1)
                throw new AbortException("Failed to find the extracted JDKs: "+paths);

            // remove the intermediate directory
            fs.pullUp(expectedLocation+'/'+paths.get(0),expectedLocation);
            break;
        case WINDOWS:
            /*
                Windows silent installation is full of bad know-how.

                On Windows, command line argument to a process at the OS level is a single string,
                not a string array like POSIX. When we pass arguments as string array, JRE eventually
                turn it into a single string with adding quotes to "the right place". Unfortunately,
                with the strange argument layout of InstallShield (like /v/qn" INSTALLDIR=foobar"),
                it appears that the escaping done by JRE gets in the way, and prevents the installation.
                Presumably because of this, my attempt to use /q/vn" INSTALLDIR=foo" didn't work with JDK5.

                I tried to locate exactly how InstallShield parses the arguments (and why it uses
                awkward option like /qn, but couldn't find any. Instead, experiments revealed that
                "/q/vn ARG ARG ARG" works just as well. This is presumably due to the Visual C++ runtime library
                (which does single string -> string array conversion to invoke the main method in most Win32 process),
                and this consistently worked on JDK5 and JDK4.

                Some of the official documentations are available at
                - http://java.sun.com/j2se/1.5.0/sdksilent.html
                - http://java.sun.com/j2se/1.4.2/docs/guide/plugin/developer_guide/silent.html
             */
            String logFile = jdkBundle+".install.log";

            expectedLocation = expectedLocation.trim();
            if (expectedLocation.endsWith("\\")) {
                // Prevent a trailing slash from escaping quotes
                expectedLocation = expectedLocation.substring(0, expectedLocation.length() - 1);
            }
            ArgumentListBuilder args = new ArgumentListBuilder();
            assert (new File(expectedLocation).exists()) : expectedLocation
                    + " must exist, otherwise /L will cause the installer to fail with error 1622";
            if (isJava15() || isJava14()) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479903285/fstmerge_var1_6203552433053432036
                args.add("/s","/v/qn REBOOT=ReallySuppress INSTALLDIR=\""+ expectedLocation +"\" /L \""+logFile+"\"");
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479903285/fstmerge_base_375332565591001728
                args.add("/s","/v/qn REBOOT=ReallySuppress INSTALLDIR=\\\""+ expectedLocation +"\\\" /L \\\""+logFile+"\\\"");
=======
                // Installer uses InstallShield.
                args.add("CMD.EXE", "/C");

                // CMD.EXE /C must be followed by a single parameter (do not split it!)
                args.add(jdkBundle + " /s /v\"/qn REBOOT=ReallySuppress INSTALLDIR=\\\""
                        + expectedLocation + "\\\" /L \\\"" + expectedLocation
                        + "\\jdk.exe.install.log\\\"\"");
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479903285/fstmerge_var2_2259227436496528442
            } else {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479903285/fstmerge_var1_6203552433053432036
                // modern version supports arguments in more sane format.
                args.add("/s","/v","/qn","/L","\""+logFile+"\"","REBOOT=ReallySuppress","INSTALLDIR=\""+ expectedLocation+"\"");
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479903285/fstmerge_base_375332565591001728
                // modern version supports arguments in more sane format.
                args.add("/s","/v","/qn","/L","\\\""+logFile+"\\\"","REBOOT=ReallySuppress","INSTALLDIR=\\\""+ expectedLocation+"\\\"");
=======
                // Installed uses Windows Installer (MSI)
                args.add(jdkBundle, "/s");

                // Create a private JRE by omitting "PublicjreFeature"
                // @see http://docs.oracle.com/javase/7/docs/webnotes/install/windows/jdk-installation-windows.html#jdk-silent-installation
                args.add("ADDLOCAL=\"ToolsFeature\"");

                args.add("REBOOT=ReallySuppress", "INSTALLDIR=" + expectedLocation,
                        "/L \\\"" + expectedLocation + "\\jdk.exe.install.log\\\"");
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479903285/fstmerge_var2_2259227436496528442
            }
            int r = launcher.launch().cmds(args).stdout(out)
                    .pwd(new FilePath(launcher.getChannel(), expectedLocation)).join();
            if (r != 0) {
                out.println(Messages.JDKInstaller_FailedToInstallJDK(r));
                // log file is in UTF-16
                InputStreamReader in = new InputStreamReader(fs.read(logFile), "UTF-16");
                try {
                    IOUtils.copy(in,new OutputStreamWriter(out));
                } finally {
                    in.close();
                }
                throw new AbortException();
            }

            fs.delete(logFile);

            break;
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/tools/JDKInstaller.java
Conflict type: LineBasedMCFd
Conflict body: 
private void process(File f) {
            if (f.isFile()) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479903641/fstmerge_var1_2761177960840151287
                if(Functions.isMustangOrAbove())
                    f.setExecutable(true, false);
                else {
                    try {
                        GNUCLibrary.LIBC.chmod(f.getAbsolutePath(),0755);
                    } catch (LinkageError e) {
                        // if JNA is unavailable, fall back.
                        // we still prefer to try JNA first as PosixAPI supports even smaller platforms.
                        PosixAPI.jnr().chmod(f.getAbsolutePath(),0755);
                    }
                }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479903641/fstmerge_base_7838022641754576487
                if(Functions.isMustangOrAbove())
                    f.setExecutable(true, false);
                else {
                    try {
                        GNUCLibrary.LIBC.chmod(f.getAbsolutePath(),0755);
                    } catch (LinkageError e) {
                        // if JNA is unavailable, fall back.
                        // we still prefer to try JNA first as PosixAPI supports even smaller platforms.
                        PosixAPI.get().chmod(f.getAbsolutePath(),0755);
                    }
                }
=======
                f.setExecutable(true, false);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479903641/fstmerge_var2_6876625311534778471
            } else {
                File[] kids = f.listFiles();
                if (kids != null) {
                    for (File kid : kids) {
                        process(kid);
                    }
                }
            }
        }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/tools/ZipExtractionInstaller.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479903867/fstmerge_var1_500038808560190588
private static void execute(GroovyCodeSource initScript) {
        GroovyShell shell = new GroovyShell(Jenkins.getInstance().getPluginManager().uberClassLoader);
        try {
            shell.evaluate(initScript);
        } catch (RuntimeException x) {
            LOGGER.log(Level.WARNING, "Failed to run script " + initScript.getName(), x);
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479903867/fstmerge_base_5655767017787237263
private static void execute(GroovyCodeSource initScript) throws IOException {
        GroovyShell shell = new GroovyShell(Jenkins.getInstance().getPluginManager().uberClassLoader);
        shell.evaluate(initScript);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479903867/fstmerge_var2_1126483035503514282

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/init/impl/GroovyInitScript.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479903871/fstmerge_var1_879131295612236513
@Initializer
    public static void init(final Jenkins j) throws IOException {
        CompressionFilter.setUncaughtExceptionHandler(j.servletContext, new UncaughtExceptionHandler() {
            @Override
            public void reportException(Throwable e, ServletContext context, HttpServletRequest req, HttpServletResponse rsp) throws ServletException, IOException {
                req.setAttribute("javax.servlet.error.exception",e);
                WebApp.get(j.servletContext).getSomeStapler()
                        .invoke(req,rsp, Jenkins.getInstance(), "/oops");
            }
        });
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479903871/fstmerge_base_4212295101278420156
=======
@Initializer
    public static void init(final Jenkins j) throws IOException {
        CompressionFilter.setUncaughtExceptionHandler(j.servletContext, new UncaughtExceptionHandler() {
            @Override
            public void reportException(Throwable e, ServletContext context, HttpServletRequest req, HttpServletResponse rsp) throws ServletException, IOException {
                req.setAttribute("javax.servlet.error.exception",e);
                try {
                    WebApp.get(j.servletContext).getSomeStapler()
                            .invoke(req,rsp, Jenkins.getInstance(), "/oops");
                } catch (ServletException x) {
                    if (!Stapler.isSocketException(x)) {
                        throw x;
                    }
                } catch (IOException x) {
                    if (!Stapler.isSocketException(x)) {
                        throw x;
                    }
                }
            }
        });
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479903871/fstmerge_var2_2729668405693839777

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/init/impl/InstallUncaughtExceptionHandler.java
Conflict type: LineBasedMCFd
Conflict body: 
~~FSTMerge~~ public static final DiskSpaceMonitorDescriptor DESCRIPTOR = new DiskSpaceMonitorDescriptor() {
        public String getDisplayName() {
            return Messages.DiskSpaceMonitor_DisplayName();
        }

        @Override
        protected Callable<DiskSpace, IOException> createCallable(Computer c) {
            FilePath p = c.getNode().getRootPath();
            if(p==null) return null;

            return p.asCallableWith(new GetUsableSpace());
        }
    }; ##FSTMerge## public static final DiskSpaceMonitorDescriptor DESCRIPTOR = new DiskSpaceMonitorDescriptor() {
        public String getDisplayName() {
            return Messages.DiskSpaceMonitor_DisplayName();
        }

        protected DiskSpace getFreeSpace(Computer c) throws IOException, InterruptedException {
            FilePath p = c.getNode().getRootPath();
            if(p==null) return null;

            return p.act(new GetUsableSpace());
        }
    }; ##FSTMerge## public static final DiskSpaceMonitorDescriptor DESCRIPTOR = new DiskSpaceMonitorDescriptor() {
        public String getDisplayName() {
            return Messages.DiskSpaceMonitor_DisplayName();
        }

        @Override
        protected Callable<DiskSpace, IOException> createCallable(Computer c) {
            Node node = c.getNode();
            if (node == null) return null;
            
            FilePath p = node.getRootPath();
            if(p==null) return null;

            return p.asCallableWith(new GetUsableSpace());
        }
    };
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/node_monitors/DiskSpaceMonitor.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479904125/fstmerge_var1_6894240928127879333
public String getTimestampString() {
        if (record==null)
            return Messages.AbstractNodeMonitorDescriptor_NoDataYet();
//        return Messages.AbstractNodeMonitorDescriptor_DataObtainedSometimeAgo(
//                Util.getTimeSpanString(System.currentTimeMillis()-record.timestamp));
        return Util.getTimeSpanString(System.currentTimeMillis()-record.timestamp);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479904125/fstmerge_base_4660534155195698882
=======
public String getTimestampString() {
        if (record==null)
            return Messages.AbstractNodeMonitorDescriptor_NoDataYet();
//        return Messages.AbstractNodeMonitorDescriptor_DataObtainedSometimeAgo(
//                Util.getTimeSpanString(System.currentTimeMillis()-record.timestamp));
        return Util.getPastTimeString(System.currentTimeMillis()-record.timestamp);
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479904125/fstmerge_var2_7062296867738788284

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/node_monitors/AbstractNodeMonitorDescriptor.java
Conflict type: LineBasedMCFd
Conflict body: 
@Override
        public void run() {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479904156/fstmerge_base_987320546945402372
            long startTime = System.currentTimeMillis();
            String oldName = getName();
=======
            try {
                long startTime = System.currentTimeMillis();
                String oldName = getName();
                data=monitor();
                setName(oldName);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479904156/fstmerge_var2_2266735711585542996

<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479904156/fstmerge_base_987320546945402372
            for( Computer c : Jenkins.getInstance().getComputers() ) {
                try {
                    setName("Monitoring "+c.getDisplayName()+" for "+getDisplayName());
=======
                timestamp = System.currentTimeMillis();
                record = this;
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479904156/fstmerge_var2_2266735711585542996

<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479904156/fstmerge_var1_5839436659830943655
                LOGGER.fine("Node monitoring "+getDisplayName()+" completed in "+(System.currentTimeMillis()-startTime)+"ms");
            } catch (Throwable t) {
                LOGGER.log(Level.WARNING, "Unexpected node monitoring termination: "+getDisplayName(),t);
            } finally {
                synchronized(AbstractNodeMonitorDescriptor.this) {
                    if (inProgress==this)
                        inProgress = null;
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479904156/fstmerge_base_987320546945402372
                    if(c.getChannel()==null)
                        data.put(c,null);
                    else
                        data.put(c,monitor(c));
                } catch (IOException e) {
                    LOGGER.log(Level.WARNING, "Failed to monitor "+c.getDisplayName()+" for "+getDisplayName(), e);
                } catch (InterruptedException e) {
                    LOGGER.log(Level.WARNING,"Node monitoring "+c.getDisplayName()+" for "+getDisplayName()+" aborted.",e);
=======
                LOGGER.log(Level.FINE, "Node monitoring {0} completed in {1}ms", new Object[] {getDisplayName(), System.currentTimeMillis()-startTime});
            } catch (InterruptedException x) {
                // interrupted by new one, fine
            } catch (Throwable t) {
                LOGGER.log(Level.WARNING, "Unexpected node monitoring termination: "+getDisplayName(),t);
            } finally {
                synchronized(AbstractNodeMonitorDescriptor.this) {
                    if (inProgress==this)
                        inProgress = null;
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479904156/fstmerge_var2_2266735711585542996
                }
            }
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479904156/fstmerge_base_987320546945402372
            setName(oldName);

            synchronized(AbstractNodeMonitorDescriptor.this) {
                assert inProgress==this;
                inProgress = null;
                record = this;
            }

            LOGGER.fine("Node monitoring "+getDisplayName()+" completed in "+(System.currentTimeMillis()-startTime)+"ms");
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479904156/fstmerge_var2_2266735711585542996
        }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/node_monitors/AbstractNodeMonitorDescriptor.java
Conflict type: LineBasedMCFd
Conflict body: 
~~FSTMerge~~ public static final DiskSpaceMonitorDescriptor DESCRIPTOR = new DiskSpaceMonitorDescriptor() {
        public String getDisplayName() {
            return Messages.TemporarySpaceMonitor_DisplayName();
        }

        @Override
        protected Callable<DiskSpace,IOException> createCallable(Computer c) {
            FilePath p = c.getNode().getRootPath();
            if(p==null) return null;

            return p.asCallableWith(new GetTempSpace());
        }
    }; ##FSTMerge## public static final DiskSpaceMonitorDescriptor DESCRIPTOR = new DiskSpaceMonitorDescriptor() {
        public String getDisplayName() {
            return Messages.TemporarySpaceMonitor_DisplayName();
        }

        protected DiskSpace getFreeSpace(Computer c) throws IOException, InterruptedException {
            FilePath p = c.getNode().getRootPath();
            if(p==null) return null;

            return p.act(new GetTempSpace());
        }
    }; ##FSTMerge## public static final DiskSpaceMonitorDescriptor DESCRIPTOR = new DiskSpaceMonitorDescriptor() {
        public String getDisplayName() {
            return Messages.TemporarySpaceMonitor_DisplayName();
        }

        @Override
        protected Callable<DiskSpace,IOException> createCallable(Computer c) {
            Node node = c.getNode();
            if (node == null) return null;
            
            FilePath p = node.getRootPath();
            if(p==null) return null;

            return p.asCallableWith(new GetTempSpace());
        }
    };
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/node_monitors/TemporarySpaceMonitor.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479904437/fstmerge_base_7240800077529712208
public String checkSanity() {
        for( int i=0; i<5; i++ ) {
=======
public @CheckForNull String checkSanity() {
        OUTER: for (int i = 0; i < 5; i++) {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479904437/fstmerge_var2_4990223151777539468
            long bitMask = (i<4)?bits[i]:(long)dayOfWeek;
            for( int j=BaseParser.LOWER_BOUNDS[i]; j<=BaseParser.UPPER_BOUNDS[i]; j++ ) {
                if(!checkBits(bitMask,j)) {
                    // this rank has a sparse entry.
                    // if we have a sparse rank, one of them better be the left-most.
                    if(i>0)
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479904437/fstmerge_base_7240800077529712208
                        return Messages.CronTab_do_you_really_mean_every_minute_when_you(spec, "0 " + spec.substring(spec.indexOf(' ')+1));
=======
                        return Messages.CronTab_do_you_really_mean_every_minute_when_you(spec, "H " + spec.substring(spec.indexOf(' ') + 1));
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479904437/fstmerge_var2_4990223151777539468
                    // once we find a sparse rank, upper ranks don't matter
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479904437/fstmerge_base_7240800077529712208
                    return null;
=======
                    break OUTER;
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479904437/fstmerge_var2_4990223151777539468
                }
            }
        }

<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479904437/fstmerge_var1_3637028813790468213
        String hashified = hashify(spec);
        if (hashified != null) {
            return Messages.CronTab_spread_load_evenly_by_using_rather_than_(hashified, spec);
        }

||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479904437/fstmerge_base_7240800077529712208
=======
        int daysOfMonth = 0;
        for (int i = 1; i < 31; i++) {
            if (checkBits(bits[2], i)) {
                daysOfMonth++;
            }
        }
        if (daysOfMonth > 5 && daysOfMonth < 28) { // a bit arbitrary
            return Messages.CronTab_short_cycles_in_the_day_of_month_field_w();
        }

        String hashified = hashify(spec);
        if (hashified != null) {
            return Messages.CronTab_spread_load_evenly_by_using_rather_than_(hashified, spec);
        }

>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479904437/fstmerge_var2_4990223151777539468
        return null;
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/scheduler/CronTab.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479904879/fstmerge_var1_1447396308412498865
@Override
    public Result run(MatrixBuildExecution execution) throws InterruptedException, IOException {

        Collection<MatrixConfiguration> touchStoneConfigurations = new HashSet<MatrixConfiguration>();
        Collection<MatrixConfiguration> delayedConfigurations = new HashSet<MatrixConfiguration>();

        filterConfigurations(
                execution,
                touchStoneConfigurations,
                delayedConfigurations
        );

        if (notifyStartBuild(execution.getAggregators())) return Result.FAILURE;

        if (sorter != null) {
            touchStoneConfigurations = createTreeSet(touchStoneConfigurations, sorter);
            delayedConfigurations    = createTreeSet(delayedConfigurations, sorter);
        }

        if(!runSequentially)
            for(MatrixConfiguration c : touchStoneConfigurations)
                scheduleConfigurationBuild(execution, c);

        Result r = Result.SUCCESS;
        for (MatrixConfiguration c : touchStoneConfigurations) {
            if(runSequentially)
                scheduleConfigurationBuild(execution, c);
            MatrixRun run = waitForCompletion(execution, c);
            notifyEndBuild(run,execution.getAggregators());
            r = r.combine(getResult(run));
        }

        PrintStream logger = execution.getListener().getLogger();

        if (touchStoneResultCondition != null && r.isWorseThan(touchStoneResultCondition)) {
            logger.printf("Touchstone configurations resulted in %s, so aborting...%n", r);
            return r;
        }
        
        if(!runSequentially)
            for(MatrixConfiguration c : delayedConfigurations)
                scheduleConfigurationBuild(execution, c);

        for (MatrixConfiguration c : delayedConfigurations) {
            if(runSequentially)
                scheduleConfigurationBuild(execution, c);
            MatrixRun run = waitForCompletion(execution, c);
            notifyEndBuild(run,execution.getAggregators());
            logger.println(Messages.MatrixBuild_Completed(ModelHyperlinkNote.encodeTo(c), getResult(run)));
            r = r.combine(getResult(run));
        }

        return r;
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479904879/fstmerge_base_3063616066821166080
@Override
    public Result run(MatrixBuildExecution execution) throws InterruptedException, IOException {
        MatrixBuild build = execution.getBuild();
        MatrixProject p = execution.getProject();
        PrintStream logger = execution.getListener().getLogger();

        Collection<MatrixConfiguration> touchStoneConfigurations = new HashSet<MatrixConfiguration>();
        Collection<MatrixConfiguration> delayedConfigurations = new HashSet<MatrixConfiguration>();
        for (MatrixConfiguration c: execution.getActiveConfigurations()) {
            if (!MatrixBuildListener.buildConfiguration(build, c))
                continue; // skip rebuild
            if (touchStoneCombinationFilter != null && c.getCombination().evalGroovyExpression(p.getAxes(), getTouchStoneCombinationFilter())) {
                touchStoneConfigurations.add(c);
            } else {
                delayedConfigurations.add(c);
            }
        }

        if (notifyStartBuild(execution.getAggregators())) return Result.FAILURE;

        if (sorter != null) {
            touchStoneConfigurations = createTreeSet(touchStoneConfigurations, sorter);
            delayedConfigurations    = createTreeSet(delayedConfigurations,sorter);
        }

        if(!runSequentially)
            for(MatrixConfiguration c : touchStoneConfigurations)
                scheduleConfigurationBuild(execution, c);

        Result r = Result.SUCCESS;
        for (MatrixConfiguration c : touchStoneConfigurations) {
            if(runSequentially)
                scheduleConfigurationBuild(execution, c);
            MatrixRun run = waitForCompletion(execution, c);
            notifyEndBuild(run,execution.getAggregators());
            r = r.combine(getResult(run));
        }
        
        if (touchStoneResultCondition != null && r.isWorseThan(touchStoneResultCondition)) {
            logger.printf("Touchstone configurations resulted in %s, so aborting...%n", r);
            return r;
        }
        
        if(!runSequentially)
            for(MatrixConfiguration c : delayedConfigurations)
                scheduleConfigurationBuild(execution, c);

        for (MatrixConfiguration c : delayedConfigurations) {
            if(runSequentially)
                scheduleConfigurationBuild(execution, c);
            MatrixRun run = waitForCompletion(execution, c);
            notifyEndBuild(run,execution.getAggregators());
            logger.println(Messages.MatrixBuild_Completed(ModelHyperlinkNote.encodeTo(c), getResult(run)));
            r = r.combine(getResult(run));
        }

        return r;
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479904879/fstmerge_var2_1401422603603103229

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/matrix/DefaultMatrixExecutionStrategyImpl.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479904905/fstmerge_var1_8062595709957829100
private MatrixRun waitForCompletion(MatrixBuildExecution exec, MatrixConfiguration c) throws InterruptedException, IOException {
        BuildListener listener = exec.getListener();
        String whyInQueue = "";
        long startTime = System.currentTimeMillis();

        // wait for the completion
        int appearsCancelledCount = 0;
        while(true) {
            MatrixRun b = c.getBuildByNumber(exec.getBuild().getNumber());

            // two ways to get beyond this. one is that the build starts and gets done,
            // or the build gets cancelled before it even started.
            if(b!=null && !b.isBuilding()) {
                Result buildResult = b.getResult();
                if(buildResult!=null)
                    return b;
            }
            Queue.Item qi = c.getQueueItem();
            if(b==null && qi==null)
                appearsCancelledCount++;
            else
                appearsCancelledCount = 0;

            if(appearsCancelledCount>=5) {
                // there's conceivably a race condition in computating b and qi, as their computation
                // are not synchronized. There are indeed several reports of Hudson incorrectly assuming
                // builds being cancelled. See
                // http://www.nabble.com/Master-slave-problem-tt14710987.html and also
                // http://www.nabble.com/Anyone-using-AccuRev-plugin--tt21634577.html#a21671389
                // because of this, we really make sure that the build is cancelled by doing this 5
                // times over 5 seconds
                listener.getLogger().println(Messages.MatrixBuild_AppearsCancelled(ModelHyperlinkNote.encodeTo(c)));
                return null;
            }

            if(qi!=null) {
                // if the build seems to be stuck in the queue, display why
                String why = qi.getWhy();
                if(why != null && !why.equals(whyInQueue) && System.currentTimeMillis()-startTime>5000) {
                    listener.getLogger().print("Configuration " + ModelHyperlinkNote.encodeTo(c)+" is still in the queue: ");
                    qi.getCauseOfBlockage().print(listener); //this is still shown on the same line
                    whyInQueue = why;
                }
            }
            
            Thread.sleep(1000);
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479904905/fstmerge_base_8297093048964179642
private MatrixRun waitForCompletion(MatrixBuildExecution exec, MatrixConfiguration c) throws InterruptedException, IOException {
        BuildListener listener = exec.getListener();
        String whyInQueue = "";
        long startTime = System.currentTimeMillis();

        // wait for the completion
        int appearsCancelledCount = 0;
        while(true) {
            MatrixRun b = c.getBuildByNumber(exec.getBuild().getNumber());

            // two ways to get beyond this. one is that the build starts and gets done,
            // or the build gets cancelled before it even started.
            if(b!=null && !b.isBuilding()) {
                Result buildResult = b.getResult();
                if(buildResult!=null)
                    return b;
            }
            Queue.Item qi = c.getQueueItem();
            if(b==null && qi==null)
                appearsCancelledCount++;
            else
                appearsCancelledCount = 0;

            if(appearsCancelledCount>=5) {
                // there's conceivably a race condition in computating b and qi, as their computation
                // are not synchronized. There are indeed several reports of Hudson incorrectly assuming
                // builds being cancelled. See
                // http://www.nabble.com/Master-slave-problem-tt14710987.html and also
                // http://www.nabble.com/Anyone-using-AccuRev-plugin--tt21634577.html#a21671389
                // because of this, we really make sure that the build is cancelled by doing this 5
                // times over 5 seconds
                listener.getLogger().println(Messages.MatrixBuild_AppearsCancelled(ModelHyperlinkNote.encodeTo(c)));
                return null;
            }

            if(qi!=null) {
                // if the build seems to be stuck in the queue, display why
                String why = qi.getWhy();
                if(!why.equals(whyInQueue) && System.currentTimeMillis()-startTime>5000) {
                    listener.getLogger().print("Configuration " + ModelHyperlinkNote.encodeTo(c)+" is still in the queue: ");
                    qi.getCauseOfBlockage().print(listener); //this is still shown on the same line
                    whyInQueue = why;
                }
            }
            
            Thread.sleep(1000);
        }
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479904905/fstmerge_var2_440182978171364060

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/matrix/DefaultMatrixExecutionStrategyImpl.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905030/fstmerge_var1_7406766843278257175
@Override
    protected List<Action> createTransientActions() {
        List<Action> r = super.createTransientActions();

        for (BuildStep step : builders)
            r.addAll(step.getProjectActions(this));
        for (BuildStep step : publishers)
            r.addAll(step.getProjectActions(this));
        for (BuildWrapper step : buildWrappers)
            r.addAll(step.getProjectActions(this));
        for (Trigger<?> trigger : triggers())
            r.addAll(trigger.getProjectActions());

        return r;
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905030/fstmerge_base_6350749150336779435
@Override
    protected List<Action> createTransientActions() {
        List<Action> r = super.createTransientActions();

        for (BuildStep step : builders)
            r.addAll(step.getProjectActions(this));
        for (BuildStep step : publishers)
            r.addAll(step.getProjectActions(this));
        for (BuildWrapper step : buildWrappers)
            r.addAll(step.getProjectActions(this));
        for (Trigger<?> trigger : triggers)
            r.addAll(trigger.getProjectActions());

        return r;
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905030/fstmerge_var2_3639214028239694837

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/matrix/MatrixProject.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905079/fstmerge_var1_4519177603236180088
Set<MatrixConfiguration> rebuildConfigurations(MatrixBuildExecution context) throws IOException {
        {
            // backward compatibility check to see if there's any data in the old structure
            // if so, bring them to the newer structure.
            File[] oldDirs = getConfigurationsDir().listFiles(new FileFilter() {
                public boolean accept(File child) {
                    return child.isDirectory() && !child.getName().startsWith("axis-");
                }
            });
            if(oldDirs!=null) {
                // rename the old directory to the new one
                for (File dir : oldDirs) {
                    try {
                        Combination c = Combination.fromString(dir.getName());
                        dir.renameTo(getRootDirFor(c));
                    } catch (IllegalArgumentException e) {
                        // it's not a configuration dir. Just ignore.
                    }
                }
            }
        }

        CopyOnWriteMap.Tree<Combination,MatrixConfiguration> configurations =
            new CopyOnWriteMap.Tree<Combination,MatrixConfiguration>();
        loadConfigurations(getConfigurationsDir(),configurations,Collections.<String,String>emptyMap());
        this.configurations = configurations;

        Iterable<Combination> activeCombinations;
        if (context!=null) {
            List<Set<String>> axesList = Lists.newArrayList();
            for (Axis axis : axes)
                axesList.add(Sets.newLinkedHashSet(axis.rebuild(context)));

            activeCombinations = Iterables.transform(Sets.cartesianProduct(axesList), new Function<List<String>, Combination>() {
                public Combination apply(@Nullable List<String> strings) {
                    assert strings != null;
                    return new Combination(axes, (String[]) strings.toArray(new String[0]));
                }
            });
        } else {
            activeCombinations = axes.list();
        }

        // find all active configurations
        final Set<MatrixConfiguration> active = new LinkedHashSet<MatrixConfiguration>();
        final boolean isDynamicFilter = isDynamicFilter(getCombinationFilter());

        for (Combination c : activeCombinations) {
            if(isDynamicFilter || c.evalGroovyExpression(axes,getCombinationFilter())) {
        		LOGGER.fine("Adding configuration: " + c);
	            MatrixConfiguration config = configurations.get(c);
	            if(config==null) {
	                config = new MatrixConfiguration(this,c);
                    config.onCreatedFromScratch();
	                config.save();
	                configurations.put(config.getCombination(), config);
	            }
	            active.add(config);
        	}
        }
        this.activeConfigurations = active;

        return active;
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905079/fstmerge_base_4340267059882004754
Set<MatrixConfiguration> rebuildConfigurations(MatrixBuildExecution context) throws IOException {
        {
            // backward compatibility check to see if there's any data in the old structure
            // if so, bring them to the newer structure.
            File[] oldDirs = getConfigurationsDir().listFiles(new FileFilter() {
                public boolean accept(File child) {
                    return child.isDirectory() && !child.getName().startsWith("axis-");
                }
            });
            if(oldDirs!=null) {
                // rename the old directory to the new one
                for (File dir : oldDirs) {
                    try {
                        Combination c = Combination.fromString(dir.getName());
                        dir.renameTo(getRootDirFor(c));
                    } catch (IllegalArgumentException e) {
                        // it's not a configuration dir. Just ignore.
                    }
                }
            }
        }

        CopyOnWriteMap.Tree<Combination,MatrixConfiguration> configurations =
            new CopyOnWriteMap.Tree<Combination,MatrixConfiguration>();
        loadConfigurations(getConfigurationsDir(),configurations,Collections.<String,String>emptyMap());
        this.configurations = configurations;

        Iterable<Combination> activeCombinations;
        if (context!=null) {
            List<Set<String>> axesList = Lists.newArrayList();
            for (Axis axis : axes)
                axesList.add(Sets.newLinkedHashSet(axis.rebuild(context)));

            activeCombinations = Iterables.transform(Sets.cartesianProduct(axesList), new Function<List<String>, Combination>() {
                public Combination apply(@Nullable List<String> strings) {
                    assert strings != null;
                    return new Combination(axes, (String[]) strings.toArray(new String[0]));
                }
            });
        } else {
            activeCombinations = axes.list();
        }

        // find all active configurations
        Set<MatrixConfiguration> active = new LinkedHashSet<MatrixConfiguration>();
        for (Combination c : activeCombinations) {
            if(c.evalGroovyExpression(axes,combinationFilter)) {
        		LOGGER.fine("Adding configuration: " + c);
	            MatrixConfiguration config = configurations.get(c);
	            if(config==null) {
	                config = new MatrixConfiguration(this,c);
                    config.onCreatedFromScratch();
	                config.save();
	                configurations.put(config.getCombination(), config);
	            }
	            active.add(config);
        	}
        }
        this.activeConfigurations = active;

        return active;
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905079/fstmerge_var2_2339702758105247337

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/matrix/MatrixProject.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905205/fstmerge_var1_8313314226239946418
public DescriptorImpl getDescriptor() {
        return (DescriptorImpl)Jenkins.getInstance().getDescriptorOrDie(getClass());
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905205/fstmerge_base_3587836313559341485
public DescriptorImpl getDescriptor() {
        return DESCRIPTOR;
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905205/fstmerge_var2_7716907488306902903

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/matrix/MatrixProject.java
Conflict type: LineBasedMCFd
Conflict body: 
~~FSTMerge~~ @Restricted(NoExternalUse.class)
    @Extension
    public static final DescriptorImpl DESCRIPTOR = new DescriptorImpl(); ##FSTMerge## @Extension
    public static final DescriptorImpl DESCRIPTOR = new DescriptorImpl(); ##FSTMerge##
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/matrix/MatrixProject.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905397/fstmerge_var1_1650217655494979931
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905397/fstmerge_base_8271566563038199168
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905397/fstmerge_var2_1510897355480064868

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905464/fstmerge_var1_3269200661831216686
@Override
    public String getWhyKeepLog() {
        MatrixBuild b = getNextBuild();
        if (isLinkedBy(b))
            return Messages.MatrixBuild_depends_on_this(b.getDisplayName());
        return super.getWhyKeepLog();
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905464/fstmerge_base_2875621412480714437
@Override
    public String getWhyKeepLog() {
        MatrixBuild b = getNextBuild();
        if (isLinkedBy(b))
            return b.getDisplayName()+" depends on this";
        return super.getWhyKeepLog();
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905464/fstmerge_var2_2926178450094708460

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/matrix/MatrixBuild.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905490/fstmerge_var1_7374739269650101787
protected Result doRun(BuildListener listener) throws Exception {
            MatrixProject p = getProject();
            PrintStream logger = listener.getLogger();

            // give axes a chance to rebuild themselves
            activeConfigurations = p.rebuildConfigurations(this);

            // list up aggregators
            listUpAggregators(p.getPublishers().values());
            listUpAggregators(p.getProperties().values());
            listUpAggregators(p.getBuildWrappers().values());

            axes = p.getAxes();

            try {
                return p.getExecutionStrategy().run(this);
            } catch( InterruptedException e ) {
                logger.println("Aborted");
                Executor x = Executor.currentExecutor();
                x.recordCauseOfInterruption(MatrixBuild.this, listener);
                return x.abortResult();
            } catch (AbortException e) {
                logger.println(e.getMessage());
                return Result.FAILURE;
            } finally {
                // if the build was aborted in the middle. Cancel all the configuration builds.
                Queue q = Jenkins.getInstance().getQueue();
                synchronized(q) {// avoid micro-locking in q.cancel.
                    final int n = getNumber();
                    for (MatrixConfiguration c : activeConfigurations) {
                        for (Item i : q.getItems(c)) {
                            ParentBuildAction a = i.getAction(ParentBuildAction.class);
                            if (a!=null && a.parent==getBuild()) {
                                q.cancel(i);
                                logger.println(Messages.MatrixBuild_Cancelled(ModelHyperlinkNote.encodeTo(c)));
                            }
                        }
                        MatrixRun b = c.getBuildByNumber(n);
                        if(b!=null && b.isBuilding()) {// executor can spend some time in post production state, so only cancel in-progress builds.
                            Executor exe = b.getExecutor();
                            if(exe!=null) {
                                logger.println(Messages.MatrixBuild_Interrupting(ModelHyperlinkNote.encodeTo(b)));
                                exe.interrupt();
                            }
                        }
                    }
                }
            }
        }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905490/fstmerge_base_9205408822440304934
protected Result doRun(BuildListener listener) throws Exception {
            MatrixProject p = getProject();
            PrintStream logger = listener.getLogger();

            // give axes a chance to rebuild themselves
            activeConfigurations = p.rebuildConfigurations(this);

            // list up aggregators
            listUpAggregators(p.getPublishers().values());
            listUpAggregators(p.getProperties().values());
            listUpAggregators(p.getBuildWrappers().values());

            axes = p.getAxes();

            try {
                return p.getExecutionStrategy().run(this);
            } catch( InterruptedException e ) {
                logger.println("Aborted");
                Executor x = Executor.currentExecutor();
                x.recordCauseOfInterruption(MatrixBuild.this, listener);
                return x.abortResult();
            } catch (AbortException e) {
                logger.println(e.getMessage());
                return Result.FAILURE;
            } finally {
                // if the build was aborted in the middle. Cancel all the configuration builds.
                Queue q = Jenkins.getInstance().getQueue();
                synchronized(q) {// avoid micro-locking in q.cancel.
                    final int n = getNumber();
                    for (MatrixConfiguration c : activeConfigurations) {
                        for (Item i : q.getItems(c)) {
                            if (i.getAction(ParentBuildAction.class).parent==getBuild()) {
                                q.cancel(i);
                                logger.println(Messages.MatrixBuild_Cancelled(ModelHyperlinkNote.encodeTo(c)));
                            }
                        }
                        MatrixRun b = c.getBuildByNumber(n);
                        if(b!=null && b.isBuilding()) {// executor can spend some time in post production state, so only cancel in-progress builds.
                            Executor exe = b.getExecutor();
                            if(exe!=null) {
                                logger.println(Messages.MatrixBuild_Interrupting(ModelHyperlinkNote.encodeTo(b)));
                                exe.interrupt();
                            }
                        }
                    }
                }
            }
        }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905490/fstmerge_var2_6459551598418308684

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/matrix/MatrixBuild.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905557/fstmerge_var1_7136272175662769301
@Override
    protected MatrixRun newBuild() throws IOException {
        List<Action> actions = Executor.currentExecutor().getCurrentWorkUnit().context.actions;
        MatrixBuild lb = getParent().getLastBuild();
        for (Action a : actions) {
            if (a instanceof ParentBuildAction) {
                MatrixBuild _lb = ((ParentBuildAction) a).parent;
                if (_lb != null) {
                    lb = _lb;
                }
            }
        }

        if (lb == null) {
            throw new IOException("cannot start a build of " + getFullName() + " since its parent has no builds at all");
        }

        // for every MatrixRun there should be a parent MatrixBuild
        MatrixRun lastBuild = new MatrixRun(this, lb.getTimestamp());

        lastBuild.number = lb.getNumber();

        builds.put(lastBuild);
        return lastBuild;
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905557/fstmerge_base_3318723067619142099
@Override
    protected MatrixRun newBuild() throws IOException {
        List<Action> actions = Executor.currentExecutor().getCurrentWorkUnit().context.actions;
        MatrixBuild lb = getParent().getLastBuild();
        for (Action a : actions) {
            if (a instanceof ParentBuildAction) {
                lb = ((ParentBuildAction) a).parent;
            }
        }

        // for every MatrixRun there should be a parent MatrixBuild
        MatrixRun lastBuild = new MatrixRun(this, lb.getTimestamp());

        lastBuild.number = lb.getNumber();

        builds.put(lastBuild);
        return lastBuild;
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905557/fstmerge_var2_5023548850481549727

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/matrix/MatrixConfiguration.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905621/fstmerge_var1_9190849914673836828
public boolean scheduleBuild(ParametersAction parameters, Cause c) {
        return scheduleBuild(Collections.singletonList(parameters), c);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905621/fstmerge_base_6675854153325353352
public boolean scheduleBuild(ParametersAction parameters, Cause c) {

        return scheduleBuild(Collections.singletonList(parameters), c);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905621/fstmerge_var2_2823727351223207678

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/matrix/MatrixConfiguration.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905625/fstmerge_var1_7028312879927030877
public boolean scheduleBuild(List<? extends Action> actions, Cause c) {
        List<Action> allActions = new ArrayList<Action>();

        if(actions != null)
            allActions.addAll(actions);

        allActions.add(new ParentBuildAction());
        allActions.add(new CauseAction(c));

        return Jenkins.getInstance().getQueue().schedule2(this, getQuietPeriod(), allActions ).isAccepted();
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905625/fstmerge_base_1192949779855729534
public boolean scheduleBuild(List<? extends Action> actions, Cause c) {
        List<Action> allActions = new ArrayList<Action>();

        if(actions != null)
            allActions.addAll(actions);

        allActions.add(new ParentBuildAction());
        allActions.add(new CauseAction(c));

        return Jenkins.getInstance().getQueue().schedule(this, getQuietPeriod(), allActions )!=null;
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905625/fstmerge_var2_7304142090829796785

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/matrix/MatrixConfiguration.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905737/fstmerge_var1_6842875795365464620
public T get(int zp) {
            m.clear();
            buildMap(xp,x);
            buildMap(yp,y);
            buildMap(zp,z);
            for (Axis a : trivial) {
                if (a.size() > 0) {
                    m.put(a.name, a.value(0));
                }
            }
            return getT(new Combination(m));
        }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905737/fstmerge_base_2189274250660027760
public T get(int zp) {
            m.clear();
            buildMap(xp,x);
            buildMap(yp,y);
            buildMap(zp,z);
            for (Axis a : trivial)
                m.put(a.name,a.value(0));
            return getT(new Combination(m));
        }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905737/fstmerge_var2_395167149926166838

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/matrix/Layouter.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905756/fstmerge_var1_3286677870393849354
public Axis(String name, List<String> values) {
        if (values == null || values.isEmpty()) {
            values = Collections.emptyList();
        }
        this.name = name;
        this.values = new ArrayList<String>(values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905756/fstmerge_base_539291530159860366
public Axis(String name, List<String> values) {
        this.name = name;
        this.values = new ArrayList<String>(values);
        if(values.isEmpty())
            throw new IllegalArgumentException(); // bug in the code
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905756/fstmerge_var2_8844581254714003511

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/matrix/Axis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905764/fstmerge_var1_6539201967733537606
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905764/fstmerge_base_6713597281225525001
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905764/fstmerge_var2_2700845236641130698

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/matrix/Axis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905884/fstmerge_var1_6703284890010062312
public boolean evalGroovyExpression(AxisList axes, String expression) {

        return evalGroovyExpression(axes, expression, new Binding());
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905884/fstmerge_base_2329727522675315895
public boolean evalGroovyExpression(AxisList axes, String expression) {
        if(Util.fixEmptyAndTrim(expression)==null)
            return true;

        Binding binding = new Binding();
        for (Map.Entry<String, String> e : entrySet())
            binding.setVariable(e.getKey(),e.getValue());

        binding.setVariable("index",toModuloIndex(axes));
        binding.setVariable("uniqueId",toIndex(axes));

        GroovyShell shell = new GroovyShell(binding);

        Object result = shell.evaluate("use("+BooleanCategory.class.getName().replace('$','.')+") {"+expression+"}");
        return TRUE.equals(result);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479905884/fstmerge_var2_2186729278565139801

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/hudson/matrix/Combination.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479906589/fstmerge_var1_5093857766273791299
@Override public final boolean delete() throws IOException, InterruptedException {
        File ad = getArtifactsDir();
        if (!ad.exists()) {
            return false;
        }
        Util.deleteRecursive(ad);
        return true;
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479906589/fstmerge_base_1252842424119629230
=======
@Override public final boolean delete() throws IOException, InterruptedException {
        File ad = getArtifactsDir();
        if (!ad.exists()) {
            LOG.log(Level.FINE, "no such directory {0} to delete for {1}", new Object[] {ad, build});
            return false;
        }
        LOG.log(Level.FINE, "deleting {0} for {1}", new Object[] {ad, build});
        Util.deleteRecursive(ad);
        return true;
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479906589/fstmerge_var2_3584256669164558139

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/jenkins/model/StandardArtifactManager.java
Conflict type: LineBasedMCFd
Conflict body: 
protected void updateCache(@Nonnull Job<?,?> job, @Nullable Run<?,?> b) {
        final int n = b==null ? RESOLVES_TO_NONE : b.getNumber();

        File cache = getPermalinkFile(job);
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479906623/fstmerge_base_2371308222005862754
        File tmp = new File(cache.getPath()+".tmp");
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479906623/fstmerge_var2_1354826733057293629
        cache.getParentFile().mkdirs();

        try {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479906623/fstmerge_base_2371308222005862754
            StringWriter w = new StringWriter();
            StreamTaskListener listener = new StreamTaskListener(w);

            Util.createSymlink(tmp.getParentFile(),String.valueOf(n),tmp.getName(),listener);
            if (Util.resolveSymlink(tmp)==null) {
                // symlink not supported. use a regular file
                AtomicFileWriter cw = new AtomicFileWriter(cache);
                try {
                    cw.write(String.valueOf(n));
                    cw.commit();
                } finally {
                    cw.abort();
                }
            } else {
                cache.delete();
                tmp.renameTo(cache);
=======
            String target = String.valueOf(n);
            if (b != null && !new File(job.getBuildDir(), target).exists()) {
                // (re)create the build Number->Id symlink
                Util.createSymlink(job.getBuildDir(),b.getId(),target,TaskListener.NULL);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479906623/fstmerge_var2_1354826733057293629
            }
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479906623/fstmerge_var1_3131955057843613978
            writeSymlink(cache, String.valueOf(n));
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479906623/fstmerge_base_2371308222005862754
=======
            writeSymlink(cache, target);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479906623/fstmerge_var2_1354826733057293629
        } catch (IOException e) {
            LOGGER.log(Level.WARNING, "Failed to update "+job+" "+getId()+" permalink for " + b, e);
            cache.delete();
        } catch (InterruptedException e) {
            LOGGER.log(Level.WARNING, "Failed to update "+job+" "+getId()+" permalink for " + b, e);
            cache.delete();
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479906623/fstmerge_base_2371308222005862754
        } finally {
            tmp.delete();
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479906623/fstmerge_var2_1354826733057293629
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/jenkins/model/PeepholePermalink.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479906632/fstmerge_var1_2832818619074702643
static String readSymlink(File cache) throws IOException, InterruptedException {
        String target = Util.resolveSymlink(cache);
        if (target==null && cache.exists()) {
            // if this file isn't a symlink, it must be a regular file
            target = FileUtils.readFileToString(cache,"UTF-8").trim();
        }
        return target;
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479906632/fstmerge_base_2743468902243610520
=======
static String readSymlink(File cache) throws IOException, InterruptedException {
        synchronized (symlinks) {
            String target = symlinks.get(cache);
            if (target != null) {
                LOGGER.log(Level.FINE, "readSymlink cached {0} → {1}", new Object[] {cache, target});
                return target;
            }
        }
        String target = Util.resolveSymlink(cache);
        if (target==null && cache.exists()) {
            // if this file isn't a symlink, it must be a regular file
            target = FileUtils.readFileToString(cache,"UTF-8").trim();
        }
        LOGGER.log(Level.FINE, "readSymlink {0} → {1}", new Object[] {cache, target});
        synchronized (symlinks) {
            symlinks.put(cache, target);
        }
        return target;
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479906632/fstmerge_var2_3331265298905710794

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/jenkins/model/PeepholePermalink.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479906637/fstmerge_var1_7300551427979857731
static void writeSymlink(File cache, String target) throws IOException, InterruptedException {
        StringWriter w = new StringWriter();
        StreamTaskListener listener = new StreamTaskListener(w);
        File tmp = new File(cache.getPath()+".tmp");
        try {
            Util.createSymlink(tmp.getParentFile(),target,tmp.getName(),listener);
            // Avoid calling resolveSymlink on a nonexistent file as it will probably throw an IOException:
            if (!exists(tmp) || Util.resolveSymlink(tmp)==null) {
                // symlink not supported. use a regular file
                AtomicFileWriter cw = new AtomicFileWriter(cache);
                try {
                    cw.write(target);
                    cw.commit();
                } finally {
                    cw.abort();
                }
            } else {
                cache.delete();
                tmp.renameTo(cache);
            }
        } finally {
            tmp.delete();
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479906637/fstmerge_base_7858138701149142590
=======
static void writeSymlink(File cache, String target) throws IOException, InterruptedException {
        LOGGER.log(Level.FINE, "writeSymlink {0} → {1}", new Object[] {cache, target});
        synchronized (symlinks) {
            symlinks.put(cache, target);
        }
        StringWriter w = new StringWriter();
        StreamTaskListener listener = new StreamTaskListener(w);
        Util.createSymlink(cache.getParentFile(),target,cache.getName(),listener);
        // Avoid calling resolveSymlink on a nonexistent file as it will probably throw an IOException:
        if (!exists(cache) || Util.resolveSymlink(cache)==null) {
          // symlink not supported. use a regular file
          AtomicFileWriter cw = new AtomicFileWriter(cache);
          try {
              cw.write(target);
              cw.commit();
          } finally {
              cw.abort();
          }
        }
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479906637/fstmerge_var2_7279899440098229317

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/jenkins/model/PeepholePermalink.java
Conflict type: LineBasedMCFd
Conflict body: 
@Override
    public void buildEnvironmentFor(Run r, EnvVars env, TaskListener listener) throws IOException, InterruptedException {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479906723/fstmerge_var1_2953390330471880477
        env.put("BUILD_DISPLAY_NAME",r.getDisplayName());
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479906723/fstmerge_base_5268870993791951487
        Computer c = Computer.currentComputer();
        if (c!=null){
            EnvVars compEnv = c.getEnvironment().overrideAll(env);
            env.putAll(compEnv);
        }
=======
        Computer c = Computer.currentComputer();
        if (c!=null){
            EnvVars compEnv = c.getEnvironment().overrideAll(env);
            env.putAll(compEnv);
        }
        env.put("BUILD_DISPLAY_NAME",r.getDisplayName());
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479906723/fstmerge_var2_7751502931026644833

        Jenkins j = Jenkins.getInstance();
        String rootUrl = j.getRootUrl();
        if(rootUrl!=null) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479906723/fstmerge_base_5268870993791951487
            env.put("JENKINS_URL", rootUrl);
            env.put("HUDSON_URL", rootUrl); // Legacy compatibility
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479906723/fstmerge_var2_7751502931026644833
            env.put("BUILD_URL", rootUrl+r.getUrl());
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479906723/fstmerge_base_5268870993791951487
            env.put("JOB_URL", rootUrl+r.getParent().getUrl());
        }

        String root = j.getRootDir().getPath();
        env.put("JENKINS_HOME", root);
        env.put("HUDSON_HOME", root);   // legacy compatibility

        Thread t = Thread.currentThread();
        if (t instanceof Executor) {
            Executor e = (Executor) t;
            env.put("EXECUTOR_NUMBER", String.valueOf(e.getNumber()));
            if (e.getOwner() instanceof MasterComputer) {
                env.put("NODE_NAME", "master");
            } else {
                env.put("NODE_NAME", e.getOwner().getName());
            }
            Node n = e.getOwner().getNode();
            if (n != null)
                env.put("NODE_LABELS", Util.join(n.getAssignedLabels(), " "));
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479906723/fstmerge_var2_7751502931026644833
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/jenkins/model/CoreEnvironmentContributor.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479906727/fstmerge_var1_7863856807446209250
@Override
    public void buildEnvironmentFor(Job j, EnvVars env, TaskListener listener) throws IOException, InterruptedException {
        Computer c = Computer.currentComputer();
        if (c!=null){
            EnvVars compEnv = c.getEnvironment().overrideAll(env);
            env.putAll(compEnv);
        }

        Jenkins jenkins = Jenkins.getInstance();
        String rootUrl = jenkins.getRootUrl();
        if(rootUrl!=null) {
            env.put("JENKINS_URL", rootUrl);
            env.put("HUDSON_URL", rootUrl); // Legacy compatibility
            env.put("JOB_URL", rootUrl+j.getUrl());
        }

        String root = jenkins.getRootDir().getPath();
        env.put("JENKINS_HOME", root);
        env.put("HUDSON_HOME", root);   // legacy compatibility

        Thread t = Thread.currentThread();
        if (t instanceof Executor) {
            Executor e = (Executor) t;
            env.put("EXECUTOR_NUMBER", String.valueOf(e.getNumber()));
            if (e.getOwner() instanceof MasterComputer) {
                env.put("NODE_NAME", "master");
            } else {
                env.put("NODE_NAME", e.getOwner().getName());
            }
            Node n = e.getOwner().getNode();
            if (n != null)
                env.put("NODE_LABELS", Util.join(n.getAssignedLabels(), " "));
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479906727/fstmerge_base_473285332007121464
=======
@Override
    public void buildEnvironmentFor(Job j, EnvVars env, TaskListener listener) throws IOException, InterruptedException {
        Jenkins jenkins = Jenkins.getInstance();
        String rootUrl = jenkins.getRootUrl();
        if(rootUrl!=null) {
            env.put("JENKINS_URL", rootUrl);
            env.put("HUDSON_URL", rootUrl); // Legacy compatibility
            env.put("JOB_URL", rootUrl+j.getUrl());
        }

        String root = jenkins.getRootDir().getPath();
        env.put("JENKINS_HOME", root);
        env.put("HUDSON_HOME", root);   // legacy compatibility

        Thread t = Thread.currentThread();
        if (t instanceof Executor) {
            Executor e = (Executor) t;
            env.put("EXECUTOR_NUMBER", String.valueOf(e.getNumber()));
            if (e.getOwner() instanceof MasterComputer) {
                env.put("NODE_NAME", "master");
            } else {
                env.put("NODE_NAME", e.getOwner().getName());
            }
            Node n = e.getOwner().getNode();
            if (n != null)
                env.put("NODE_LABELS", Util.join(n.getAssignedLabels(), " "));
        }
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479906727/fstmerge_var2_1526079640838495897

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/jenkins/model/CoreEnvironmentContributor.java
Conflict type: LineBasedMCFd
Conflict body: 
public synchronized void purgeCache() {
        index = new Index();
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479906953/fstmerge_var1_2392340416904323466
        loadIdOnDisk();
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479906953/fstmerge_base_766708015318924909
=======
        fullyLoaded = false;
        loadIdOnDisk();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479906953/fstmerge_var2_5731699471971908870
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/jenkins/model/lazy/AbstractLazyLoadRunMap.java
Conflict type: LineBasedMCFd
Conflict body: 
private void loadIdOnDisk() {
        String[] kids = dir.list();
        if (kids == null) {
            // the job may have just been created
            kids = EMPTY_STRING_ARRAY;
        }
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479906959/fstmerge_var1_8849072108096607728
        // wrap into ArrayList to enable mutation
        Arrays.sort(buildDirs);
        idOnDisk = new SortedList<String>(new ArrayList<String>(Arrays.asList(buildDirs)));

        // TODO: should we check that shortcuts is a symlink?
        String[] shortcuts = dir.list();
        if (shortcuts==null)    shortcuts=EMPTY_STRING_ARRAY;
        SortedIntList list = new SortedIntList(shortcuts.length/2);
        for (String s : shortcuts) {
            try {
                list.add(Integer.parseInt(s));
            } catch (NumberFormatException e) {
                // this isn't a shortcut
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479906959/fstmerge_base_1184340366551419840
        // wrap into ArrayList to enable mutation
        Arrays.sort(buildDirs);
        idOnDisk = new SortedList(new ArrayList<String>(Arrays.asList(buildDirs)));

        // TODO: should we check that shortcuts is a symlink?
        String[] shortcuts = dir.list();
        if (shortcuts==null)    shortcuts=EMPTY_STRING_ARRAY;
        SortedIntList list = new SortedIntList(shortcuts.length/2);
        for (String s : shortcuts) {
            try {
                list.add(Integer.parseInt(s));
            } catch (NumberFormatException e) {
                // this isn't a shortcut
=======
        List<String> buildDirs = new ArrayList<String>();
        FilenameFilter buildDirFilter = createDirectoryFilter();
        SortedIntList list = new SortedIntList(kids.length / 2);
        for (String s : kids) {
            if (buildDirFilter.accept(dir, s)) {
                buildDirs.add(s);
            } else {
                try {
                    list.add(Integer.parseInt(s));
                } catch (NumberFormatException e) {
                    // this isn't a shortcut
                }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479906959/fstmerge_var2_7614155450367976082
            }
        }
        Collections.sort(buildDirs);
        idOnDisk = new SortedList<String>(buildDirs);
        list.sort();
        numberOnDisk = list;
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/jenkins/model/lazy/AbstractLazyLoadRunMap.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479907014/fstmerge_base_9105451489143555015
public R search(final int n, final Direction d) {
=======
public @CheckForNull R search(final int n, final Direction d) {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479907014/fstmerge_var2_1007276454759457057
        Entry<Integer, BuildReference<R>> c = index.ceilingEntry(n);
        if (c!=null && c.getKey()== n) {
            R r = c.getValue().get();
            if (r!=null)
            return r;    // found the exact #n
        }

        // at this point we know that we don't have #n loaded yet

        {// check numberOnDisk as a cache to see if we can find it there
            int npos = numberOnDisk.find(n);
            if (npos>=0) {// found exact match
                R r = load(numberOnDisk.get(npos), null);
                if (r!=null)
                    return r;
            }

            switch (d) {
            case ASC:
            case DESC:
                // didn't find the exact match, but what's the nearest ascending value in the cache?
                int neighbor = (d==ASC?HIGHER:LOWER).apply(npos);
                if (numberOnDisk.isInRange(neighbor)) {
                    R r = getByNumber(numberOnDisk.get(neighbor));
                    if (r!=null) {
                        // make sure that the cache is accurate by looking at the previous ID
                        // and it actually satisfies the constraint
                        int prev = (d==ASC?LOWER:HIGHER).apply(idOnDisk.find(getIdOf(r)));
                        if (idOnDisk.isInRange(prev)) {
                            R pr = getById(idOnDisk.get(prev));
                            // sign*sign is making sure that #pr and #r sandwiches #n.
                            if (pr!=null && signOfCompare(getNumberOf(pr),n)*signOfCompare(n,getNumberOf(r))>0)
                                return r;
                            else {
                                // cache is lying. there's something fishy.
                                // ignore the cache and do the slow search
                            }
                        } else {
                            // r is the build with youngest ID
                            return r;
                        }
                    } else {
                        // cache says we should have a build but we didn't.
                        // ignore the cache and do the slow search
                    }
                }
                break;
            case EXACT:
                // fall through
            }

            // didn't find it in the cache, but don't give up yet
            // maybe the cache just doesn't exist.
            // so fall back to the slow search
        }

        // capture the snapshot and work off with it since it can be overwritten by other threads
        SortedList<String> idOnDisk = this.idOnDisk;
        boolean clonedIdOnDisk = false; // if we modify idOnDisk we need to write it back. this flag is set to true when we overwrit idOnDisk local var

        // slow path: we have to find the build from idOnDisk by guessing ID of the build.
        // first, narrow down the candidate IDs to try by using two known number-to-ID mapping
        if (idOnDisk.isEmpty())     return null;

        Entry<Integer, BuildReference<R>> f = index.floorEntry(n);

        // if bound is null, use a sentinel value
        String cid = c==null ? "\u0000"  : c.getValue().id;
        String fid = f==null ? "\uFFFF" : f.getValue().id;
        // at this point, #n must be in (cid,fid)

        // We know that the build we are looking for exists in [lo,hi)  --- it's "hi)" and not "hi]" because we do +1.
        // we will narrow this down via binary search
        final int initialSize = idOnDisk.size();
        int lo = idOnDisk.higher(cid);
        int hi = idOnDisk.lower(fid)+1;

        final int initialLo = lo, initialHi = hi;

        if (!(0<=lo && lo<=hi && hi<=idOnDisk.size())) {
            // assertion error, but we are so far unable to get to the bottom of this bug.
            // but don't let this kill the loading the hard way
            String msg = String.format(
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479907014/fstmerge_base_9105451489143555015
                    "Assertion error: failing to load #%d %s: lo=%d,hi=%d,size=%d,size2=%d",
                    n, d, lo, hi, idOnDisk.size(), initialSize);
            LOGGER.log(Level.WARNING, msg,new Exception());
            throw new ArrayIndexOutOfBoundsException(msg);
=======
                    "JENKINS-15652 Assertion error #1: failing to load %s #%d %s: lo=%d,hi=%d,size=%d,size2=%d",
                    dir, n, d, lo, hi, idOnDisk.size(), initialSize);
            LOGGER.log(Level.WARNING, msg);
            return null;
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479907014/fstmerge_var2_1007276454759457057
        }

        while (lo<hi) {
            final int pivot = (lo+hi)/2;
            if (!(0<=lo && lo<=pivot && pivot<hi && hi<=idOnDisk.size())) {
                // assertion error, but we are so far unable to get to the bottom of this bug.
                // but don't let this kill the loading the hard way
                String msg = String.format(
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479907014/fstmerge_base_9105451489143555015
                        "Assertion error: failing to load #%d %s: lo=%d,hi=%d,pivot=%d,size=%d (initial:lo=%d,hi=%d,size=%d)",
                        n, d, lo, hi, pivot, idOnDisk.size(), initialLo, initialHi, initialSize);
                LOGGER.log(Level.WARNING, msg,new Exception());
                throw new ArrayIndexOutOfBoundsException(msg);
=======
                        "JENKINS-15652 Assertion error #2: failing to load %s #%d %s: lo=%d,hi=%d,pivot=%d,size=%d (initial:lo=%d,hi=%d,size=%d)",
                        dir, n, d, lo, hi, pivot, idOnDisk.size(), initialLo, initialHi, initialSize);
                LOGGER.log(Level.WARNING, msg);
                return null;
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479907014/fstmerge_var2_1007276454759457057
            }
            R r = load(idOnDisk.get(pivot), null);
            if (r==null) {
                // this ID isn't valid. get rid of that and retry pivot
                hi--;
                if (!clonedIdOnDisk) {// if we are making an edit, we need to own a copy
                    idOnDisk = new SortedList<String>(idOnDisk);
                    clonedIdOnDisk = true;
                }
                idOnDisk.remove(pivot);
                continue;
            }

            int found = getNumberOf(r);
            if (found==n)
                return r;   // exact match

            if (found<n)    lo = pivot+1;   // the pivot was too small. look in the upper half
            else            hi = pivot;     // the pivot was too big. look in the lower half
        }

        if (clonedIdOnDisk)
            this.idOnDisk = idOnDisk;   // feedback the modified result atomically

        assert lo==hi;
        // didn't find the exact match
        // both lo and hi point to the insertion point on idOnDisk
        switch (d) {
        case ASC:
            if (hi==idOnDisk.size())    return null;
            return getById(idOnDisk.get(hi));
        case DESC:
            if (lo<=0)                 return null;
            if (lo-1>=idOnDisk.size()) {
                // assertion error, but we are so far unable to get to the bottom of this bug.
                // but don't let this kill the loading the hard way
                LOGGER.log(Level.WARNING, String.format(
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479907014/fstmerge_base_9105451489143555015
                        "Assertion error: failing to load #%d %s: lo=%d,hi=%d,size=%d (initial:lo=%d,hi=%d,size=%d)",
                        n,d,lo,hi,idOnDisk.size(), initialLo,initialHi,initialSize),new Exception());
=======
                        "JENKINS-15652 Assertion error #3: failing to load %s #%d %s: lo=%d,hi=%d,size=%d (initial:lo=%d,hi=%d,size=%d)",
                        dir, n,d,lo,hi,idOnDisk.size(), initialLo,initialHi,initialSize));
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479907014/fstmerge_var2_1007276454759457057
                return null;
            }
            return getById(idOnDisk.get(lo-1));
        case EXACT:
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479907014/fstmerge_var1_2100078281796066427
            if (hi<=0)                 return null;
            R r = load(idOnDisk.get(hi-1), null);
            if (r==null)               return null;

            int found = getNumberOf(r);
            if (found==n)
                return r;   // exact match
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479907014/fstmerge_base_9105451489143555015
=======
            if (hi<=0)                 return null;
            R r = getById(idOnDisk.get(hi-1));
            if (r==null)               return null;

            int found = getNumberOf(r);
            if (found==n)
                return r;   // exact match
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479907014/fstmerge_var2_1007276454759457057
            return null;
        default:
            throw new AssertionError();
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/jenkins/model/lazy/AbstractLazyLoadRunMap.java
Conflict type: ImplementList
Conflict body: 
~~FSTMerge~~ implements Comparable<VirtualFile> ##FSTMerge## ##FSTMerge## implements Comparable<VirtualFile>, Serializable
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/jenkins/util/VirtualFile.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479907671/fstmerge_var1_9162735116804728268
public static VirtualFile forFile(final File f) {
        return new VirtualFile() {
            @Override public String getName() {
                return f.getName();
            }
            @Override public URI toURI() {
                return f.toURI();
            }
            @Override public VirtualFile getParent() {
                return forFile(f.getParentFile());
            }
            @Override public boolean isDirectory() throws IOException {
                return f.isDirectory();
            }
            @Override public boolean isFile() throws IOException {
                return f.isFile();
            }
            @Override public boolean exists() throws IOException {
                return f.exists();
            }
            @Override public VirtualFile[] list() throws IOException {
                File[] kids = f.listFiles();
                if (kids == null) {
                    return new VirtualFile[0];
                }
                VirtualFile[] vfs = new VirtualFile[kids.length];
                for (int i = 0; i < kids.length; i++) {
                    vfs[i] = forFile(kids[i]);
                }
                return vfs;
            }
            @Override public String[] list(String glob) throws IOException {
                return new Scanner(glob).invoke(f, null);
            }
            @Override public VirtualFile child(String name) {
                return forFile(new File(f, name));
            }
            @Override public long length() throws IOException {
                return f.length();
            }
            @Override public long lastModified() throws IOException {
                return f.lastModified();
            }
            @Override public boolean canRead() throws IOException {
                return f.canRead();
            }
            @Override public InputStream open() throws IOException {
                return new FileInputStream(f);
            }
        };
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479907671/fstmerge_base_7969727936339835994
=======
public static VirtualFile forFile(final File f) {
        return new FileVF(f);
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479907671/fstmerge_var2_5135956982014208372

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/jenkins/util/VirtualFile.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479907675/fstmerge_var1_2106278963797826326
public static VirtualFile forFilePath(final FilePath f) {
        return new VirtualFile() {
            @Override public String getName() {
                return f.getName();
            }
            @Override public URI toURI() {
                try {
                    return f.toURI();
                } catch (Exception x) {
                    return URI.create(f.getRemote());
                }
            }
            @Override public VirtualFile getParent() {
                return f.getParent().toVirtualFile();
            }
            @Override public boolean isDirectory() throws IOException {
                try {
                    return f.isDirectory();
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
            @Override public boolean isFile() throws IOException {
                // TODO should probably introduce a method for this purpose
                return exists() && !isDirectory();
            }
            @Override public boolean exists() throws IOException {
                try {
                    return f.exists();
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
            @Override public VirtualFile[] list() throws IOException {
                try {
                    List<FilePath> kids = f.list();
                    if (kids == null) {
                        return new VirtualFile[0];
                    }
                    VirtualFile[] vfs = new VirtualFile[kids.size()];
                    for (int i = 0; i < vfs.length; i++) {
                        vfs[i] = forFilePath(kids.get(i));
                    }
                    return vfs;
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
            @Override public String[] list(String glob) throws IOException {
                try {
                    return f.act(new Scanner(glob));
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
            @Override public VirtualFile child(String name) {
                return forFilePath(f.child(name));
            }
            @Override public long length() throws IOException {
                try {
                    return f.length();
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
            @Override public long lastModified() throws IOException {
                try {
                    return f.lastModified();
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
            @Override public boolean canRead() throws IOException {
                try {
                    return f.act(new Readable());
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
            @Override public InputStream open() throws IOException {
                return f.read();
            }
        };
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479907675/fstmerge_base_7318803498237308083
=======
public static VirtualFile forFilePath(final FilePath f) {
        return new FilePathVF(f);
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479907675/fstmerge_var2_314552898964172734

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/jenkins/util/VirtualFile.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479908205/fstmerge_var1_6171022575201353342
public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException,
            ServletException {
		if (!(request instanceof HttpServletRequest)) {
			throw new ServletException("HttpServletRequest required");
		}

		if (!(response instanceof HttpServletResponse)) {
			throw new ServletException("HttpServletResponse required");
		}

		try {
			chain.doFilter(request, response);

			if (logger.isDebugEnabled()) {
				logger.debug("Chain processed normally");
			}
		}
		catch (AuthenticationException ex) {
			handleException(request, response, chain, ex);
		}
		catch (AccessDeniedException ex) {
			handleException(request, response, chain, ex);
		}
		catch (ServletException ex) {
			if (ex.getRootCause() instanceof AuthenticationException
					|| ex.getRootCause() instanceof AccessDeniedException) {
				handleException(request, response, chain, (AcegiSecurityException) ex.getRootCause());
			}
			else {
				throw ex;
			}
		}
		catch (IOException ex) {
			throw ex;
		}
	}
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479908205/fstmerge_base_2628407300227091401
=======
public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException,
            ServletException {
		if (!(request instanceof HttpServletRequest)) {
			throw new ServletException("HttpServletRequest required");
		}

		if (!(response instanceof HttpServletResponse)) {
			throw new ServletException("HttpServletResponse required");
		}

		try {
			chain.doFilter(request, response);

			LOGGER.finer("Chain processed normally");
		}
		catch (AuthenticationException ex) {
			handleException(request, response, chain, ex);
		}
		catch (AccessDeniedException ex) {
			handleException(request, response, chain, ex);
		}
		catch (ServletException ex) {
			if (ex.getRootCause() instanceof AuthenticationException
					|| ex.getRootCause() instanceof AccessDeniedException) {
				handleException(request, response, chain, (AcegiSecurityException) ex.getRootCause());
			}
			else {
				throw ex;
			}
		}
		catch (IOException ex) {
			throw ex;
		}
	}
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479908205/fstmerge_var2_4234166875454331212

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/jenkins/security/ExceptionTranslationFilter.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479908223/fstmerge_var1_553490489574945983
private void handleException(ServletRequest request, ServletResponse response, FilterChain chain,
			AcegiSecurityException exception) throws IOException, ServletException {
		if (exception instanceof AuthenticationException) {
			if (logger.isDebugEnabled()) {
				logger.debug("Authentication exception occurred; redirecting to authentication entry point", exception);
			}

			sendStartAuthentication(request, response, chain, (AuthenticationException) exception);
		}
		else if (exception instanceof AccessDeniedException) {
			if (authenticationTrustResolver.isAnonymous(SecurityContextHolder.getContext().getAuthentication())) {
				if (logger.isDebugEnabled()) {
					logger.debug("Access is denied (user is anonymous); redirecting to authentication entry point",
							exception);
				}

				sendStartAuthentication(request, response, chain, new InsufficientAuthenticationException(
						"Full authentication is required to access this resource",exception));
			}
			else {
				if (logger.isDebugEnabled()) {
					logger.debug("Access is denied (user is not anonymous); delegating to AccessDeniedHandler",
							exception);
				}

				accessDeniedHandler.handle(request, response, (AccessDeniedException) exception);
			}
		}
	}
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479908223/fstmerge_base_2355627759744413440
=======
private void handleException(ServletRequest request, ServletResponse response, FilterChain chain,
			AcegiSecurityException exception) throws IOException, ServletException {
		if (exception instanceof AuthenticationException) {
			LOGGER.log(Level.FINER, "Authentication exception occurred; redirecting to authentication entry point", exception);

			sendStartAuthentication(request, response, chain, (AuthenticationException) exception);
		}
		else if (exception instanceof AccessDeniedException) {
			if (authenticationTrustResolver.isAnonymous(SecurityContextHolder.getContext().getAuthentication())) {
					LOGGER.log(Level.FINER, "Access is denied (user is anonymous); redirecting to authentication entry point",
						exception);

				sendStartAuthentication(request, response, chain, new InsufficientAuthenticationException(
						"Full authentication is required to access this resource",exception));
			}
			else {
				LOGGER.log(Level.FINER, "Access is denied (user is not anonymous); delegating to AccessDeniedHandler",
						exception);

				accessDeniedHandler.handle(request, response, (AccessDeniedException) exception);
			}
		}
	}
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479908223/fstmerge_var2_8701666307090397044

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/jenkins/security/ExceptionTranslationFilter.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479908232/fstmerge_var1_7669594680142629757
protected void sendStartAuthentication(ServletRequest request, ServletResponse response, FilterChain chain,
			AuthenticationException reason) throws ServletException, IOException {
		HttpServletRequest httpRequest = (HttpServletRequest) request;

		SavedRequest savedRequest = new SavedRequest(httpRequest, portResolver);

		if (logger.isDebugEnabled()) {
			logger.debug("Authentication entry point being called; SavedRequest added to Session: " + savedRequest);
		}

		if (createSessionAllowed) {
			// Store the HTTP request itself. Used by AbstractProcessingFilter
			// for redirection after successful authentication (SEC-29)
			httpRequest.getSession().setAttribute(AbstractProcessingFilter.ACEGI_SAVED_REQUEST_KEY, savedRequest);
		}

		// SEC-112: Clear the SecurityContextHolder's Authentication, as the
		// existing Authentication is no longer considered valid
		SecurityContextHolder.getContext().setAuthentication(null);

		authenticationEntryPoint.commence(httpRequest, response, reason);
	}
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479908232/fstmerge_base_1289321718736714787
=======
protected void sendStartAuthentication(ServletRequest request, ServletResponse response, FilterChain chain,
			AuthenticationException reason) throws ServletException, IOException {
		HttpServletRequest httpRequest = (HttpServletRequest) request;

		SavedRequest savedRequest = new SavedRequest(httpRequest, portResolver);

		LOGGER.finer("Authentication entry point being called; SavedRequest added to Session: " + savedRequest);

		if (createSessionAllowed) {
			// Store the HTTP request itself. Used by AbstractProcessingFilter
			// for redirection after successful authentication (SEC-29)
			httpRequest.getSession().setAttribute(AbstractProcessingFilter.ACEGI_SAVED_REQUEST_KEY, savedRequest);
		}

		// SEC-112: Clear the SecurityContextHolder's Authentication, as the
		// existing Authentication is no longer considered valid
		SecurityContextHolder.getContext().setAuthentication(null);

		authenticationEntryPoint.commence(httpRequest, response, reason);
	}
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479908232/fstmerge_var2_7865838644479666726

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/jenkins/security/ExceptionTranslationFilter.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479908458/fstmerge_var1_6626401483377019369
public abstract @CheckForNull Authentication authenticate(Queue.Item item);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479908458/fstmerge_base_3926072199513896068
=======
public @CheckForNull Authentication authenticate(Queue.Item item) {
        if (Util.isOverridden(QueueItemAuthenticator.class, getClass(), "authenticate", Queue.Task.class)) {
            return authenticate(item.task);
        } else {
            throw new AbstractMethodError("you must override at least one of the QueueItemAuthenticator.authenticate methods");
        }
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479908458/fstmerge_var2_247066578992792667

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/jenkins/security/QueueItemAuthenticator.java
Conflict type: LineBasedMCFd
Conflict body: 
public Handler(Socket socket) throws IOException {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479908531/fstmerge_var1_3515122089351269304
            this.socket = socket;
            in = new DataInputStream(socket.getInputStream());
            out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(socket.getOutputStream(),"UTF-8")),true);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479908531/fstmerge_base_3354356170362621200
            this.socket = socket;
            in = new DataInputStream(socket.getInputStream());
            out = new PrintWriter(socket.getOutputStream(),true);
=======
            this(null,socket);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479908531/fstmerge_var2_5059771921697248212
        }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/jenkins/slaves/JnlpSlaveAgentProtocol.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479908938/fstmerge_var1_4935766476559654110
public void execute(TaskListener listener, int delay) throws InterruptedException {
        for (Job j : Jenkins.getInstance().getAllItems(Job.class)) {
            listener.getLogger().println("Scanning "+j.getFullDisplayName());

            Problem p = Problem.find(j);
            if (p!=null) {
                monitor.addProblem(p);
                listener.getLogger().println("  found problems: "+p);
            }

            Thread.sleep(delay);
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479908938/fstmerge_base_3944112359505269821
=======
public void execute(TaskListener listener, int delay) throws InterruptedException {
        for (Job j : Jenkins.getInstance().getAllItems(Job.class)) {
            listener.getLogger().println("Scanning " + j.getFullName());

            Problem p = Problem.find(j);
            if (p!=null) {
                monitor.addProblem(p);
                listener.getLogger().println("  found problems: "+p);
            }

            Thread.sleep(delay);
        }
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479908938/fstmerge_var2_3568192166486767472

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/jenkins/diagnostics/ooom/OutOfOrderBuildDetector.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479908972/fstmerge_var1_1300011783886525508
@Override
    public String toString() {
        return job.getFullDisplayName()+" "+ Util.join(offenders);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479908972/fstmerge_base_5154894757084672803
=======
@Override
    public String toString() {
        return job.getFullName() + " " + Util.join(offenders);
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479908972/fstmerge_var2_1742526184511636033

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/jenkins/diagnostics/ooom/Problem.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479908976/fstmerge_var1_3119426799754417254
public void fix(TaskListener listener) throws IOException, InterruptedException {
        listener.getLogger().println("Fixing problems in "+job.getFullDisplayName());
        for (BuildPtr o : offenders) {
            o.fix(listener);
        }

        if (job instanceof AbstractProject) {
            // let all the current references go and build a new one
            AbstractProject a = (AbstractProject) job;
            a._getRuns().purgeCache();
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479908976/fstmerge_base_6041878747854732994
=======
public void fix(TaskListener listener) throws IOException, InterruptedException {
        listener.getLogger().println("Fixing problems in " + job.getFullName());
        for (BuildPtr o : offenders) {
            o.fix(listener);
        }

        if (job instanceof AbstractProject) {
            // let all the current references go and build a new one
            AbstractProject a = (AbstractProject) job;
            a._getRuns().purgeCache();
        }
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479908976/fstmerge_var2_6263363334902112982

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/jenkins/diagnostics/ooom/Problem.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479908984/fstmerge_var1_3566656035351634566
protected void inspect() {
            Map<Integer, BuildPtr> builds = scan();

            byN = new ArrayList<BuildPtr>(builds.values());
            // this is already sorted by BuildPtr.n
            int i=0;
            for (BuildPtr b : byN) {
                b.posByN = i++;
            }

            byId = new ArrayList<BuildPtr>(byN);
            Collections.sort(byId, BuildPtr.BY_ID);
            i=0;
            for (BuildPtr b : byId) {
                b.posByID = i++;
            }

            while (true) {
                BuildPtr b = pick();
                if (b==null)
                    break;
                offenders.add(b);
            }
        }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479908984/fstmerge_base_314953345614971819
=======
protected void inspect() {
            Map<Integer, BuildPtr> builds = scan();

            byN = new ArrayList<BuildPtr>(builds.values());
            // this is already sorted by BuildPtr.n
            int i=0;
            for (BuildPtr b : byN) {
                b.posByN = i++;
            }

            byId = new ArrayList<BuildPtr>(byN);
            Collections.sort(byId);
            i=0;
            for (BuildPtr b : byId) {
                b.posByID = i++;
            }

            while (true) {
                BuildPtr b = pick();
                if (b==null)
                    break;
                offenders.add(b);
            }
        }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479908984/fstmerge_var2_6569993399916341177

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/jenkins/diagnostics/ooom/Problem.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479908998/fstmerge_var1_1657137747229786232
protected SortedMap<Integer,BuildPtr> scan() {
            LOGGER.fine("Inspecting "+job);

            SortedMap<Integer,BuildPtr> builds = new TreeMap<Integer,BuildPtr>();

            File[] files = job.getBuildDir().listFiles();
            if (files==null)    return builds;

            for (File build : files) {
                try {
                    LOGGER.finer("Inspecting " + build);

                    if (isInt(build.getName())) {
                        // if this is a number, then it must be a build number
                        String s = loadBuildNumberFromBuildXml(build);
                        if (!s.equals(build.getName())) {
                            LOGGER.warning(build+" contains build number "+s);
                            // this index is invalid.
                            if (build.delete()) {
                                // index should be a symlink, and if so we can just delete it without losing data.
                                LOGGER.info("Removed problematic index "+build);
                            } else {
                                // the deltion will fail if 'build' isn't just a symlink but an actual directory.
                                // That is good, as we don't want to delete any real data.
                                LOGGER.warning("Couldn't delete " + build);
                            }
                        }
                        continue;
                    }


                    if (isID(build.getName())) {
                        String bn = loadBuildNumberFromBuildXml(build);
                        if (bn==null) {
                            LOGGER.log(WARNING, "Failed to parse "+build);
                            continue;
                        }

                        int n;
                        try {
                            n = Integer.parseInt(bn);
                        } catch (NumberFormatException e) {
                            LOGGER.log(WARNING, "Expected number in " + build + " but found " + bn, e);
                            continue;
                        }

                        BuildPtr b = new BuildPtr(job,build,n);

                        BuildPtr o = builds.put(n, b);
                        if (o!=null)
                            LOGGER.warning("Multiple builds have the same number: "+o+" vs "+b);
                    }
                } catch (XPathExpressionException e) {
                    LOGGER.log(WARNING, "Failed to inspect "+build, e);
                } catch (AbortException e) {
                    LOGGER.log(WARNING, "Failed to inspect "+build+": "+e.getMessage());
                } catch (IOException e) {
                    LOGGER.log(WARNING, "Failed to inspect "+build, e);
                }
            }

            return builds;
        }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479908998/fstmerge_base_3317084835780767714
=======
protected SortedMap<Integer,BuildPtr> scan() {
            LOGGER.fine("Inspecting "+job);

            SortedMap<Integer,BuildPtr> builds = new TreeMap<Integer,BuildPtr>();

            File[] files = job.getBuildDir().listFiles();
            if (files==null)    return builds;

            for (File build : files) {
                try {
                    LOGGER.finer("Inspecting " + build);

                    if (isInt(build.getName())) {
                        // if this is a number, then it must be a build number
                        String s = loadBuildNumberFromBuildXml(build);
                        if (!s.equals(build.getName())) {
                            LOGGER.warning(build+" contains build number "+s);
                            // this index is invalid.
                            if (build.delete()) {
                                // index should be a symlink, and if so we can just delete it without losing data.
                                LOGGER.info("Removed problematic index "+build);
                            } else {
                                // the deltion will fail if 'build' isn't just a symlink but an actual directory.
                                // That is good, as we don't want to delete any real data.
                                LOGGER.warning("Couldn't delete " + build);
                            }
                        }
                        continue;
                    }


                    if (isID(build.getName())) {
                        String bn = loadBuildNumberFromBuildXml(build);
                        if (bn==null) {
                            LOGGER.log(WARNING, "Failed to parse "+build);
                            continue;
                        }

                        int n;
                        try {
                            n = Integer.parseInt(bn);
                        } catch (NumberFormatException e) {
                            LOGGER.log(WARNING, "Expected number in " + build + " but found " + bn, e);
                            continue;
                        }

                        BuildPtr b = new BuildPtr(job,build,n);

                        BuildPtr o = builds.put(n, b);
                        if (o != null) {
                            LOGGER.log(WARNING, "Multiple builds have the same number: {0} vs. {1}", new Object[] {o, b});
                            offenders.add(b.compareTo(o) > 0 ? o : b);
                        }
                    }
                } catch (XPathExpressionException e) {
                    LOGGER.log(WARNING, "Failed to inspect "+build, e);
                } catch (AbortException e) {
                    LOGGER.log(WARNING, "Failed to inspect "+build+": "+e.getMessage());
                } catch (IOException e) {
                    LOGGER.log(WARNING, "Failed to inspect "+build, e);
                }
            }

            return builds;
        }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479908998/fstmerge_var2_7418718200851125110

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/jenkins/diagnostics/ooom/Problem.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479909033/fstmerge_var1_99783544556840652
public void fix(TaskListener listener) throws IOException, InterruptedException {
        File dir = new File(job.getRootDir(), "outOfOrderBuilds");
        dir.mkdirs();
        File dst = new File(dir, buildDir.getName());
        listener.getLogger().println("Renaming "+dir);
        listener.getLogger().println("  -> "+dst);
        if (!buildDir.renameTo(dst)) {
            FilePath bd = new FilePath(buildDir);
            bd.copyRecursiveTo(new FilePath(dst));
            bd.deleteRecursive();
        }

        // if there's a symlink delete it
        new File(buildDir.getParentFile(),String.valueOf(n)).delete();
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479909033/fstmerge_base_8797465783903873918
=======
public void fix(TaskListener listener) throws IOException, InterruptedException {
        File dir = new File(job.getRootDir(), "outOfOrderBuilds");
        dir.mkdirs();
        File dst = new File(dir, buildDir.getName());
        listener.getLogger().println("Renaming "+buildDir);
        listener.getLogger().println("  -> "+dst);
        if (!buildDir.renameTo(dst)) {
            FilePath bd = new FilePath(buildDir);
            bd.copyRecursiveTo(new FilePath(dst));
            bd.deleteRecursive();
        }

        // if there's a symlink delete it
        new File(buildDir.getParentFile(),String.valueOf(n)).delete();
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479909033/fstmerge_var2_1572597565700844948

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/jenkins/diagnostics/ooom/BuildPtr.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479909037/fstmerge_var1_1623406184080192375
@Override
    public int compareTo(BuildPtr that) {
        return this.n - that.n;
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479909037/fstmerge_base_2280719678533889656
=======
@Override
    public int compareTo(BuildPtr that) {
        return this.id.compareTo(that.id);
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479909037/fstmerge_var2_270385557736187374

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/main/java/jenkins/diagnostics/ooom/BuildPtr.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479909125/fstmerge_var1_1119666112123046562
@Test
    @PrepareForTest({Stapler.class, Jenkins.class})
    public void testGetRelativeLinkTo_JobNotContainedInView() throws Exception{
        Jenkins j = createMockJenkins();
        ItemGroup parent = j;
        String contextPath = "/jenkins";
        StaplerRequest req = createMockRequest(contextPath);
        mockStatic(Stapler.class);
        when(Stapler.getCurrentRequest()).thenReturn(req);
        View view = mock(View.class);
        when(view.getOwnerItemGroup()).thenReturn(parent);
        createMockAncestors(req, createAncestor(j, "../.."), createAncestor(view, "."));
        TopLevelItem i = createMockItem(parent, "job/i/");
        when(view.getItems()).thenReturn(Collections.<TopLevelItem>emptyList());
        String result = Functions.getRelativeLinkTo(i);
        assertEquals("/jenkins/job/i/", result);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479909125/fstmerge_base_8237513205546511826
=======
@Ignore("too expensive to make it correct")
    @Test
    @PrepareForTest({Stapler.class, Jenkins.class})
    public void testGetRelativeLinkTo_JobNotContainedInView() throws Exception{
        Jenkins j = createMockJenkins();
        ItemGroup parent = j;
        String contextPath = "/jenkins";
        StaplerRequest req = createMockRequest(contextPath);
        mockStatic(Stapler.class);
        when(Stapler.getCurrentRequest()).thenReturn(req);
        View view = mock(View.class);
        when(view.getOwnerItemGroup()).thenReturn(parent);
        createMockAncestors(req, createAncestor(j, "../.."), createAncestor(view, "."));
        TopLevelItem i = createMockItem(parent, "job/i/");
        when(view.getItems()).thenReturn(Collections.<TopLevelItem>emptyList());
        String result = Functions.getRelativeLinkTo(i);
        assertEquals("/jenkins/job/i/", result);
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479909125/fstmerge_var2_2310845212023701757

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/test/java/hudson/FunctionsTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479909142/fstmerge_var1_6199425752240854270
@Test
    public void testGetRelativeDisplayNameInsideItemGroup() {
        Item i = mock(Item.class);
        when(i.getName()).thenReturn("jobName");
        when(i.getDisplayName()).thenReturn("displayName");
        TopLevelItemAndItemGroup ig = mock(TopLevelItemAndItemGroup.class);
        Jenkins j = mock(Jenkins.class);
        when(ig.getName()).thenReturn("parent");
        when(ig.getDisplayName()).thenReturn("parentDisplay");
        when(ig.getParent()).thenReturn((ItemGroup) j);
        when(i.getParent()).thenReturn(ig);
        
        assertEquals("displayName", Functions.getRelativeDisplayNameFrom(i, ig));
        assertEquals("parentDisplay » displayName", Functions.getRelativeDisplayNameFrom(i, j));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479909142/fstmerge_base_2002790036722472701
=======
@Test
    public void testGetRelativeDisplayNameInsideItemGroup() {
        Item i = mock(Item.class);
        when(i.getName()).thenReturn("jobName");
        when(i.getDisplayName()).thenReturn("displayName");
        TopLevelItemAndItemGroup ig = mock(TopLevelItemAndItemGroup.class);
        ItemGroup j = mock(Jenkins.class);
        when(ig.getName()).thenReturn("parent");
        when(ig.getDisplayName()).thenReturn("parentDisplay");
        when(ig.getParent()).thenReturn(j);
        when(i.getParent()).thenReturn(ig);
        Item i2 = mock(Item.class);
        when(i2.getDisplayName()).thenReturn("top");
        when(i2.getParent()).thenReturn(j);

        assertEquals("displayName", Functions.getRelativeDisplayNameFrom(i, ig));
        assertEquals("parentDisplay » displayName", Functions.getRelativeDisplayNameFrom(i, j));
        assertEquals(".. » top", Functions.getRelativeDisplayNameFrom(i2, ig));
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479909142/fstmerge_var2_2789357934934565469

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/test/java/hudson/FunctionsTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479909183/fstmerge_var1_8269444433285929668
@Bug(17030)
    @Test
    public void testBreakableString() {

        assertEquals("Hello world!", Functions.breakableString("Hello world!"));
        assertEquals("H<wbr>,e<wbr>.l<wbr>/l<wbr>:o<wbr>-w<wbr>_o<wbr>=+|d", Functions.breakableString("H,e.l/l:o-w_o=+|d"));
        assertEquals("ALongStrin<wbr>gThatCanNo<wbr>tBeBrokenB<wbr>yDefault", Functions.breakableString("ALongStringThatCanNotBeBrokenByDefault"));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479909183/fstmerge_base_8338505957159606353
=======
@Bug(17030)
    @Test
    public void testBreakableString() {

        assertBrokenAs("Hello world!", "Hello world!");
        assertBrokenAs("Hello-world!", "Hello", "-world!");
        assertBrokenAs("ALongStringThatCanNotBeBrokenByDefaultAndNeedsToUseTheBreakableElement",
                "ALongStringThatCanNo", "tBeBrokenByDefaultAn", "dNeedsToUseTheBreaka", "bleElement");
        assertBrokenAs("DontBreakShortStringBefore-Hyphen", "DontBreakShortStringBefore", "-Hyphen");
        assertBrokenAs("jenkins_main_trunk", "jenkins", "_main", "_trunk");

        assertBrokenAs("&lt;&lt;&lt;&lt;&lt;", "", "&lt;", "&lt;", "&lt;", "&lt;", "&lt;");
        assertBrokenAs("&amp;&amp;&amp;&amp;&amp;", "", "&amp;", "&amp;", "&amp;", "&amp;", "&amp;");
        assertBrokenAs("&thetasym;&thetasym;&thetasym;", "", "&thetasym;", "&thetasym;", "&thetasym;");
        assertBrokenAs("Crazy &lt;ha ha&gt;", "Crazy ", "&lt;ha ha", "&gt;");
        assertBrokenAs("A;String>Full]Of)Weird}Punctuation", "A;String", ">Full", "]Of", ")Weird", "}Punctuation");
        assertBrokenAs("&lt;&lt;a&lt;bc&lt;def&lt;ghi&lt;", "", "&lt;", "&lt;a", "&lt;bc", "&lt;def", "&lt;ghi", "&lt;");
        assertBrokenAs("H,e.l/l:o=w_o+|d", "H", ",e", ".l", "/l", ":o", "=w", "_o", "+|d");
        assertBrokenAs("a¶‱ﻷa¶‱ﻷa¶‱ﻷa¶‱ﻷa¶‱ﻷa¶‱ﻷa¶‱ﻷa¶‱ﻷ", "a¶‱ﻷa¶‱ﻷa¶‱ﻷa¶‱ﻷa¶‱ﻷ", "a¶‱ﻷa¶‱ﻷa¶‱ﻷ");
        assertNull(Functions.breakableString(null));
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479909183/fstmerge_var2_6660073403468706199

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/test/java/hudson/FunctionsTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479909388/fstmerge_var1_1852648251989024415
@Bug(18368)
    public void testDecoratedByEnvMaintainsIsUnix() throws Exception {
        ByteArrayOutputStream output = new ByteArrayOutputStream();
        TaskListener listener = new StreamBuildListener(output);
        Launcher remoteLauncher = new Launcher.RemoteLauncher(listener, Jenkins.MasterComputer.localChannel, false);
        Launcher decorated = remoteLauncher.decorateByEnv(new EnvVars());
        assertEquals(false, decorated.isUnix());
        remoteLauncher = new Launcher.RemoteLauncher(listener, Jenkins.MasterComputer.localChannel, true);
        decorated = remoteLauncher.decorateByEnv(new EnvVars());
        assertEquals(true, decorated.isUnix());
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479909388/fstmerge_base_4919035670564649770
=======
@Bug(18368)
    public void testDecoratedByEnvMaintainsIsUnix() throws Exception {
        ByteArrayOutputStream output = new ByteArrayOutputStream();
        TaskListener listener = new StreamBuildListener(output);
        Launcher remoteLauncher = new Launcher.RemoteLauncher(listener, FilePath.localChannel, false);
        Launcher decorated = remoteLauncher.decorateByEnv(new EnvVars());
        assertEquals(false, decorated.isUnix());
        remoteLauncher = new Launcher.RemoteLauncher(listener, FilePath.localChannel, true);
        decorated = remoteLauncher.decorateByEnv(new EnvVars());
        assertEquals(true, decorated.isUnix());
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479909388/fstmerge_var2_3983846299116265561

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/test/java/hudson/LauncherTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479909393/fstmerge_var1_2997712123052646299
@Bug(18368)
    public void testDecoratedByPrefixMaintainsIsUnix() throws Exception {
        ByteArrayOutputStream output = new ByteArrayOutputStream();
        TaskListener listener = new StreamBuildListener(output);
        Launcher remoteLauncher = new Launcher.RemoteLauncher(listener, Jenkins.MasterComputer.localChannel, false);
        Launcher decorated = remoteLauncher.decorateByPrefix("test");
        assertEquals(false, decorated.isUnix());
        remoteLauncher = new Launcher.RemoteLauncher(listener, Jenkins.MasterComputer.localChannel, true);
        decorated = remoteLauncher.decorateByPrefix("test");
        assertEquals(true, decorated.isUnix());
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479909393/fstmerge_base_8245675914513118796
=======
@Bug(18368)
    public void testDecoratedByPrefixMaintainsIsUnix() throws Exception {
        ByteArrayOutputStream output = new ByteArrayOutputStream();
        TaskListener listener = new StreamBuildListener(output);
        Launcher remoteLauncher = new Launcher.RemoteLauncher(listener, FilePath.localChannel, false);
        Launcher decorated = remoteLauncher.decorateByPrefix("test");
        assertEquals(false, decorated.isUnix());
        remoteLauncher = new Launcher.RemoteLauncher(listener, FilePath.localChannel, true);
        decorated = remoteLauncher.decorateByPrefix("test");
        assertEquals(true, decorated.isUnix());
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479909393/fstmerge_var2_2047033456089029671

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/test/java/hudson/LauncherTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479909415/fstmerge_var1_4172407287988670357
private static boolean includes(String target, String logger) {
        LogRecord r = new LogRecord(Level.INFO, "whatever");
        r.setLoggerName(logger);
        return new LogRecorder.Target(target, Level.INFO).includes(r);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479909415/fstmerge_base_7379786138074284226
=======
private static boolean includes(String target, String logger) {
        LogRecord r = createLogRecord(logger, Level.INFO, "whatever");
        return new LogRecorder.Target(target, Level.INFO).includes(r);
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479909415/fstmerge_var2_7913111178836380498

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/test/java/hudson/logging/LogRecorderTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479909441/fstmerge_var1_3261564718147946045
private TopLevelItem job(final String name) {

        final TopLevelItem item = mock(TopLevelItem.class);

        when(item.getDisplayName()).thenReturn(name);

        return item;
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479909441/fstmerge_base_4157672547573178146
=======
private TopLevelItem job(final String name) {

        final TopLevelItem item = mock(TopLevelItem.class);

        when(item.getName()).thenReturn(name);
        when(item.getDisplayName()).thenReturn(name);

        return item;
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479909441/fstmerge_var2_3251297545823805563

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/test/java/hudson/cli/ListJobsCommandTest.java
Conflict type: LineBasedMCFd
Conflict body: 
@Test
    public void computeRelativeNamesAfterRenaming() {
        assertEquals("meu,bu,zo", Items.computeRelativeNamesAfterRenaming("ga", "meu", "ga,bu,zo", root ));
        assertEquals("ga,bu,zo", Items.computeRelativeNamesAfterRenaming("ga", "meu", "ga,bu,zo", foo_bar ));
        assertEquals("meu,bu,zo", Items.computeRelativeNamesAfterRenaming("foo/ga", "foo/meu", "ga,bu,zo", foo ));

        assertEquals("/meu,/bu,/zo", Items.computeRelativeNamesAfterRenaming("ga", "meu", "/ga,/bu,/zo", root ));
        assertEquals("/meu,/bu,/zo", Items.computeRelativeNamesAfterRenaming("ga", "meu", "/ga,/bu,/zo", foo_bar ));

        assertEquals("../meu,../bu,../zo", Items.computeRelativeNamesAfterRenaming("ga", "meu", "../ga,../bu,../zo", foo ));
        assertEquals("../qux/ga,bu,zo", Items.computeRelativeNamesAfterRenaming("foo/baz", "foo/qux", "../baz/ga,bu,zo", foo_bar ));
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479909635/fstmerge_var1_8839261212266899137

        assertEquals("foo-renamed,foo_bar", Items.computeRelativeNamesAfterRenaming("foo", "foo-renamed", "foo,foo_bar", root ));

||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479909635/fstmerge_base_8632944480683251082
=======

        assertEquals("foo-renamed,foo_bar", Items.computeRelativeNamesAfterRenaming("foo", "foo-renamed", "foo,foo_bar", root ));

        // Handle moves too:
        assertEquals("../nue/dir/j", Items.computeRelativeNamesAfterRenaming("dir", "nue/dir", "../dir/j", foo));
        assertEquals("../dir/j", Items.computeRelativeNamesAfterRenaming("nue/dir", "dir", "../nue/dir/j", foo));
        assertEquals("../top2/dir/j", Items.computeRelativeNamesAfterRenaming("top1/dir", "top2/dir", "../top1/dir/j", foo));
        assertEquals("nue/dir/j", Items.computeRelativeNamesAfterRenaming("dir", "nue/dir", "dir/j", root));
        assertEquals("dir/j", Items.computeRelativeNamesAfterRenaming("nue/dir", "dir", "nue/dir/j", root));
        assertEquals("top2/dir/j", Items.computeRelativeNamesAfterRenaming("top1/dir", "top2/dir", "top1/dir/j", root));
        assertEquals("/nue/dir/j", Items.computeRelativeNamesAfterRenaming("dir", "nue/dir", "/dir/j", foo));
        assertEquals("/dir/j", Items.computeRelativeNamesAfterRenaming("nue/dir", "dir", "/nue/dir/j", foo));
        assertEquals("/top2/dir/j", Items.computeRelativeNamesAfterRenaming("top1/dir", "top2/dir", "/top1/dir/j", foo));
        assertEquals("sister", Items.computeRelativeNamesAfterRenaming("fooq", "foo", "sister", foo));
        assertEquals("/foo/sister", Items.computeRelativeNamesAfterRenaming("fooq", "foo", "/fooq/sister", foo));
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479909635/fstmerge_var2_2455388577815309117
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/test/java/hudson/model/ItemsTest.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479910593/fstmerge_var1_3585940122850027916
@Test public void jdk5() throws IOException {
        assertChecked("java version \"1.5.0_22\"\nJava(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_22-b03)\nJava HotSpot(TM) Server VM (build 1.5.0_22-b03, mixed mode)\n", "1.5.0");
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479910593/fstmerge_base_3262312860070336319
@Test public void jdk5() throws IOException {
        assertChecked("java version \"1.5.0_22\"\nJava(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_22-b03)\nJava HotSpot(TM) Server VM (build 1.5.0_22-b03, mixed mode)\n", "1.5");
=======
@Test(expected=IOException.class) public void jdk5() throws IOException {
        ComputerLauncher.checkJavaVersion(new PrintStream(new NullOutputStream()), "-", new BufferedReader(new StringReader("java version \"1.5.0_22\"\nJava(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_22-b03)\nJava HotSpot(TM) Server VM (build 1.5.0_22-b03, mixed mode)\n")));
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479910593/fstmerge_var2_4671626897114920258
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/test/java/hudson/slaves/ComputerLauncherTest.java
Conflict type: LineBasedMCFd
Conflict body: 
@Test public void checkSanity() throws Exception {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479910751/fstmerge_base_3805158419968482819
        assertEquals(Messages.CronTab_do_you_really_mean_every_minute_when_you("* * * * *", "0 * * * *"), new CronTab("* * * * *").checkSanity());
        assertEquals(null, new CronTab("0 * * * *").checkSanity());
        assertEquals(null, new CronTab("0 3 * * *").checkSanity());
=======
        assertEquals(null, new CronTab("@hourly").checkSanity());
        assertEquals(Messages.CronTab_do_you_really_mean_every_minute_when_you("* * * * *", "H * * * *"), new CronTab("* * * * *").checkSanity());
        assertEquals(Messages.CronTab_do_you_really_mean_every_minute_when_you("*/1 * * * *", "H * * * *"), new CronTab("*/1 * * * *").checkSanity());
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479910751/fstmerge_var2_4339257058539528958
        assertEquals(null, new CronTab("H H(0-2) * * *", Hash.from("stuff")).checkSanity());
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479910751/fstmerge_base_3805158419968482819
        assertEquals(Messages.CronTab_do_you_really_mean_every_minute_when_you("* 0 * * *", "0 0 * * *"), new CronTab("* 0 * * *").checkSanity());
        assertEquals(Messages.CronTab_do_you_really_mean_every_minute_when_you("* 6,18 * * *", "0 6,18 * * *"), new CronTab("* 6,18 * * *").checkSanity());
=======
        assertEquals(Messages.CronTab_do_you_really_mean_every_minute_when_you("* 0 * * *", "H 0 * * *"), new CronTab("* 0 * * *").checkSanity());
        assertEquals(Messages.CronTab_do_you_really_mean_every_minute_when_you("* 6,18 * * *", "H 6,18 * * *"), new CronTab("* 6,18 * * *").checkSanity());
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479910751/fstmerge_var2_4339257058539528958
        // dubious; could be improved:
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479910751/fstmerge_var1_2118137364817580090
        assertEquals(Messages.CronTab_do_you_really_mean_every_minute_when_you("* * 3 * *", "H * 3 * *"), new CronTab("* * 3 * *").checkSanity());
        // promote hashes:
        assertEquals(Messages.CronTab_spread_load_evenly_by_using_rather_than_("H/15 * * * *", "*/15 * * * *"), new CronTab("*/15 * * * *").checkSanity());
        assertEquals(Messages.CronTab_spread_load_evenly_by_using_rather_than_("H/15 * * * *", "0,15,30,45 * * * *"), new CronTab("0,15,30,45 * * * *").checkSanity());
        assertEquals(Messages.CronTab_spread_load_evenly_by_using_rather_than_("H * * * *", "0 * * * *"), new CronTab("0 * * * *").checkSanity());
        assertEquals(Messages.CronTab_spread_load_evenly_by_using_rather_than_("H * * * *", "5 * * * *"), new CronTab("5 * * * *").checkSanity());
        // if the user specifically asked for 3:00 AM, probably we should stick to 3:00–3:59
        assertEquals(Messages.CronTab_spread_load_evenly_by_using_rather_than_("H 3 * * *", "0 3 * * *"), new CronTab("0 3 * * *").checkSanity());
        assertEquals(Messages.CronTab_spread_load_evenly_by_using_rather_than_("H 22 * * 6", "00 22 * * 6"), new CronTab("00 22 * * 6").checkSanity());
        assertEquals(null, new CronTab("H/15 * 1 1 *").checkSanity());
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479910751/fstmerge_base_3805158419968482819
        assertEquals(Messages.CronTab_do_you_really_mean_every_minute_when_you("* * 3 * *", "0 * 3 * *"), new CronTab("* * 3 * *").checkSanity());
=======
        assertEquals(Messages.CronTab_do_you_really_mean_every_minute_when_you("* * 3 * *", "H * 3 * *"), new CronTab("* * 3 * *").checkSanity());
        // promote hashes:
        assertEquals(Messages.CronTab_spread_load_evenly_by_using_rather_than_("H/15 * * * *", "*/15 * * * *"), new CronTab("*/15 * * * *").checkSanity());
        assertEquals(Messages.CronTab_spread_load_evenly_by_using_rather_than_("H/15 * * * *", "0,15,30,45 * * * *"), new CronTab("0,15,30,45 * * * *").checkSanity());
        assertEquals(Messages.CronTab_spread_load_evenly_by_using_rather_than_("H * * * *", "0 * * * *"), new CronTab("0 * * * *").checkSanity());
        assertEquals(Messages.CronTab_spread_load_evenly_by_using_rather_than_("H * * * *", "5 * * * *"), new CronTab("5 * * * *").checkSanity());
        // if the user specifically asked for 3:00 AM, probably we should stick to 3:00–3:59
        assertEquals(Messages.CronTab_spread_load_evenly_by_using_rather_than_("H 3 * * *", "0 3 * * *"), new CronTab("0 3 * * *").checkSanity());
        assertEquals(Messages.CronTab_spread_load_evenly_by_using_rather_than_("H 22 * * 6", "00 22 * * 6"), new CronTab("00 22 * * 6").checkSanity());
        assertEquals(null, new CronTab("H/15 * 1 1 *").checkSanity());
        assertEquals(null, new CronTab("0 3 H/15 * *").checkSanity());
        assertEquals(Messages.CronTab_short_cycles_in_the_day_of_month_field_w(), new CronTab("0 3 H/3 * *").checkSanity());
        assertEquals(Messages.CronTab_short_cycles_in_the_day_of_month_field_w(), new CronTab("0 3 */5 * *").checkSanity());
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479910751/fstmerge_var2_4339257058539528958
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/test/java/hudson/scheduler/CronTabTest.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479910903/fstmerge_var1_6878188776011774323
@Test
    public void testPolicy() {
        assertIntact("<a href='http://www.cloudbees.com'>CB</a>");
        assertIntact("<a href='relative/link'>relative</a>");
        assertIntact("<a href='mailto:kk&#64;kohsuke.org'>myself</a>");
        assertReject("javascript","<a href='javascript:alert(5)'>test</a>");

        assertIntact("<img src='http://www.cloudbees.com'>");
        assertIntact("<img src='relative/test.png'>");
        assertIntact("<img src='relative/test.png'>");
        assertReject("javascript","<img src='javascript:alert(5)'>");

        assertIntact("<b><i><u><strike>basic tag</strike></u></i></b>");
        assertIntact("<div><p>basic block tags</p></div>");

        assertIntact("<ul><li>1</li><li>2</li><li>3</li></ul>");
        assertIntact("<ol><li>x</li></ol>");
        assertIntact("<dl><dt>abc</dt><dd>foo</dd></dl>");
        assertIntact("<table><tr><th>header</th></tr><tr><td>something</td></tr></table>");
        assertIntact("<h1>title</h1><blockquote>blurb</blockquote>");

        assertReject("iframe", "<iframe src='nested'></iframe>");

        assertReject("script","<script>window.alert(5);</script>");
        assertReject("script","<script src='http://foo/evil.js'></script>");
        assertReject("script","<script src='relative.js'></script>");

        assertIntact("<style>H1 { display:none; }</style>");
        assertReject("link", "<link rel='stylesheet' type='text/css' href='http://www.microsoft.com/'>");
        assertIntact("<div style='background-color:white'>inline CSS</div>");
        assertIntact("<br><hr>");

        assertReject("sun.com", "<form method='post' action='http://sun.com/'><input type='text' name='foo'><input type='password' name='pass'></form>");
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479910903/fstmerge_base_1972974348618567858
@Test
    public void testPolicy() {
        assertIntact("<a href='http://www.cloudbees.com'>CB</a>");
        assertIntact("<a href='relative/link'>relative</a>");
        assertIntact("<a href='mailto:kk&#64;kohsuke.org'>myself</a>");
        assertReject("javascript","<a href='javascript:alert(5)'>test</a>");

        assertIntact("<img src='http://www.cloudbees.com'>");
        assertIntact("<img src='relative/test.png'>");
        assertIntact("<img src='relative/test.png'>");
        assertReject("javascript","<img src='javascript:alert(5)'>");

        assertIntact("<b><i><u><strike>basic tag</strike></u></i></b>");
        assertIntact("<div><p>basic block tags</p></div>");

        assertIntact("<ul><li>1</li><li>2</li><li>3</li></ul>");
        assertIntact("<ol><li>x</li></ol>");
        assertIntact("<dl><dt>abc</dt><dd>foo</dd></dl>");
        assertIntact("<table><tr><th>header</th></tr><tr><td>something</td></tr></table>");
        assertIntact("<h1>title</h1><blockquote>blurb</blockquote>");

        assertReject("iframe", "<iframe src='nested'></iframe>");

        assertReject("script","<script>window.alert(5);</script>");
        assertReject("script","<script src='http://foo/evil.js'></script>");
        assertReject("script","<script src='relative.js'></script>");

        assertIntact("<style>H1 { display:none; }</style>");
        assertIntact("<link rel='stylesheet' type='text/css' href='http://www.microsoft.com/'>");
        assertIntact("<div style='background-color:white'>inline CSS</div>");
        assertIntact("<br><hr>");

        assertReject("sun.com", "<form method='post' action='http://sun.com/'><input type='text' name='foo'><input type='password' name='pass'></form>");
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479910903/fstmerge_var2_4363623316549577686

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/test/java/hudson/markup/MyspacePolicyTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479910976/fstmerge_var1_7758219316048077770
@Bug(17681)
    @Test public void symlinks() throws Exception {
        File link = new File(tmp.getRoot(), "link");
        PeepholePermalink.writeSymlink(link, "stuff");
        assertEquals("stuff", PeepholePermalink.readSymlink(link));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479910976/fstmerge_base_4187320672729102972
=======
@Bug(17681)
    @Test public void symlinks() throws Exception {
        File link = new File(tmp.getRoot(), "link");
        PeepholePermalink.writeSymlink(link, "stuff");
        PeepholePermalink.symlinks.clear(); // so we actually test the filesystem
        assertEquals("stuff", PeepholePermalink.readSymlink(link));
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479910976/fstmerge_var2_1121159950908718876

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/test/java/jenkins/model/PeepholePermalinkTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479911104/fstmerge_var1_8429085651041421511
@Test
    public void searchExactWhenIndexedButSoftReferenceExpired() throws IOException {
        final FakeMap m = localExpiredBuilder.add(1, "A").add(2, "B").make();

        // force index creation
        m.entrySet();

        m.search(1, Direction.EXACT).asserts(1, "A");
        assertNull(m.search(3, Direction.EXACT));
        assertNull(m.search(0, Direction.EXACT));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479911104/fstmerge_base_3131679108279386983
=======
@Bug(19418)
    @Test
    public void searchExactWhenIndexedButSoftReferenceExpired() throws IOException {
        final FakeMap m = localExpiredBuilder.add(1, "A").add(2, "B").make();

        // force index creation
        m.entrySet();

        m.search(1, Direction.EXACT).asserts(1, "A");
        assertNull(m.search(3, Direction.EXACT));
        assertNull(m.search(0, Direction.EXACT));
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479911104/fstmerge_var2_5884534465178518262

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/test/java/jenkins/model/lazy/AbstractLazyLoadRunMapTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479911159/fstmerge_var1_6598707652256551941
@Ignore("just calling entrySet triggers loading of every build!")
    @Bug(18065)
    @Test public void all() throws Exception {
        assertEquals("[]", a.getLoadedBuilds().keySet().toString());
        Set<Map.Entry<Integer,Build>> entries = a.entrySet();
        assertEquals("[]", a.getLoadedBuilds().keySet().toString());
        assertFalse(entries.isEmpty());
        assertEquals("[]", a.getLoadedBuilds().keySet().toString());
        assertEquals(5, a.getById("C").n);
        assertEquals("[5]", a.getLoadedBuilds().keySet().toString());
        assertEquals("A", a.getByNumber(1).id);
        assertEquals("[5, 1]", a.getLoadedBuilds().keySet().toString());
        a.purgeCache();
        assertEquals("[]", a.getLoadedBuilds().keySet().toString());
        Iterator<Map.Entry<Integer,Build>> iterator = entries.iterator();
        assertEquals("[]", a.getLoadedBuilds().keySet().toString());
        assertTrue(iterator.hasNext());
        assertEquals("[]", a.getLoadedBuilds().keySet().toString());
        Map.Entry<Integer,Build> entry = iterator.next();
        assertEquals("[]", a.getLoadedBuilds().keySet().toString());
        assertEquals(5, entry.getKey().intValue());
        assertEquals("[]", a.getLoadedBuilds().keySet().toString());
        assertEquals("C", entry.getValue().id);
        assertEquals("[5]", a.getLoadedBuilds().keySet().toString());
        assertTrue(iterator.hasNext());
        entry = iterator.next();
        assertEquals(3, entry.getKey().intValue());
        assertEquals("[5]", a.getLoadedBuilds().keySet().toString());
        assertEquals("B", entry.getValue().id);
        assertEquals("[5, 3]", a.getLoadedBuilds().keySet().toString());
        assertTrue(iterator.hasNext());
        entry = iterator.next();
        assertEquals(1, entry.getKey().intValue());
        assertEquals("[5, 3]", a.getLoadedBuilds().keySet().toString());
        assertEquals("A", entry.getValue().id);
        assertEquals("[5, 3, 1]", a.getLoadedBuilds().keySet().toString());
        assertFalse(iterator.hasNext());
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479911159/fstmerge_base_7370678093824264525
=======
@Bug(18065)
    @Test public void all() throws Exception {
        assertEquals("[]", a.getLoadedBuilds().keySet().toString());
        Set<Map.Entry<Integer,Build>> entries = a.entrySet();
        assertEquals("[]", a.getLoadedBuilds().keySet().toString());
        assertFalse(entries.isEmpty());
        assertEquals("5 since it is the latest, and 3 because, well, .search and pivot is weird", "[5, 3]", a.getLoadedBuilds().keySet().toString());
        assertEquals(5, a.getById("C").n);
        assertEquals("[5, 3]", a.getLoadedBuilds().keySet().toString());
        assertEquals("A", a.getByNumber(1).id);
        assertEquals("[5, 3, 1]", a.getLoadedBuilds().keySet().toString());
        a.purgeCache();
        assertEquals("[]", a.getLoadedBuilds().keySet().toString());
        Iterator<Map.Entry<Integer,Build>> iterator = entries.iterator();
        assertEquals("iterator starts off checking for newest build, so for this crazy logic see above", "[5, 3]", a.getLoadedBuilds().keySet().toString());
        assertTrue(iterator.hasNext());
        assertEquals("[5, 3]", a.getLoadedBuilds().keySet().toString());
        Map.Entry<Integer,Build> entry = iterator.next();
        assertEquals("[5, 3]", a.getLoadedBuilds().keySet().toString());
        assertEquals(5, entry.getKey().intValue());
        assertEquals("[5, 3]", a.getLoadedBuilds().keySet().toString());
        assertEquals("C", entry.getValue().id);
        assertEquals("[5, 3]", a.getLoadedBuilds().keySet().toString());
        assertTrue(iterator.hasNext());
        entry = iterator.next();
        assertEquals(3, entry.getKey().intValue());
        assertEquals(".next() precomputes the one after that too", "[5, 3, 1]", a.getLoadedBuilds().keySet().toString());
        assertEquals("B", entry.getValue().id);
        assertEquals("[5, 3, 1]", a.getLoadedBuilds().keySet().toString());
        assertTrue(iterator.hasNext());
        entry = iterator.next();
        assertEquals(1, entry.getKey().intValue());
        assertEquals("[5, 3, 1]", a.getLoadedBuilds().keySet().toString());
        assertEquals("A", entry.getValue().id);
        assertEquals("[5, 3, 1]", a.getLoadedBuilds().keySet().toString());
        assertFalse(iterator.hasNext());
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479911159/fstmerge_var2_7218289386050923988

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/core/src/test/java/jenkins/model/lazy/AbstractLazyLoadRunMapTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479911329/fstmerge_var1_2967021145209482050
public CLICommandInvoker(final JenkinsRule rule, final CLICommand command) {

        this.rule = rule;
        this.command = command;
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479911329/fstmerge_base_5351250067114204035
=======
public CLICommandInvoker(final JenkinsRule rule, final CLICommand command) {

        if (command.getClass().getAnnotation(Extension.class) == null) {

            throw new AssertionError(String.format(
                    "Command %s is missing @Extension annotation.",
                    command.getClass()
            ));
        }

        this.rule = rule;
        this.command = command;
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479911329/fstmerge_var2_3980409923938154706

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/main/java/hudson/cli/CLICommandInvoker.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479911338/fstmerge_var1_7227463484759455663
public CLICommandInvoker withStdin(final InputStream stdin) {

        this.stdin = stdin;
        return this;
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479911338/fstmerge_base_6499164333685936778
=======
public CLICommandInvoker withStdin(final InputStream stdin) {

        if (stdin == null) throw new NullPointerException("No stdin provided");

        this.stdin = stdin;
        return this;
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479911338/fstmerge_var2_3049350275508374361

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/main/java/hudson/cli/CLICommandInvoker.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479911345/fstmerge_var1_5201816254952526534
private void setAuth() {

        if (permissions.isEmpty()) return;

        JenkinsRule.DummySecurityRealm realm = rule.createDummySecurityRealm();
        realm.addGroups(username, "group");
        rule.jenkins.setSecurityRealm(realm);

        GlobalMatrixAuthorizationStrategy auth = new GlobalMatrixAuthorizationStrategy();
        for(Permission p: permissions) {
            p.setEnabled(true);
            auth.add(p, username);
        }
        rule.jenkins.setAuthorizationStrategy(auth);

        command.setTransportAuth(user().impersonate());
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479911345/fstmerge_base_1681766964980232596
=======
private void setAuth() {

        if (permissions.isEmpty()) return;

        JenkinsRule.DummySecurityRealm realm = rule.createDummySecurityRealm();
        realm.addGroups(username, "group");
        rule.jenkins.setSecurityRealm(realm);

        GlobalMatrixAuthorizationStrategy auth = new GlobalMatrixAuthorizationStrategy();
        for(Permission p: permissions) {
            p.setEnabled(true);
            auth.add(p, username);
        }
        rule.jenkins.setAuthorizationStrategy(auth);

        command.setTransportAuth(user().impersonate());
        // Otherwise it is SYSTEM, which would be relevant for a command overriding main:
        ACL.impersonate(Jenkins.ANONYMOUS);
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479911345/fstmerge_var2_4760589986868520645

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/main/java/hudson/cli/CLICommandInvoker.java
Conflict type: ImplementList
Conflict body: 
~~FSTMerge~~ implements ModifiableTopLevelItemGroup, TopLevelItem, ViewGroup, StaplerFallback ##FSTMerge## implements ModifiableTopLevelItemGroup, TopLevelItem ##FSTMerge## implements DirectlyModifiableTopLevelItemGroup, TopLevelItem, ModifiableViewGroup, StaplerFallback
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/main/java/org/jvnet/hudson/test/MockFolder.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479911458/fstmerge_var1_3968815165939215120
public void addView(View view) throws IOException {
        vgmixin().addView(view);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479911458/fstmerge_base_4403224953589379623
=======
@Override public void addView(View view) throws IOException {
        vgmixin().addView(view);
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479911458/fstmerge_var2_8370911975459657852

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/main/java/org/jvnet/hudson/test/MockFolder.java
Conflict type: LineBasedMCFd
Conflict body: 
protected MavenInstallation configureDefaultMaven(String mavenVersion, int mavenReqVersion) throws Exception {
        // Does it exists in the buildDirectory - i.e. already extracted from previous test?
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479911863/fstmerge_base_7531892955388904733
        // see maven-junit-plugin systemProperties: buildDirectory -> ${project.build.directory} (so no reason to be null ;-) )
        String buildDirectory = System.getProperty( "buildDirectory", "./target/classes/" );
        File mavenAlreadyInstalled = new File(buildDirectory, mavenVersion);
        if (mavenAlreadyInstalled.exists()) {
            MavenInstallation mavenInstallation = new MavenInstallation("default",mavenAlreadyInstalled.getAbsolutePath(), NO_PROPERTIES);
=======
        // defined in jenkins-test-harness POM, but not plugins; TODO should not use relative paths as we do not know what CWD is
        File buildDirectory = new File(System.getProperty("buildDirectory", "target"));
        File mvnHome = new File(buildDirectory, mavenVersion);
        if (mvnHome.exists()) {
            MavenInstallation mavenInstallation = new MavenInstallation("default", mvnHome.getAbsolutePath(), NO_PROPERTIES);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479911863/fstmerge_var2_2170676545803034623
            jenkins.getDescriptorByType(Maven.DescriptorImpl.class).setInstallations(mavenInstallation);
            return mavenInstallation;
        }
        
        // Does maven.home point to a Maven installation which satisfies mavenReqVersion?
        String home = System.getProperty("maven.home");
        if(home!=null) {
            MavenInstallation mavenInstallation = new MavenInstallation("default",home, NO_PROPERTIES);
            if (mavenInstallation.meetsMavenReqVersion(createLocalLauncher(), mavenReqVersion)) {
                jenkins.getDescriptorByType(Maven.DescriptorImpl.class).setInstallations(mavenInstallation);
                return mavenInstallation;
            }
        }

        // otherwise extract the copy we have.
        // this happens when a test is invoked from an IDE, for example.
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479911863/fstmerge_base_7531892955388904733
        LOGGER.warning("Extracting a copy of Maven bundled in the test harness. " +
=======
        LOGGER.warning("Extracting a copy of Maven bundled in the test harness into " + mvnHome + ". " +
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479911863/fstmerge_var2_2170676545803034623
                "To avoid a performance hit, set the system property 'maven.home' to point to a Maven2 installation.");
        FilePath mvn = jenkins.getRootPath().createTempFile("maven", "zip");
        mvn.copyFrom(HudsonTestCase.class.getClassLoader().getResource(mavenVersion + "-bin.zip"));
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479911863/fstmerge_base_7531892955388904733
        File mvnHome =  new File(buildDirectory);
        mvn.unzip(new FilePath(mvnHome));
=======
        mvn.unzip(new FilePath(buildDirectory));
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479911863/fstmerge_var2_2170676545803034623
        // TODO: switch to tar that preserves file permissions more easily
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479911863/fstmerge_var1_8461687204998881937
        if(!Functions.isWindows())
            GNUCLibrary.LIBC.chmod(new File(mvnHome, "bin/mvn").getPath(),0755);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479911863/fstmerge_base_7531892955388904733
        if(!Functions.isWindows())
            GNUCLibrary.LIBC.chmod(new File(mvnHome,mavenVersion+"/bin/mvn").getPath(),0755);
=======
        if(!Functions.isWindows()) {
            PosixAPI.jnr().chmod(new File(mvnHome, "bin/mvn").getPath(), 0755);
        }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479911863/fstmerge_var2_2170676545803034623

        MavenInstallation mavenInstallation = new MavenInstallation("default",
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479911863/fstmerge_base_7531892955388904733
                new File(mvnHome,mavenVersion).getAbsolutePath(), NO_PROPERTIES);
=======
                mvnHome.getAbsolutePath(), NO_PROPERTIES);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479911863/fstmerge_var2_2170676545803034623
		jenkins.getDescriptorByType(Maven.DescriptorImpl.class).setInstallations(mavenInstallation);
		return mavenInstallation;
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/main/java/org/jvnet/hudson/test/HudsonTestCase.java
Conflict type: LineBasedMCFd
Conflict body: 
~~FSTMerge~~ protected String contextPath = "/jenkins"; ##FSTMerge## protected String contextPath = ""; ##FSTMerge## public String contextPath = "/jenkins";
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/main/java/org/jvnet/hudson/test/JenkinsRule.java
Conflict type: LineBasedMCFd
Conflict body: 
public void before() throws Throwable {
        // Not ideal (https://github.com/junit-team/junit/issues/116) but basically works.
        if (Boolean.getBoolean("ignore.random.failures")) {
            RandomlyFails rf = testDescription.getAnnotation(RandomlyFails.class);
            if (rf != null) {
                throw new AssumptionViolatedException("Known to randomly fail: " + rf.value());
            }
        }

        env = new TestEnvironment(testDescription);
        env.pin();
        recipe();
        AbstractProject.WORKSPACE.toString();
        User.clear();


        try {
            jenkins = hudson = newHudson();
        } catch (Exception e) {
            // if Hudson instance fails to initialize, it leaves the instance field non-empty and break all the rest of the tests, so clean that up.
            Field f = Jenkins.class.getDeclaredField("theInstance");
            f.setAccessible(true);
            f.set(null,null);
            throw e;
        }
        jenkins.setNoUsageStatistics(true); // collecting usage stats from tests are pointless.

        jenkins.setCrumbIssuer(new TestCrumbIssuer());

        jenkins.servletContext.setAttribute("app",jenkins);
        jenkins.servletContext.setAttribute("version","?");
        WebAppMain.installExpressionFactory(new ServletContextEvent(jenkins.servletContext));

        // set a default JDK to be the one that the harness is using.
        jenkins.getJDKs().add(new JDK("default",System.getProperty("java.home")));

        configureUpdateCenter();

        // expose the test instance as a part of URL tree.
        // this allows tests to use a part of the URL space for itself.
        jenkins.getActions().add(this);

<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479913150/fstmerge_var1_2946938437251742866
        // cause all the descriptors to reload.
        // ideally we'd like to reset them to properly emulate the behavior, but that's not possible.
        Mailer.DescriptorImpl desc = Mailer.descriptor();
        // prevent NPE with eclipse
        if (desc != null) Mailer.descriptor().setHudsonUrl(getURL().toString());
        JenkinsLocationConfiguration.get().setUrl(getURL().toString());
        for( Descriptor d : jenkins.getExtensionList(Descriptor.class) )
            d.load();
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479913150/fstmerge_base_4547408158688526273
        // cause all the descriptors to reload.
        // ideally we'd like to reset them to properly emulate the behavior, but that's not possible.
        Mailer.DescriptorImpl desc = Mailer.descriptor();
        // prevent NPE with eclipse
        if (desc != null) Mailer.descriptor().setHudsonUrl(null);
        for( Descriptor d : jenkins.getExtensionList(Descriptor.class) )
            d.load();
=======
        JenkinsLocationConfiguration.get().setUrl(getURL().toString());
        
        setUpTimeout();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479913150/fstmerge_var2_2331262906152364251
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/main/java/org/jvnet/hudson/test/JenkinsRule.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479913164/fstmerge_var1_6083142813650774492
protected void after() throws Exception {
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479913164/fstmerge_base_3863788796140432279
protected void after() {
=======
public void after() throws Exception {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479913164/fstmerge_var2_629466780577954652
        try {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479913164/fstmerge_var1_6083142813650774492
            for (EndOfTestListener tl : jenkins.getExtensionList(EndOfTestListener.class))
                tl.onTearDown();

||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479913164/fstmerge_base_3863788796140432279
=======
            if (jenkins!=null) {
                for (EndOfTestListener tl : jenkins.getExtensionList(EndOfTestListener.class))
                    tl.onTearDown();
            }

>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479913164/fstmerge_var2_629466780577954652
            if (timeoutTimer!=null) {
                timeoutTimer.cancel();
                timeoutTimer = null;
            }

            // cancel pending asynchronous operations, although this doesn't really seem to be working
            for (WebClient client : clients) {
                // unload the page to cancel asynchronous operations
                try {
                    client.getPage("about:blank");
                } catch (IOException e) {
                    // ignore
                }
                client.closeAllWindows();
            }
            clients.clear();

<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479913164/fstmerge_base_3863788796140432279
            for (Channel c : channels)
                try {
                    c.close();
                } catch (IOException e) {
                    // ignore
                }
            for (Channel c : channels)
                try {
                    c.join();
                } catch (InterruptedException e) {
                    // ignore
                }
            channels.clear();

=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479913164/fstmerge_var2_629466780577954652
        } finally {
            try {
                server.stop();
            } catch (Exception e) {
                // ignore
            }
            for (LenientRunnable r : tearDowns)
                try {
                    r.run();
                } catch (Exception e) {
                    // ignore
                }

            if (jenkins!=null)
                jenkins.cleanUp();
            ExtensionList.clearLegacyInstances();
            DescriptorExtensionList.clearLegacyInstances();

            try {
                env.dispose();
            } catch (Exception x) {
                x.printStackTrace();
            }

            // Hudson creates ClassLoaders for plugins that hold on to file descriptors of its jar files,
            // but because there's no explicit dispose method on ClassLoader, they won't get GC-ed until
            // at some later point, leading to possible file descriptor overflow. So encourage GC now.
            // see http://bugs.sun.com/view_bug.do?bug_id=4950148
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479913164/fstmerge_base_3863788796140432279
            // XXX use URLClassLoader.close() in Java 7
=======
            // TODO use URLClassLoader.close() in Java 7
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479913164/fstmerge_var2_629466780577954652
            System.gc();
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/main/java/org/jvnet/hudson/test/JenkinsRule.java
Conflict type: LineBasedMCFd
Conflict body: 
public Maven.MavenInstallation configureDefaultMaven(String mavenVersion, int mavenReqVersion) throws Exception {
        // first if we are running inside Maven, pick that Maven, if it meets the criteria we require..
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479913232/fstmerge_base_2512399840205155775
        // does it exists in the buildDirectory see maven-junit-plugin systemProperties
        // buildDirectory -> ${project.build.directory} (so no reason to be null ;-) )
        String buildDirectory = System.getProperty( "buildDirectory", "./target/classes/" );
        File mavenAlreadyInstalled = new File(buildDirectory, mavenVersion);
        if (mavenAlreadyInstalled.exists()) {
            Maven.MavenInstallation
                    mavenInstallation = new Maven.MavenInstallation("default",mavenAlreadyInstalled.getAbsolutePath(), NO_PROPERTIES);
=======
        File buildDirectory = new File(System.getProperty("buildDirectory", "target")); // TODO relative path
        File mvnHome = new File(buildDirectory, mavenVersion);
        if (mvnHome.exists()) {
            Maven.MavenInstallation mavenInstallation = new Maven.MavenInstallation("default", mvnHome.getAbsolutePath(), NO_PROPERTIES);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479913232/fstmerge_var2_2217296419375462903
            jenkins.getDescriptorByType(Maven.DescriptorImpl.class).setInstallations(mavenInstallation);
            return mavenInstallation;
        }

        // Does maven.home point to a Maven installation which satisfies mavenReqVersion?
        String home = System.getProperty("maven.home");
        if(home!=null) {
            Maven.MavenInstallation mavenInstallation = new Maven.MavenInstallation("default",home, NO_PROPERTIES);
            if (mavenInstallation.meetsMavenReqVersion(createLocalLauncher(), mavenReqVersion)) {
                jenkins.getDescriptorByType(Maven.DescriptorImpl.class).setInstallations(mavenInstallation);
                return mavenInstallation;
            }
        }

        // otherwise extract the copy we have.
        // this happens when a test is invoked from an IDE, for example.
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479913232/fstmerge_base_2512399840205155775
        LOGGER.warning("Extracting a copy of Maven bundled in the test harness. " +
=======
        LOGGER.warning("Extracting a copy of Maven bundled in the test harness into " + mvnHome + ". " +
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479913232/fstmerge_var2_2217296419375462903
                "To avoid a performance hit, set the system property 'maven.home' to point to a Maven2 installation.");
        FilePath mvn = jenkins.getRootPath().createTempFile("maven", "zip");
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479913232/fstmerge_var1_5594471702569122886
        mvn.copyFrom(HudsonTestCase.class.getClassLoader().getResource(mavenVersion + "-bin.zip"));
        mvn.unzip(new FilePath(buildDirectory));
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479913232/fstmerge_base_2512399840205155775
        mvn.copyFrom(HudsonTestCase.class.getClassLoader().getResource(mavenVersion + "-bin.zip"));
        File mvnHome =  new File(buildDirectory);//createTmpDir();
        mvn.unzip(new FilePath(mvnHome));
=======
        mvn.copyFrom(JenkinsRule.class.getClassLoader().getResource(mavenVersion + "-bin.zip"));
        mvn.unzip(new FilePath(buildDirectory));
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479913232/fstmerge_var2_2217296419375462903
        // TODO: switch to tar that preserves file permissions more easily
        if(!Functions.isWindows())
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479913232/fstmerge_base_2512399840205155775
            GNUCLibrary.LIBC.chmod(new File(mvnHome,mavenVersion+"/bin/mvn").getPath(),0755);
=======
            GNUCLibrary.LIBC.chmod(new File(mvnHome, "bin/mvn").getPath(),0755);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479913232/fstmerge_var2_2217296419375462903

        Maven.MavenInstallation mavenInstallation = new Maven.MavenInstallation("default",
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479913232/fstmerge_base_2512399840205155775
                new File(mvnHome,mavenVersion).getAbsolutePath(), NO_PROPERTIES);
=======
                mvnHome.getAbsolutePath(), NO_PROPERTIES);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479913232/fstmerge_var2_2217296419375462903
		jenkins.getDescriptorByType(Maven.DescriptorImpl.class).setInstallations(mavenInstallation);
		return mavenInstallation;
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/main/java/org/jvnet/hudson/test/JenkinsRule.java
Conflict type: LineBasedMCFd
Conflict body: 
public void recipeLoadCurrentPlugin() throws Exception {
    	final Enumeration<URL> jpls = getClass().getClassLoader().getResources("the.jpl");
        final Enumeration<URL> hpls = getClass().getClassLoader().getResources("the.hpl");

        final List<URL> all = Collections.list(jpls);
        all.addAll(Collections.list(hpls));
        
        if(all.isEmpty())    return; // nope
        
        recipes.add(new JenkinsRecipe.Runner() {
            private File home;
            private final List<Jpl> jpls = new ArrayList<Jpl>();

            @Override
            public void decorateHome(JenkinsRule testCase, File home) throws Exception {
                this.home = home;
                this.jpls.clear();

            	for (URL hpl : all) {
                    Jpl jpl = new Jpl(hpl);
                    jpl.loadManifest();
                    jpls.add(jpl);
                }

                for (Jpl jpl : jpls) {
                    jpl.resolveDependencies();
                }
            }

            class Jpl {
                final URL jpl;
                Manifest m;
                private String shortName;

                Jpl(URL jpl) {
                    this.jpl = jpl;
                }

                void loadManifest() throws IOException {
                    m = new Manifest(jpl.openStream());
                    shortName = m.getMainAttributes().getValue("Short-Name");
                    if(shortName ==null)
                        throw new Error(jpl +" doesn't have the Short-Name attribute");
                    FileUtils.copyURLToFile(jpl, new File(home, "plugins/" + shortName + ".jpl"));
                }

                void resolveDependencies() throws Exception {
                    // make dependency plugins available
                    // TODO: probably better to read POM, but where to read from?
                    // TODO: this doesn't handle transitive dependencies

                    // Tom: plugins are now searched on the classpath first. They should be available on
                    // the compile or test classpath. As a backup, we do a best-effort lookup in the Maven repository
                    // For transitive dependencies, we could evaluate Plugin-Dependencies transitively.
                    String dependencies = m.getMainAttributes().getValue("Plugin-Dependencies");
                    if(dependencies!=null) {
                        DEPENDENCY:
                        for( String dep : dependencies.split(",")) {
                            String suffix = ";resolution:=optional";
                            boolean optional = dep.endsWith(suffix);
                            if (optional) {
                                dep = dep.substring(0, dep.length() - suffix.length());
                            }
                            String[] tokens = dep.split(":");
                            String artifactId = tokens[0];
                            String version = tokens[1];

                            for (Jpl other : jpls) {
                                if (other.shortName.equals(artifactId))
                                    continue DEPENDENCY;    // resolved from another JPL file
                            }

                            File dependencyJar=resolveDependencyJar(artifactId,version);
                            if (dependencyJar == null) {
                                if (optional) {
                                    System.err.println("cannot resolve optional dependency " + dep + " of " + shortName + "; skipping");
                                    continue;
                                }
                                throw new IOException("Could not resolve " + dep + " in " + System.getProperty("java.class.path"));
                            }

                            File dst = new File(home, "plugins/" + artifactId + ".jpi");
                            if(!dst.exists() || dst.lastModified()!=dependencyJar.lastModified()) {
                                FileUtils.copyFile(dependencyJar, dst);
                            }
                        }
                    }
                }
            }

            /**
             * Lazily created embedder.
             */
            private MavenEmbedder embedder;

            private MavenEmbedder getMavenEmbedder() throws MavenEmbedderException, IOException {
                if (embedder==null)
                    embedder = MavenUtil.createEmbedder(new StreamTaskListener(System.out, Charset.defaultCharset()),
                                                    (File) null, null);
                return embedder;
            }

            private @CheckForNull File resolveDependencyJar(String artifactId, String version) throws Exception {
                // try to locate it from manifest
                Enumeration<URL> manifests = getClass().getClassLoader().getResources("META-INF/MANIFEST.MF");
                while (manifests.hasMoreElements()) {
                    URL manifest = manifests.nextElement();
                    InputStream is = manifest.openStream();
                    Manifest m = new Manifest(is);
                    is.close();

                    if (artifactId.equals(m.getMainAttributes().getValue("Short-Name")))
                        return Which.jarFile(manifest);
                }

                // For snapshot plugin dependencies, an IDE may have replaced ~/.m2/repository/…/${artifactId}.hpi with …/${artifactId}-plugin/target/classes/
                // which unfortunately lacks META-INF/MANIFEST.MF so try to find index.jelly (which every plugin should include) and thus the ${artifactId}.hpi:
                Enumeration<URL> jellies = getClass().getClassLoader().getResources("index.jelly");
                while (jellies.hasMoreElements()) {
                    URL jellyU = jellies.nextElement();
                    if (jellyU.getProtocol().equals("file")) {
                        File jellyF = new File(jellyU.toURI());
                        File classes = jellyF.getParentFile();
                        if (classes.getName().equals("classes")) {
                            File target = classes.getParentFile();
                            if (target.getName().equals("target")) {
                                File hpi = new File(target, artifactId + ".hpi");
                                if (hpi.isFile()) {
                                    return hpi;
                                }
                            }
                        }
                    }
                }

                // need to search multiple group IDs
                // TODO: extend manifest to include groupID:artifactID:version
                Exception resolutionError=null;
                for (String groupId : PLUGIN_GROUPIDS) {

                    // first try to find it on the classpath.
                    // this takes advantage of Maven POM located in POM
                    URL dependencyPomResource = getClass().getResource("/META-INF/maven/"+groupId+"/"+artifactId+"/pom.xml");
                    if (dependencyPomResource != null) {
                        // found it
                        return Which.jarFile(dependencyPomResource);
                    } else {

                    	try {
                    		// currently the most of the plugins are still hpi
                            return resolvePluginFile(artifactId, version, groupId, "hpi");
                    	} catch(AbstractArtifactResolutionException x){
                    		try {
                    			// but also try with the new jpi
                    		    return resolvePluginFile(artifactId, version, groupId, "jpi");
                    		} catch(AbstractArtifactResolutionException x2){
                                // could be a wrong groupId
                                resolutionError = x;
                    		}
                    	}

                    }
                }

                throw new Exception("Failed to resolve plugin: "+artifactId+" version "+version,resolutionError);
            }
            
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479913566/fstmerge_var1_1883791089934612227
            private File resolvePluginFile(MavenEmbedder embedder, String artifactId, String version, String groupId, String type)
					throws MavenEmbedderException, ComponentLookupException, AbstractArtifactResolutionException {
				final Artifact jpi = embedder.createArtifact(groupId, artifactId, version, "compile"/*doesn't matter*/, type);
				embedder.resolve(jpi, Arrays.asList(embedder.createRepository("http://maven.glassfish.org/content/groups/public/","repo")),embedder.getLocalRepository());
                if (jpi.getFile() == null) {
                    throw new ArtifactNotFoundException("cannot find plugin dependency", jpi);
                }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479913566/fstmerge_base_7869604887941994515
            private File resolvePluginFile(MavenEmbedder embedder, String artifactId, String version, String groupId, String type)
					throws MavenEmbedderException, ComponentLookupException, AbstractArtifactResolutionException {
				final Artifact jpi = embedder.createArtifact(groupId, artifactId, version, "compile"/*doesn't matter*/, type);
				embedder.resolve(jpi, Arrays.asList(embedder.createRepository("http://maven.glassfish.org/content/groups/public/","repo")),embedder.getLocalRepository());
=======
            private @CheckForNull File resolvePluginFile(String artifactId, String version, String groupId, String type) throws Exception {
				final Artifact jpi = getMavenEmbedder().createArtifact(groupId, artifactId, version, "compile"/*doesn't matter*/, type);
                getMavenEmbedder().resolve(jpi,
                        Arrays.asList(getMavenEmbedder().createRepository("http://maven.glassfish.org/content/groups/public/", "repo")), embedder.getLocalRepository());
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479913566/fstmerge_var2_3442856658173467281
				return jpi.getFile();
				
			}
        });
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/main/java/org/jvnet/hudson/test/JenkinsRule.java
Conflict type: LineBasedMCFd
Conflict body: 
public WebClient login(String username, String password) throws Exception {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479913609/fstmerge_var1_273204128971099594
            HtmlPage page = goTo("login");
//            page = (HtmlPage) page.getFirstAnchorByText("Login").click();

            HtmlForm form = page.getFormByName("login");
            form.getInputByName("j_username").setValueAttribute(username);
            form.getInputByName("j_password").setValueAttribute(password);
            form.submit(null);
            return this;
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479913609/fstmerge_base_4712605784243440735
            HtmlPage page = goTo("/login");
//            page = (HtmlPage) page.getFirstAnchorByText("Login").click();

            HtmlForm form = page.getFormByName("login");
            form.getInputByName("j_username").setValueAttribute(username);
            form.getInputByName("j_password").setValueAttribute(password);
            form.submit(null);
            return this;
=======
            return login(username,password,false);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479913609/fstmerge_var2_9210031446248084721
        }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/main/java/org/jvnet/hudson/test/JenkinsRule.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479913668/fstmerge_var1_1798289195303556947
public Page goTo(String relative, String expectedContentType) throws IOException, SAXException {
            assert !relative.startsWith("/");
            Page p = super.getPage(getContextPath() + relative);
            assertThat(p.getWebResponse().getContentType(), is(expectedContentType));
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479913668/fstmerge_base_5249700094134287347
public Page goTo(String relative, String expectedContentType) throws IOException, SAXException {
            Page p = super.getPage(getContextPath() + relative);
            assertThat(p.getWebResponse().getContentType(), is(expectedContentType));
=======
public Page goTo(String relative, @CheckForNull String expectedContentType) throws IOException, SAXException {
            assert !relative.startsWith("/");
            Page p;
            try {
                p = super.getPage(getContextPath() + relative);
            } catch (IOException x) {
                Throwable cause = x.getCause();
                if (cause instanceof SocketTimeoutException) {
                    throw new AssumptionViolatedException("failed to get " + relative + " due to read timeout", cause);
                } else if (cause != null) {
                    cause.printStackTrace(); // SUREFIRE-1067 workaround
                }
                throw x;
            }
            if (expectedContentType != null) {
                assertThat(p.getWebResponse().getContentType(), is(expectedContentType));
            }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479913668/fstmerge_var2_747290546725050601
            return p;
        }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/main/java/org/jvnet/hudson/test/JenkinsRule.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914085/fstmerge_var1_7550500897828773196
@LocalData
    @Bug(18654)
    public void testDisabledDependencyClassLoader() throws Exception {
        PluginWrapper p = jenkins.getPluginManager().getPlugin("foo4");

        Enumeration<URL> en = p.classLoader.getResources("index.jelly");
        for (int i = 0; en.hasMoreElements(); i++) {
            String res = en.nextElement().toString();
            if (i == 0)
                assertTrue("expected foo4, found "+res , res.contains("/foo4/"));
            else
                fail("disabled dependency should not be included");
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914085/fstmerge_base_7329769490305208624
=======
@LocalData
    @Bug(18654)
    public void testDisabledDependencyClassLoader() throws Exception {
        PluginWrapper p = jenkins.getPluginManager().getPlugin("foo4");

        Enumeration<URL> en = p.classLoader.getResources("test-resource");
        for (int i = 0; en.hasMoreElements(); i++) {
            String res = en.nextElement().toString();
            if (i == 0)
                assertTrue("expected foo4, found "+res , res.contains("/foo4/"));
            else
                fail("disabled dependency should not be included");
        }
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914085/fstmerge_var2_5332205905937011601

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/ClassicPluginStrategyTest.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914166/fstmerge_var1_6891239026758317792
public void testPrevalidateConfig() throws Exception {
        PersistedList<UpdateSite> sites = jenkins.getUpdateCenter().getSites();
        sites.clear();
        URL url = PluginManagerTest.class.getResource("/plugins/tasks-update-center.json");
        UpdateSite site = new UpdateSite(UpdateCenter.ID_DEFAULT, url.toString());
        sites.add(site);
        assertEquals(FormValidation.ok(), site.updateDirectly(false).get());
        assertNotNull(site.getData());
        assertEquals(Collections.emptyList(), jenkins.getPluginManager().prevalidateConfig(new StringInputStream("<whatever><runant plugin=\"ant@1.1\"/></whatever>")));
        assertNull(jenkins.getPluginManager().getPlugin("tasks"));
        List<Future<UpdateCenterJob>> jobs = jenkins.getPluginManager().prevalidateConfig(new StringInputStream("<whatever><tasks plugin=\"tasks@2.23\"/></whatever>"));
        assertEquals(1, jobs.size());
        UpdateCenterJob job = jobs.get(0).get(); // blocks for completion
        assertEquals("InstallationJob", job.getType());
        UpdateCenter.InstallationJob ijob = (UpdateCenter.InstallationJob) job;
        assertEquals("tasks", ijob.plugin.name);
        assertNotNull(jenkins.getPluginManager().getPlugin("tasks"));
        // TODO restart scheduled (SuccessButRequiresRestart) after upgrade or Support-Dynamic-Loading: false
        // TODO dependencies installed or upgraded too
        // TODO required plugin installed but inactive
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914166/fstmerge_base_219189455189941545
public void testPrevalidateConfig() throws Exception {
        PersistedList<UpdateSite> sites = jenkins.getUpdateCenter().getSites();
        sites.clear();
        URL url = PluginManagerTest.class.getResource("/plugins/tasks-update-center.json");
        UpdateSite site = new UpdateSite(UpdateCenter.ID_DEFAULT, url.toString());
        sites.add(site);
        assertEquals(FormValidation.ok(), site.updateDirectly(false).get());
        assertNotNull(site.getData());
        assertEquals(Collections.emptyList(), jenkins.getPluginManager().prevalidateConfig(new StringInputStream("<whatever><runant plugin=\"ant@1.1\"/></whatever>")));
        assertNull(jenkins.getPluginManager().getPlugin("tasks"));
        List<Future<UpdateCenterJob>> jobs = jenkins.getPluginManager().prevalidateConfig(new StringInputStream("<whatever><tasks plugin=\"tasks@2.23\"/></whatever>"));
        assertEquals(1, jobs.size());
        UpdateCenterJob job = jobs.get(0).get(); // blocks for completion
        assertEquals("InstallationJob", job.getType());
        UpdateCenter.InstallationJob ijob = (UpdateCenter.InstallationJob) job;
        assertEquals("tasks", ijob.plugin.name);
        assertNotNull(jenkins.getPluginManager().getPlugin("tasks"));
        // XXX restart scheduled (SuccessButRequiresRestart) after upgrade or Support-Dynamic-Loading: false
        // XXX dependencies installed or upgraded too
        // XXX required plugin installed but inactive
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914166/fstmerge_var2_5624795695000233851

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/PluginManagerTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914278/fstmerge_var1_844309161845733761
@Test public void createNodeShouldFailWithoutComputerCreatePermission() throws Exception {

        final CLICommandInvoker.Result result = command
                .authorizedTo(Jenkins.READ)
                .withStdin(Computer.class.getResourceAsStream("node.xml"))
                .invoke()
        ;

        assertThat(result.stderr(), containsString("user is missing the Slave/Create permission"));
        assertThat("No output expected", result.stdout(), isEmptyString());
        assertThat("Command is expected to fail", result.returnCode(), equalTo(-1));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914278/fstmerge_base_2442845304064076542
=======
@Test public void createNodeShouldFailWithoutComputerCreatePermission() throws Exception {

        final CLICommandInvoker.Result result = command
                .authorizedTo(Jenkins.READ)
                .withStdin(Computer.class.getResourceAsStream("node.xml"))
                .invoke()
        ;

        assertThat(result.stderr(), containsString("user is missing the Slave/Create permission"));
        assertThat(result, hasNoStandardOutput());
        assertThat(result, failedWith(-1));
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914278/fstmerge_var2_6023404048546662243

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/cli/CreateNodeCommandTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914283/fstmerge_var1_4484751466652867276
@Test public void createNode() throws Exception {

        final CLICommandInvoker.Result result = command
                .authorizedTo(Computer.CREATE, Jenkins.READ)
                .withStdin(Computer.class.getResourceAsStream("node.xml"))
                .invoke()
        ;

        assertThat("No error output expected", result.stderr(), isEmptyString());
        assertThat("Command is expected to succeed", result.returnCode(), equalTo(0));

        final Slave updatedSlave = (Slave) j.jenkins.getNode("SlaveFromXML");
        assertThat(updatedSlave.getNodeName(), equalTo("SlaveFromXML"));
        assertThat(updatedSlave.getNumExecutors(), equalTo(42));
        assertThat(updatedSlave.getUserId(), equalTo(command.user().getId()));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914283/fstmerge_base_2826018564028894124
=======
@Test public void createNode() throws Exception {

        final CLICommandInvoker.Result result = command
                .authorizedTo(Computer.CREATE, Jenkins.READ)
                .withStdin(Computer.class.getResourceAsStream("node.xml"))
                .invoke()
        ;

        assertThat(result, succeededSilently());

        final Slave updatedSlave = (Slave) j.jenkins.getNode("SlaveFromXML");
        assertThat(updatedSlave.getNodeName(), equalTo("SlaveFromXML"));
        assertThat(updatedSlave.getNumExecutors(), equalTo(42));
        assertThat(updatedSlave.getUserId(), equalTo(command.user().getId()));
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914283/fstmerge_var2_7677368687928239805

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/cli/CreateNodeCommandTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914286/fstmerge_var1_393438349563980060
@Test public void createNodeSpecifyingNameExplicitly() throws Exception {

        final CLICommandInvoker.Result result = command
                .authorizedTo(Computer.CREATE, Jenkins.READ)
                .withStdin(Computer.class.getResourceAsStream("node.xml"))
                .invokeWithArgs("CustomSlaveName")
        ;

        assertThat("No error output expected", result.stderr(), isEmptyString());
        assertThat("Command is expected to succeed", result.returnCode(), equalTo(0));

        assertThat("A slave with original name should not exist", j.jenkins.getNode("SlaveFromXml"), nullValue());

        final Slave updatedSlave = (Slave) j.jenkins.getNode("CustomSlaveName");
        assertThat(updatedSlave.getNodeName(), equalTo("CustomSlaveName"));
        assertThat(updatedSlave.getNumExecutors(), equalTo(42));
        assertThat(updatedSlave.getUserId(), equalTo(command.user().getId()));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914286/fstmerge_base_1644829725025117782
=======
@Test public void createNodeSpecifyingNameExplicitly() throws Exception {

        final CLICommandInvoker.Result result = command
                .authorizedTo(Computer.CREATE, Jenkins.READ)
                .withStdin(Computer.class.getResourceAsStream("node.xml"))
                .invokeWithArgs("CustomSlaveName")
        ;

        assertThat(result, succeededSilently());

        assertThat("A slave with original name should not exist", j.jenkins.getNode("SlaveFromXml"), nullValue());

        final Slave updatedSlave = (Slave) j.jenkins.getNode("CustomSlaveName");
        assertThat(updatedSlave.getNodeName(), equalTo("CustomSlaveName"));
        assertThat(updatedSlave.getNumExecutors(), equalTo(42));
        assertThat(updatedSlave.getUserId(), equalTo(command.user().getId()));
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914286/fstmerge_var2_6294743448505177478

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/cli/CreateNodeCommandTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914290/fstmerge_var1_7179461695367361719
@Test public void createNodeSpecifyingDifferentNameExplicitly() throws Exception {

        final Node originalSlave = j.createSlave("SlaveFromXml", null, null);

        final CLICommandInvoker.Result result = command
                .authorizedTo(Computer.CREATE, Jenkins.READ)
                .withStdin(Computer.class.getResourceAsStream("node.xml"))
                .invokeWithArgs("CustomSlaveName")
        ;

        assertThat("No error output expected", result.stderr(), isEmptyString());
        assertThat("Command is expected to succeed", result.returnCode(), equalTo(0));

        assertThat("A slave with original name should be left untouched", j.jenkins.getNode("SlaveFromXml"), equalTo(originalSlave));

        final Slave updatedSlave = (Slave) j.jenkins.getNode("CustomSlaveName");
        assertThat(updatedSlave.getNodeName(), equalTo("CustomSlaveName"));
        assertThat(updatedSlave.getNumExecutors(), equalTo(42));
        assertThat(updatedSlave.getUserId(), equalTo(command.user().getId()));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914290/fstmerge_base_7340855410839161512
=======
@Test public void createNodeSpecifyingDifferentNameExplicitly() throws Exception {

        final Node originalSlave = j.createSlave("SlaveFromXml", null, null);

        final CLICommandInvoker.Result result = command
                .authorizedTo(Computer.CREATE, Jenkins.READ)
                .withStdin(Computer.class.getResourceAsStream("node.xml"))
                .invokeWithArgs("CustomSlaveName")
        ;

        assertThat(result, succeededSilently());

        assertThat("A slave with original name should be left untouched", j.jenkins.getNode("SlaveFromXml"), equalTo(originalSlave));

        final Slave updatedSlave = (Slave) j.jenkins.getNode("CustomSlaveName");
        assertThat(updatedSlave.getNodeName(), equalTo("CustomSlaveName"));
        assertThat(updatedSlave.getNumExecutors(), equalTo(42));
        assertThat(updatedSlave.getUserId(), equalTo(command.user().getId()));
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914290/fstmerge_var2_1569773686790179828

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/cli/CreateNodeCommandTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914293/fstmerge_var1_5461294477995038591
@Test public void createNodeShouldFailIfNodeAlreadyExist() throws Exception {

        j.createSlave("SlaveFromXML", null, null);

        final CLICommandInvoker.Result result = command
                .authorizedTo(Computer.CREATE, Jenkins.READ)
                .withStdin(Computer.class.getResourceAsStream("node.xml"))
                .invoke()
        ;

        assertThat(result.stderr(), containsString("Node 'SlaveFromXML' already exists"));
        assertThat("No output expected", result.stdout(), isEmptyString());
        assertThat("Command is expected to fail", result.returnCode(), equalTo(-1));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914293/fstmerge_base_3799562474997317684
=======
@Test public void createNodeShouldFailIfNodeAlreadyExist() throws Exception {

        j.createSlave("SlaveFromXML", null, null);

        final CLICommandInvoker.Result result = command
                .authorizedTo(Computer.CREATE, Jenkins.READ)
                .withStdin(Computer.class.getResourceAsStream("node.xml"))
                .invoke()
        ;

        assertThat(result.stderr(), containsString("Node 'SlaveFromXML' already exists"));
        assertThat(result, hasNoStandardOutput());
        assertThat(result, failedWith(-1));
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914293/fstmerge_var2_2386027870289722543

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/cli/CreateNodeCommandTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914297/fstmerge_var1_3666233382713081870
@Test public void createNodeShouldFailIfNodeAlreadyExistWhenNameSpecifiedExplicitly() throws Exception {

        j.createSlave("ExistingSlave", null, null);

        final CLICommandInvoker.Result result = command
                .authorizedTo(Computer.CREATE, Jenkins.READ)
                .withStdin(Computer.class.getResourceAsStream("node.xml"))
                .invokeWithArgs("ExistingSlave")
        ;

        assertThat(result.stderr(), containsString("Node 'ExistingSlave' already exists"));
        assertThat("No output expected", result.stdout(), isEmptyString());
        assertThat("Command is expected to fail", result.returnCode(), equalTo(-1));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914297/fstmerge_base_2998337930893432456
=======
@Test public void createNodeShouldFailIfNodeAlreadyExistWhenNameSpecifiedExplicitly() throws Exception {

        j.createSlave("ExistingSlave", null, null);

        final CLICommandInvoker.Result result = command
                .authorizedTo(Computer.CREATE, Jenkins.READ)
                .withStdin(Computer.class.getResourceAsStream("node.xml"))
                .invokeWithArgs("ExistingSlave")
        ;

        assertThat(result.stderr(), containsString("Node 'ExistingSlave' already exists"));
        assertThat(result, hasNoStandardOutput());
        assertThat(result, failedWith(-1));
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914297/fstmerge_var2_3515768251977610640

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/cli/CreateNodeCommandTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914303/fstmerge_var1_7717604215678617387
@Test public void getNodeShouldFailWithoutComputerReadPermission() throws Exception {

        j.createSlave("MySlave", null, null);

        final CLICommandInvoker.Result result = command
                .authorizedTo(Jenkins.READ)
                .invokeWithArgs("MySlave")
        ;

        assertThat(result.stderr(), containsString("user is missing the Slave/ExtendedRead permission"));
        assertThat("No output expected", result.stdout(), isEmptyString());
        assertThat("Command is expected to fail", result.returnCode(), equalTo(-1));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914303/fstmerge_base_7553194453910263989
=======
@Test public void getNodeShouldFailWithoutComputerReadPermission() throws Exception {

        j.createSlave("MySlave", null, null);

        final CLICommandInvoker.Result result = command
                .authorizedTo(Jenkins.READ)
                .invokeWithArgs("MySlave")
        ;

        assertThat(result.stderr(), containsString("user is missing the Slave/ExtendedRead permission"));
        assertThat(result, failedWith(-1));
        assertThat(result, hasNoStandardOutput());
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914303/fstmerge_var2_4111854620806626263

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/cli/GetNodeCommandTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914307/fstmerge_var1_1853853124911150092
@Test public void getNodeShouldYieldConfigXml() throws Exception {

        j.createSlave("MySlave", null, null);

        final CLICommandInvoker.Result result = command
                .authorizedTo(Computer.EXTENDED_READ, Jenkins.READ)
                .invokeWithArgs("MySlave")
        ;

        assertThat(result.stdout(), startsWith("<?xml version=\"1.0\" encoding=\"UTF-8\"?>"));
        assertThat(result.stdout(), containsString("<name>MySlave</name>"));
        assertThat("No error output expected", result.stderr(), isEmptyString());
        assertThat("Command is expected to succeed", result.returnCode(), equalTo(0));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914307/fstmerge_base_1445390970265151521
=======
@Test public void getNodeShouldYieldConfigXml() throws Exception {

        j.createSlave("MySlave", null, null);

        final CLICommandInvoker.Result result = command
                .authorizedTo(Computer.EXTENDED_READ, Jenkins.READ)
                .invokeWithArgs("MySlave")
        ;

        assertThat(result.stdout(), startsWith("<?xml version=\"1.0\" encoding=\"UTF-8\"?>"));
        assertThat(result.stdout(), containsString("<name>MySlave</name>"));
        assertThat(result, hasNoErrorOutput());
        assertThat(result, succeeded());
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914307/fstmerge_var2_605113430048388231

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/cli/GetNodeCommandTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914310/fstmerge_var1_9061104127739504111
@Test public void getNodeShouldFailIfNodeDoesNotExist() throws Exception {

        final CLICommandInvoker.Result result = command
                .authorizedTo(Computer.EXTENDED_READ, Jenkins.READ)
                .invokeWithArgs("MySlave")
        ;

        assertThat(result.stderr(), containsString("No such node 'MySlave'"));
        assertThat("No output expected", result.stdout(), isEmptyString());
        assertThat("Command is expected to fail", result.returnCode(), equalTo(-1));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914310/fstmerge_base_5727132636247492134
=======
@Test public void getNodeShouldFailIfNodeDoesNotExist() throws Exception {

        final CLICommandInvoker.Result result = command
                .authorizedTo(Computer.EXTENDED_READ, Jenkins.READ)
                .invokeWithArgs("MySlave")
        ;

        assertThat(result.stderr(), containsString("No such node 'MySlave'"));
        assertThat(result, failedWith(-1));
        assertThat(result, hasNoStandardOutput());
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914310/fstmerge_var2_7319599159692683000

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/cli/GetNodeCommandTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914316/fstmerge_var1_783337867661515292
@Test public void updateNodeShouldFailWithoutComputerConfigurePermission() throws Exception {

        j.createSlave("MySlave", null, null);

        final CLICommandInvoker.Result result = command
                .authorizedTo(Jenkins.READ)
                .invokeWithArgs("MySlave")
        ;

        assertThat(result.stderr(), containsString("user is missing the Slave/Configure permission"));
        assertThat("No output expected", result.stdout(), isEmptyString());
        assertThat("Command is expected to fail", result.returnCode(), equalTo(-1));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914316/fstmerge_base_6725314108971395624
=======
@Test public void updateNodeShouldFailWithoutComputerConfigurePermission() throws Exception {

        j.createSlave("MySlave", null, null);

        final CLICommandInvoker.Result result = command
                .authorizedTo(Jenkins.READ)
                .invokeWithArgs("MySlave")
        ;

        assertThat(result.stderr(), containsString("user is missing the Slave/Configure permission"));
        assertThat(result, failedWith(-1));
        assertThat(result, hasNoStandardOutput());
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914316/fstmerge_var2_229243214738660349

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/cli/UpdateNodeCommandTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914320/fstmerge_var1_6868146256916979233
@Test public void updateNodeShouldModifyNodeConfiguration() throws Exception {

        j.createSlave("MySlave", null, null);

        final CLICommandInvoker.Result result = command
                .authorizedTo(Computer.CONFIGURE, Jenkins.READ)
                .withStdin(Computer.class.getResourceAsStream("node.xml"))
                .invokeWithArgs("MySlave")
        ;

        assertThat("No error output expected", result.stderr(), isEmptyString());
        assertThat("Command is expected to succeed", result.returnCode(), equalTo(0));

        assertThat("A slave with old name should not exist", j.jenkins.getNode("MySlave"), nullValue());

        final Node updatedSlave = j.jenkins.getNode("SlaveFromXML");
        assertThat(updatedSlave.getNodeName(), equalTo("SlaveFromXML"));
        assertThat(updatedSlave.getNumExecutors(), equalTo(42));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914320/fstmerge_base_5654303161189670236
=======
@Test public void updateNodeShouldModifyNodeConfiguration() throws Exception {

        j.createSlave("MySlave", null, null);

        final CLICommandInvoker.Result result = command
                .authorizedTo(Computer.CONFIGURE, Jenkins.READ)
                .withStdin(Computer.class.getResourceAsStream("node.xml"))
                .invokeWithArgs("MySlave")
        ;

        assertThat(result, succeededSilently());

        assertThat("A slave with old name should not exist", j.jenkins.getNode("MySlave"), nullValue());

        final Node updatedSlave = j.jenkins.getNode("SlaveFromXML");
        assertThat(updatedSlave.getNodeName(), equalTo("SlaveFromXML"));
        assertThat(updatedSlave.getNumExecutors(), equalTo(42));
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914320/fstmerge_var2_8415435355882347518

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/cli/UpdateNodeCommandTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914324/fstmerge_var1_4642715644465110118
@Test public void updateNodeShouldFailIfNodeDoesNotExist() throws Exception {

        final CLICommandInvoker.Result result = command
                .authorizedTo(Computer.CONFIGURE, Jenkins.READ)
                .withStdin(Computer.class.getResourceAsStream("node.xml"))
                .invokeWithArgs("MySlave")
        ;

        assertThat(result.stderr(), containsString("No such node 'MySlave'"));
        assertThat("No output expected", result.stdout(), isEmptyString());
        assertThat("Command is expected to fail", result.returnCode(), equalTo(-1));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914324/fstmerge_base_8514857741070986905
=======
@Test public void updateNodeShouldFailIfNodeDoesNotExist() throws Exception {

        final CLICommandInvoker.Result result = command
                .authorizedTo(Computer.CONFIGURE, Jenkins.READ)
                .withStdin(Computer.class.getResourceAsStream("node.xml"))
                .invokeWithArgs("MySlave")
        ;

        assertThat(result.stderr(), containsString("No such node 'MySlave'"));
        assertThat(result, failedWith(-1));
        assertThat(result, hasNoStandardOutput());
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914324/fstmerge_var2_1949311284257580861

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/cli/UpdateNodeCommandTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914396/fstmerge_var1_6142336268208593343
@Before
    public void setUp() throws Exception {

        MockitoAnnotations.initMocks(this);
        computer = spy(rule.createSlave().toComputer());
        oldSecurityContext = ACL.impersonate(User.get("user").impersonate());
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914396/fstmerge_base_4349159461193618402
=======
@Before
    public void setUp() throws Exception {

        MockitoAnnotations.initMocks(this);
        computer = spy(rule.createSlave().toComputer());
        rule.jenkins.setSecurityRealm(rule.createDummySecurityRealm());
        oldSecurityContext = ACL.impersonate(User.get("user").impersonate());
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914396/fstmerge_var2_1374400301346074200

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/model/ComputerConfigDotXmlTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914619/fstmerge_var1_8702932203980784958
@Test
    public void testSave() throws IOException, InterruptedException {
        FreeStyleProject p = j.createFreeStyleProject("project");
        p.disabled = true;
        p.nextBuildNumber = 5;
        p.description = "description";
        p.save();
        j.jenkins.doReload();
        //wait until all configuration are reloaded
        reload(); 
        assertEquals("All persistent data should be saved.", "description", p.description);
        assertEquals("All persistent data should be saved.", 5, p.nextBuildNumber);
        assertEquals("All persistent data should be saved", true, p.disabled);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914619/fstmerge_base_2415503616170758105
=======
@Test
    public void testSave() throws IOException, InterruptedException, ReactorException {
        FreeStyleProject p = j.createFreeStyleProject("project");
        p.disabled = true;
        p.nextBuildNumber = 5;
        p.description = "description";
        p.save();
        j.jenkins.reload();
        assertEquals("All persistent data should be saved.", "description", p.description);
        assertEquals("All persistent data should be saved.", 5, p.nextBuildNumber);
        assertEquals("All persistent data should be saved", true, p.disabled);
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914619/fstmerge_var2_2221921109033931832

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/model/ProjectTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914696/fstmerge_var1_1375972464238657609
@Test
    public void testSaveAfterSet() throws Exception{
        FreeStyleProject p = j.createFreeStyleProject("project");
        p.setScm(new NullSCM());
        p.setScmCheckoutStrategy(new SCMCheckoutStrategyImpl());
        p.setQuietPeriod(15);
        p.setBlockBuildWhenDownstreamBuilding(true);
        p.setBlockBuildWhenUpstreamBuilding(true);
        j.jenkins.getJDKs().add(new JDK("jdk", "path"));
        j.jenkins.save();
        p.setJDK(j.jenkins.getJDK("jdk"));
        p.setCustomWorkspace("/some/path");
        reload();
        assertNotNull("Project did not save scm.", p.getScm());
        assertTrue("Project did not save scm checkout strategy.", p.getScmCheckoutStrategy() instanceof SCMCheckoutStrategyImpl);
        assertEquals("Project did not save quiet period.", 15, p.getQuietPeriod());
        assertTrue("Project did not save block if downstream is building.", p.blockBuildWhenDownstreamBuilding());
        assertTrue("Project did not save block if upstream is buildidng.", p.blockBuildWhenUpstreamBuilding());
        assertNotNull("Project did not save jdk", p.getJDK());
        assertEquals("Project did not save custom workspace.", "/some/path", p.getCustomWorkspace());
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914696/fstmerge_base_5555323828028786677
=======
@Test
    public void testSaveAfterSet() throws Exception, ReactorException {
        FreeStyleProject p = j.createFreeStyleProject("project");
        p.setScm(new NullSCM());
        p.setScmCheckoutStrategy(new SCMCheckoutStrategyImpl());
        p.setQuietPeriod(15);
        p.setBlockBuildWhenDownstreamBuilding(true);
        p.setBlockBuildWhenUpstreamBuilding(true);
        j.jenkins.getJDKs().add(new JDK("jdk", "path"));
        j.jenkins.save();
        p.setJDK(j.jenkins.getJDK("jdk"));
        p.setCustomWorkspace("/some/path");
        j.jenkins.reload();
        assertNotNull("Project did not save scm.", p.getScm());
        assertTrue("Project did not save scm checkout strategy.", p.getScmCheckoutStrategy() instanceof SCMCheckoutStrategyImpl);
        assertEquals("Project did not save quiet period.", 15, p.getQuietPeriod());
        assertTrue("Project did not save block if downstream is building.", p.blockBuildWhenDownstreamBuilding());
        assertTrue("Project did not save block if upstream is buildidng.", p.blockBuildWhenUpstreamBuilding());
        assertNotNull("Project did not save jdk", p.getJDK());
        assertEquals("Project did not save custom workspace.", "/some/path", p.getCustomWorkspace());
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914696/fstmerge_var2_7208845212487852089

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/model/ProjectTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914705/fstmerge_var1_6375383946489402391
@Test
    public void testGetCauseOfBlockage() throws IOException, InterruptedException{
        FreeStyleProject p = j.createFreeStyleProject("project");
        p.getBuildersList().add(new Shell("sleep 10"));
        p.scheduleBuild2(0);
        Thread.sleep(1000);//wait until it starts
        assertTrue("Build can not start because previous build has not finished.", p.getCauseOfBlockage() instanceof BecauseOfBuildInProgress);
        p.getLastBuild().getExecutor().interrupt();
        FreeStyleProject downstream = j.createFreeStyleProject("project-downstream");
        downstream.getBuildersList().add(new Shell("sleep 10"));
        Set<AbstractProject> upstream = new HashSet<AbstractProject>(Items.fromNameList(p.getParent(),"project",AbstractProject.class));
        downstream.convertUpstreamBuildTrigger(upstream);
        Jenkins.getInstance().rebuildDependencyGraph();
        p.setBlockBuildWhenDownstreamBuilding(true);
        downstream.scheduleBuild2(0);
        Thread.sleep(1000);//wait until it starts
        assertTrue("Build can not start because build of downstream project has not finished.", p.getCauseOfBlockage() instanceof BecauseOfDownstreamBuildInProgress);
        downstream.getLastBuild().getExecutor().interrupt();
        downstream.setBlockBuildWhenUpstreamBuilding(true);
        p.scheduleBuild2(0);
        Thread.sleep(1000);//wait until it starts
        assertTrue("Build can not start because build of upstream project has not finished.", downstream.getCauseOfBlockage() instanceof BecauseOfUpstreamBuildInProgress);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914705/fstmerge_base_7553239544396062434
=======
@Test
    public void testGetCauseOfBlockage() throws Exception {
        FreeStyleProject p = j.createFreeStyleProject("project");
        p.getBuildersList().add(new Shell("sleep 10"));
        QueueTaskFuture<FreeStyleBuild> b1 = waitForStart(p);
        assertInstanceOf("Build can not start because previous build has not finished: " + p.getCauseOfBlockage(), p.getCauseOfBlockage(), BecauseOfBuildInProgress.class);
        p.getLastBuild().getExecutor().interrupt();
        b1.get();   // wait for it to finish

        FreeStyleProject downstream = j.createFreeStyleProject("project-downstream");
        downstream.getBuildersList().add(new Shell("sleep 10"));
        p.getPublishersList().add(new BuildTrigger(Collections.singleton(downstream), Result.SUCCESS));
        Jenkins.getInstance().rebuildDependencyGraph();
        p.setBlockBuildWhenDownstreamBuilding(true);
        QueueTaskFuture<FreeStyleBuild> b2 = waitForStart(downstream);
        assertInstanceOf("Build can not start because build of downstream project has not finished.", p.getCauseOfBlockage(), BecauseOfDownstreamBuildInProgress.class);
        downstream.getLastBuild().getExecutor().interrupt();
        b2.get();

        downstream.setBlockBuildWhenUpstreamBuilding(true);
        waitForStart(p);
        assertInstanceOf("Build can not start because build of upstream project has not finished.", downstream.getCauseOfBlockage(), BecauseOfUpstreamBuildInProgress.class);
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914705/fstmerge_var2_3480321631756621166

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/model/ProjectTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914737/fstmerge_var1_3997992465315630318
@Test
    public void testDoCancelQueue() throws Exception{
        User user = User.get("John Smith", true, Collections.emptyMap());
        FreeStyleProject project = j.createFreeStyleProject("project");
        GlobalMatrixAuthorizationStrategy auth = new GlobalMatrixAuthorizationStrategy();   
        j.jenkins.setAuthorizationStrategy(auth);
        j.jenkins.setCrumbIssuer(null);
        HudsonPrivateSecurityRealm realm = new HudsonPrivateSecurityRealm(false);
        j.jenkins.setSecurityRealm(realm); 
        SecurityContextHolder.getContext().setAuthentication(user.impersonate()); 
        try{
            project.doCancelQueue(null, null);
            fail("User should not have permission to build project");
        }
        catch(Exception e){
            if(!(e.getClass().isAssignableFrom(AccessDeniedException2.class))){
               fail("AccessDeniedException should be thrown.");
            }
        } 
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914737/fstmerge_base_3134767739469518990
=======
@Test
    public void testDoCancelQueue() throws Exception{
        FreeStyleProject project = j.createFreeStyleProject("project");
        GlobalMatrixAuthorizationStrategy auth = new GlobalMatrixAuthorizationStrategy();   
        j.jenkins.setAuthorizationStrategy(auth);
        j.jenkins.setCrumbIssuer(null);
        HudsonPrivateSecurityRealm realm = new HudsonPrivateSecurityRealm(false);
        j.jenkins.setSecurityRealm(realm); 
        User user = realm.createAccount("John Smith", "password");
        SecurityContextHolder.getContext().setAuthentication(user.impersonate());
        try{
            project.doCancelQueue(null, null);
            fail("User should not have permission to build project");
        }
        catch(Exception e){
            if(!(e.getClass().isAssignableFrom(AccessDeniedException2.class))){
               fail("AccessDeniedException should be thrown.");
            }
        } 
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914737/fstmerge_var2_9161461227321603888

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/model/ProjectTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914818/fstmerge_var1_3932338088589999885
@Test public void privateView() throws Exception {
        j.createFreeStyleProject("project1");
        User user = User.get("me", true); // create user

        WebClient wc = j.createWebClient();
        HtmlPage userPage = wc.goTo("user/me");
        HtmlAnchor privateViewsLink = userPage.getFirstAnchorByText("My Views");
        assertNotNull("My Views link not available", privateViewsLink);

        HtmlPage privateViewsPage = (HtmlPage) privateViewsLink.click();

        Text viewLabel = (Text) privateViewsPage.getFirstByXPath("//table[@id='viewList']//td[@class='active']/text()");
        assertTrue("'All' view should be selected", viewLabel.getTextContent().contains(Hudson_ViewName()));

        View listView = new ListView("listView", j.jenkins);
        j.jenkins.addView(listView);

        HtmlPage newViewPage = wc.goTo("user/me/my-views/newView");
        HtmlForm form = newViewPage.getFormByName("createItem");
        form.getInputByName("name").setValueAttribute("proxy-view");
        ((HtmlRadioButtonInput) form.getInputByValue("hudson.model.ProxyView")).setChecked(true);
        HtmlPage proxyViewConfigurePage = j.submit(form);
        View proxyView = user.getProperty(MyViewsProperty.class).getView("proxy-view");
        assertNotNull(proxyView);
        form = proxyViewConfigurePage.getFormByName("viewConfig");
        form.getSelectByName("proxiedViewName").setSelectedAttribute("listView", true);
        j.submit(form);

        assertTrue(proxyView instanceof ProxyView);
        assertEquals(((ProxyView) proxyView).getProxiedViewName(), "listView");
        assertEquals(((ProxyView) proxyView).getProxiedView(), listView);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914818/fstmerge_base_6435694695207219924
=======
@Test public void privateView() throws Exception {
        j.createFreeStyleProject("project1");
        User user = User.get("me", true); // create user

        WebClient wc = j.createWebClient();
        HtmlPage userPage = wc.goTo("user/me");
        HtmlAnchor privateViewsLink = userPage.getFirstAnchorByText("My Views");
        assertNotNull("My Views link not available", privateViewsLink);

        HtmlPage privateViewsPage = (HtmlPage) privateViewsLink.click();

        Text viewLabel = (Text) privateViewsPage.getFirstByXPath("//table[@id='viewList']//td[@class='active']/text()");
        assertTrue("'All' view should be selected", viewLabel.getTextContent().contains(Hudson_ViewName()));

        View listView = listView("listView");

        HtmlPage newViewPage = wc.goTo("user/me/my-views/newView");
        HtmlForm form = newViewPage.getFormByName("createItem");
        form.getInputByName("name").setValueAttribute("proxy-view");
        ((HtmlRadioButtonInput) form.getInputByValue("hudson.model.ProxyView")).setChecked(true);
        HtmlPage proxyViewConfigurePage = j.submit(form);
        View proxyView = user.getProperty(MyViewsProperty.class).getView("proxy-view");
        assertNotNull(proxyView);
        form = proxyViewConfigurePage.getFormByName("viewConfig");
        form.getSelectByName("proxiedViewName").setSelectedAttribute("listView", true);
        j.submit(form);

        assertTrue(proxyView instanceof ProxyView);
        assertEquals(((ProxyView) proxyView).getProxiedViewName(), "listView");
        assertEquals(((ProxyView) proxyView).getProxiedView(), listView);
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914818/fstmerge_var2_72119028561321965

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/model/ViewTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914822/fstmerge_var1_5822565418087846487
@Test public void deleteView() throws Exception {
        WebClient wc = j.createWebClient();

        ListView v = new ListView("list", j.jenkins);
        j.jenkins.addView(v);
        HtmlPage delete = wc.getPage(v, "delete");
        j.submit(delete.getFormByName("delete"));
        assertNull(j.jenkins.getView("list"));

        User user = User.get("user", true);
        MyViewsProperty p = user.getProperty(MyViewsProperty.class);
        v = new ListView("list", p);
        p.addView(v);
        delete = wc.getPage(v, "delete");
        j.submit(delete.getFormByName("delete"));
        assertNull(p.getView("list"));

    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914822/fstmerge_base_7784400352412250220
=======
@Test public void deleteView() throws Exception {
        WebClient wc = j.createWebClient();

        ListView v = listView("list");
        HtmlPage delete = wc.getPage(v, "delete");
        j.submit(delete.getFormByName("delete"));
        assertNull(j.jenkins.getView("list"));

        User user = User.get("user", true);
        MyViewsProperty p = user.getProperty(MyViewsProperty.class);
        v = new ListView("list", p);
        p.addView(v);
        delete = wc.getPage(v, "delete");
        j.submit(delete.getFormByName("delete"));
        assertNull(p.getView("list"));

    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914822/fstmerge_var2_2097148027769093425

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/model/ViewTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914827/fstmerge_var1_3091682968450029471
@Bug(9367)
    @Test public void persistence() throws Exception {
        ListView view = new ListView("foo", j.jenkins);
        j.jenkins.addView(view);

        ListView v = (ListView) Jenkins.XSTREAM.fromXML(Jenkins.XSTREAM.toXML(view));
        System.out.println(v.getProperties());
        assertNotNull(v.getProperties());
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914827/fstmerge_base_3332210386807774478
=======
@Bug(9367)
    @Test public void persistence() throws Exception {
        ListView view = listView("foo");

        ListView v = (ListView) Jenkins.XSTREAM.fromXML(Jenkins.XSTREAM.toXML(view));
        System.out.println(v.getProperties());
        assertNotNull(v.getProperties());
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914827/fstmerge_var2_5117278602332960004

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/model/ViewTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914844/fstmerge_var1_4299957033361380542
@Bug(17302)
    @Test public void doConfigDotXml() throws Exception {
        ListView view = new ListView("v", j.jenkins);
        view.description = "one";
        j.jenkins.addView(view);
        WebClient wc = j.createWebClient();
        String xml = wc.goToXml("view/v/config.xml").getContent();
        assertTrue(xml, xml.contains("<description>one</description>"));
        xml = xml.replace("<description>one</description>", "<description>two</description>");
        WebRequestSettings req = new WebRequestSettings(wc.createCrumbedUrl("view/v/config.xml"), HttpMethod.POST);
        req.setRequestBody(xml);
        wc.getPage(req);
        assertEquals("two", view.getDescription());
        xml = new XmlFile(Jenkins.XSTREAM, new File(j.jenkins.getRootDir(), "config.xml")).asString();
        assertTrue(xml, xml.contains("<description>two</description>"));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914844/fstmerge_base_6720229179497640010
=======
@Bug(17302)
    @Test public void doConfigDotXml() throws Exception {
        ListView view = listView("v");
        view.description = "one";
        WebClient wc = j.createWebClient();
        String xml = wc.goToXml("view/v/config.xml").getContent();
        assertTrue(xml, xml.contains("<description>one</description>"));
        xml = xml.replace("<description>one</description>", "<description>two</description>");
        WebRequestSettings req = new WebRequestSettings(wc.createCrumbedUrl("view/v/config.xml"), HttpMethod.POST);
        req.setRequestBody(xml);
        wc.getPage(req);
        assertEquals("two", view.getDescription());
        xml = new XmlFile(Jenkins.XSTREAM, new File(j.jenkins.getRootDir(), "config.xml")).asString();
        assertTrue(xml, xml.contains("<description>two</description>"));
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914844/fstmerge_var2_8835729544592174223

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/model/ViewTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914849/fstmerge_var1_8840929850186420075
@Before
    public void before(){
       addDynamicLabel = false;
       notTake = false; 
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914849/fstmerge_base_3502525516340664475
=======
@Before
    public void before(){
       addDynamicLabel = false;
       notTake = false;
        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914849/fstmerge_var2_431801411843549868

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/model/NodeTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914867/fstmerge_var1_851698594894663669
@Test
    public void testCanTake() throws Exception {
        Node node = j.createOnlineSlave();
        node.setLabelString("label1 label2");
        FreeStyleProject project = j.createFreeStyleProject();
        project.setAssignedLabel(j.jenkins.getLabel("label1"));
        FreeStyleProject project2 = j.createFreeStyleProject();
        FreeStyleProject project3 = j.createFreeStyleProject();
        project3.setAssignedLabel(j.jenkins.getLabel("notContained"));
        Queue.BuildableItem item = new Queue.BuildableItem(new WaitingItem(new GregorianCalendar(), project, new ArrayList<Action>()));
        Queue.BuildableItem item2 = new Queue.BuildableItem(new WaitingItem(new GregorianCalendar(), project2, new ArrayList<Action>()));
        Queue.BuildableItem item3 = new Queue.BuildableItem(new WaitingItem(new GregorianCalendar(), project3, new ArrayList<Action>()));
        assertNull("Node should take project which is assigned to its label.", node.canTake(item));
        assertNull("Node should take project which is assigned to its label.", node.canTake(item2));
        assertNotNull("Node should not take project which is not assigned to its label.", node.canTake(item3));
        String message = Messages._Node_LabelMissing(node.getNodeName(),j.jenkins.getLabel("notContained")).toString();
        assertEquals("Cause of blockage should be missing label.", message, node.canTake(item3).getShortDescription());
        ((Slave)node).setMode(Node.Mode.EXCLUSIVE);
        assertNotNull("Node should not take project which has null label bacause it is in exclusive mode.", node.canTake(item2));
        message = Messages._Node_BecauseNodeIsReserved(node.getNodeName()).toString();
        assertEquals("Cause of blockage should be reserved label.", message, node.canTake(item2).getShortDescription());
        node.getNodeProperties().add(new NodePropertyImpl());
        notTake = true;
        assertNotNull("Node should not take project because node property not alow it.", node.canTake(item));
        assertTrue("Cause of blockage should be bussy label.", node.canTake(item) instanceof CauseOfBlockage.BecauseLabelIsBusy);
        User user = User.get("John");
        GlobalMatrixAuthorizationStrategy auth = new GlobalMatrixAuthorizationStrategy();   
        j.jenkins.setAuthorizationStrategy(auth);
        j.jenkins.setCrumbIssuer(null);
        HudsonPrivateSecurityRealm realm = new HudsonPrivateSecurityRealm(false);
        j.jenkins.setSecurityRealm(realm);
        notTake = false;
        QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new QueueItemAuthenticatorImpl());
        assertNotNull("Node should not take project because user does not have build permission.", node.canTake(item));
        message = Messages._Node_LackingBuildPermission(item.authenticate().getName(),node.getNodeName()).toString();
        assertEquals("Cause of blockage should be bussy label.", message, node.canTake(item).getShortDescription());
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914867/fstmerge_base_1094542378081883980
=======
@Test
    public void testCanTake() throws Exception {
        Node node = j.createOnlineSlave();
        node.setLabelString("label1 label2");
        FreeStyleProject project = j.createFreeStyleProject();
        project.setAssignedLabel(j.jenkins.getLabel("label1"));
        FreeStyleProject project2 = j.createFreeStyleProject();
        FreeStyleProject project3 = j.createFreeStyleProject();
        project3.setAssignedLabel(j.jenkins.getLabel("notContained"));
        Queue.BuildableItem item = new Queue.BuildableItem(new WaitingItem(new GregorianCalendar(), project, new ArrayList<Action>()));
        Queue.BuildableItem item2 = new Queue.BuildableItem(new WaitingItem(new GregorianCalendar(), project2, new ArrayList<Action>()));
        Queue.BuildableItem item3 = new Queue.BuildableItem(new WaitingItem(new GregorianCalendar(), project3, new ArrayList<Action>()));
        assertNull("Node should take project which is assigned to its label.", node.canTake(item));
        assertNull("Node should take project which is assigned to its label.", node.canTake(item2));
        assertNotNull("Node should not take project which is not assigned to its label.", node.canTake(item3));
        String message = Messages._Node_LabelMissing(node.getNodeName(),j.jenkins.getLabel("notContained")).toString();
        assertEquals("Cause of blockage should be missing label.", message, node.canTake(item3).getShortDescription());
        ((Slave)node).setMode(Node.Mode.EXCLUSIVE);
        assertNotNull("Node should not take project which has null label bacause it is in exclusive mode.", node.canTake(item2));
        message = Messages._Node_BecauseNodeIsReserved(node.getNodeName()).toString();
        assertEquals("Cause of blockage should be reserved label.", message, node.canTake(item2).getShortDescription());
        node.getNodeProperties().add(new NodePropertyImpl());
        notTake = true;
        assertNotNull("Node should not take project because node property not alow it.", node.canTake(item));
        assertTrue("Cause of blockage should be bussy label.", node.canTake(item) instanceof CauseOfBlockage.BecauseLabelIsBusy);
        User user = User.get("John");
        GlobalMatrixAuthorizationStrategy auth = new GlobalMatrixAuthorizationStrategy();   
        j.jenkins.setAuthorizationStrategy(auth);
        j.jenkins.setCrumbIssuer(null);
        HudsonPrivateSecurityRealm realm = new HudsonPrivateSecurityRealm(false);
        j.jenkins.setSecurityRealm(realm);
        realm.createAccount("John", "");
        notTake = false;
        QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(Collections.singletonMap(project.getFullName(), user.impersonate())));
        assertNotNull("Node should not take project because user does not have build permission.", node.canTake(item));
        message = Messages._Node_LackingBuildPermission(item.authenticate().getName(),node.getNodeName()).toString();
        assertEquals("Cause of blockage should be bussy label.", message, node.canTake(item).getShortDescription());
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914867/fstmerge_var2_8907188818413649842

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/model/NodeTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914878/fstmerge_var1_7280856967423922546
@Test
    public void testHasPermission() throws Exception {
        Node node = j.createOnlineSlave();
        GlobalMatrixAuthorizationStrategy auth = new GlobalMatrixAuthorizationStrategy();   
        j.jenkins.setAuthorizationStrategy(auth);
        j.jenkins.setCrumbIssuer(null);
        HudsonPrivateSecurityRealm realm = new HudsonPrivateSecurityRealm(false);
        j.jenkins.setSecurityRealm(realm);
        User user = User.get("John Smith");
        SecurityContextHolder.getContext().setAuthentication(user.impersonate());
        assertFalse("Current user should not have permission read.", node.hasPermission(Permission.READ));
        auth.add(Computer.CONFIGURE, user.getId());
        assertTrue("Current user should have permission CONFIGURE.", user.hasPermission(Permission.CONFIGURE));
        auth.add(Jenkins.ADMINISTER, user.getId());
        assertTrue("Current user should have permission read, because he has permission administer.", user.hasPermission(Permission.READ));
        SecurityContextHolder.getContext().setAuthentication(Jenkins.ANONYMOUS);
        
        user = User.get("anonymous");
        assertFalse("Current user should not have permission read, because does not have global permission read and authentication is anonymous.", user.hasPermission(Permission.READ));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914878/fstmerge_base_793070833025966732
=======
@Test
    public void testHasPermission() throws Exception {
        Node node = j.createOnlineSlave();
        GlobalMatrixAuthorizationStrategy auth = new GlobalMatrixAuthorizationStrategy();   
        j.jenkins.setAuthorizationStrategy(auth);
        j.jenkins.setCrumbIssuer(null);
        HudsonPrivateSecurityRealm realm = new HudsonPrivateSecurityRealm(false);
        j.jenkins.setSecurityRealm(realm);
        User user = realm.createAccount("John Smith","abcdef");
        SecurityContextHolder.getContext().setAuthentication(user.impersonate());
        assertFalse("Current user should not have permission read.", node.hasPermission(Permission.READ));
        auth.add(Computer.CONFIGURE, user.getId());
        assertTrue("Current user should have permission CONFIGURE.", user.hasPermission(Permission.CONFIGURE));
        auth.add(Jenkins.ADMINISTER, user.getId());
        assertTrue("Current user should have permission read, because he has permission administer.", user.hasPermission(Permission.READ));
        SecurityContextHolder.getContext().setAuthentication(Jenkins.ANONYMOUS);
        
        user = User.get("anonymous");
        assertFalse("Current user should not have permission read, because does not have global permission read and authentication is anonymous.", user.hasPermission(Permission.READ));
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914878/fstmerge_var2_5854527464504873675

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/model/NodeTest.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914979/fstmerge_var1_8324671033328063650
@Test public void updateDirectlyWithHtml() throws Exception {
        UpdateSite us = new UpdateSite("default", new URL(baseUrl, "update-center.json.html").toExternalForm());
        assertNull(us.getPlugin("AdaptivePlugin"));
        assertEquals(FormValidation.ok(), us.updateDirectly(true).get());
        assertNotNull(us.getPlugin("AdaptivePlugin"));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914979/fstmerge_base_293284153660195763
@Test public void updateDirectlyWithHtml() throws Exception {
        UpdateSite us = new UpdateSite("default", UpdateSiteTest.class.getResource("update-center.json.html").toExternalForm());
        assertNull(us.getPlugin("AdaptivePlugin"));
        assertEquals(FormValidation.ok(), us.updateDirectly(true).get());
        assertNotNull(us.getPlugin("AdaptivePlugin"));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479914979/fstmerge_var2_3291135965677545644

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/model/UpdateSiteTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479915084/fstmerge_var1_1891349083966205603
@Bug(18641)
    @Test public void display() throws Exception {
        User.get("bob");
        HtmlPage page = j.createWebClient().goTo("asynchPeople");
        assertEquals("display: none;", page.getElementById("status").getAttribute("style"));
        assertNotNull(page.getElementById("person-bob"));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479915084/fstmerge_base_1267438290470925196
=======
@Bug(18641)
    @Test public void display() throws Exception {
        User.get("bob");
        JenkinsRule.WebClient wc = j.createWebClient();
        HtmlPage page;
        try {
            page = wc.goTo("asynchPeople");
        } catch (FailingHttpStatusCodeException x) {
            System.err.println(x.getResponse().getResponseHeaders());
            System.err.println(x.getResponse().getContentAsString());
            throw x;
        }
        assertEquals(0, wc.waitForBackgroundJavaScript(120000));
        boolean found = false;
        for (HtmlElement table : page.getElementsByTagName("table")) {
            if (table.getAttribute("class").contains("progress-bar")) {
                found = true;
                assertEquals("display: none;", table.getAttribute("style"));
                break;
            }
        }
        assertTrue(found);
        /* TODO this still fails occasionally, for reasons TBD (I think because User.getAll sometimes is empty):
        assertNotNull(page.getElementById("person-bob"));
        */
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479915084/fstmerge_var2_5377103218715096856

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/model/AsynchPeopleTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479915518/fstmerge_var1_3811937395730811506
public void testAccessControl() throws Exception {
        configureUserRealm();
        qac.getAuthenticators().add(new QueueItemAuthenticatorImpl());
        FreeStyleProject p = createFreeStyleProject();
        p.getBuildersList().add(new TestBuilder() {
            @Override
            public boolean perform(AbstractBuild<?, ?> build, Launcher launcher, BuildListener listener) throws InterruptedException, IOException {
                assertEquals(alice,Jenkins.getAuthentication());
                return true;
            }
        });
        assertBuildStatusSuccess(p.scheduleBuild2(0));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479915518/fstmerge_base_1644952392725355187
=======
public void testAccessControl() throws Exception {
        configureUserRealm();
        FreeStyleProject p = createFreeStyleProject();
        qac.getAuthenticators().add(new MockQueueItemAuthenticator(Collections.singletonMap(p.getFullName(), alice)));
        p.getBuildersList().add(new TestBuilder() {
            @Override
            public boolean perform(AbstractBuild<?, ?> build, Launcher launcher, BuildListener listener) throws InterruptedException, IOException {
                assertEquals(alice,Jenkins.getAuthentication());
                return true;
            }
        });
        assertBuildStatusSuccess(p.scheduleBuild2(0));
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479915518/fstmerge_var2_1465985542804740185

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/model/QueueTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479915522/fstmerge_var1_5406099179675435238
public void testPermissionSensitiveSlaveAllocations() throws Exception {
        jenkins.setNumExecutors(0); // restrict builds to those slaves
        DumbSlave s1 = createSlave();
        DumbSlave s2 = createSlave();

        configureUserRealm();
        qac.getAuthenticators().add(new QueueItemAuthenticatorImpl());
        FreeStyleProject p = createFreeStyleProject();
        p.getBuildersList().add(new TestBuilder() {
            @Override
            public boolean perform(AbstractBuild<?, ?> build, Launcher launcher, BuildListener listener) throws InterruptedException, IOException {
                assertEquals(alice,Jenkins.getAuthentication());
                return true;
            }
        });

        final FreeStyleBuild b1 = assertBuildStatusSuccess(p.scheduleBuild2(0));
        final FreeStyleBuild b2 = assertBuildStatusSuccess(p.scheduleBuild2(0));

        // scheduling algorithm would prefer running the same job on the same node
        // kutzi: 'prefer' != 'enforce', therefore disabled this assertion: assertSame(b1.getBuiltOn(),b2.getBuiltOn());

        // ACL that allow anyone to do anything except Alice can't build.
        final SparseACL aliceCantBuild = new SparseACL(null);
        aliceCantBuild.add(new PrincipalSid(alice), Computer.BUILD, false);
        aliceCantBuild.add(new PrincipalSid("anonymous"), Jenkins.ADMINISTER, true);

        GlobalMatrixAuthorizationStrategy auth = new GlobalMatrixAuthorizationStrategy() {
            @Override
            public ACL getACL(Node node) {
                if (node==b1.getBuiltOn())
                    return aliceCantBuild;
                return super.getACL(node);
            }
        };
        auth.add(Jenkins.ADMINISTER,"anonymous");
        jenkins.setAuthorizationStrategy(auth);

        // now that we prohibit alice to do a build on the same node, the build should run elsewhere
        for (int i=0; i<3; i++) {
            FreeStyleBuild b3 = assertBuildStatusSuccess(p.scheduleBuild2(0));
            assertNotSame(b3.getBuiltOnStr(), b1.getBuiltOnStr());
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479915522/fstmerge_base_6344698786901565245
=======
public void testPermissionSensitiveSlaveAllocations() throws Exception {
        jenkins.setNumExecutors(0); // restrict builds to those slaves
        DumbSlave s1 = createSlave();
        DumbSlave s2 = createSlave();

        configureUserRealm();
        FreeStyleProject p = createFreeStyleProject();
        qac.getAuthenticators().add(new MockQueueItemAuthenticator(Collections.singletonMap(p.getFullName(), alice)));
        p.getBuildersList().add(new TestBuilder() {
            @Override
            public boolean perform(AbstractBuild<?, ?> build, Launcher launcher, BuildListener listener) throws InterruptedException, IOException {
                assertEquals(alice,Jenkins.getAuthentication());
                return true;
            }
        });

        final FreeStyleBuild b1 = assertBuildStatusSuccess(p.scheduleBuild2(0));
        final FreeStyleBuild b2 = assertBuildStatusSuccess(p.scheduleBuild2(0));

        // scheduling algorithm would prefer running the same job on the same node
        // kutzi: 'prefer' != 'enforce', therefore disabled this assertion: assertSame(b1.getBuiltOn(),b2.getBuiltOn());

        // ACL that allow anyone to do anything except Alice can't build.
        final SparseACL aliceCantBuild = new SparseACL(null);
        aliceCantBuild.add(new PrincipalSid(alice), Computer.BUILD, false);
        aliceCantBuild.add(new PrincipalSid("anonymous"), Jenkins.ADMINISTER, true);

        GlobalMatrixAuthorizationStrategy auth = new GlobalMatrixAuthorizationStrategy() {
            @Override
            public ACL getACL(Node node) {
                if (node==b1.getBuiltOn())
                    return aliceCantBuild;
                return super.getACL(node);
            }
        };
        auth.add(Jenkins.ADMINISTER,"anonymous");
        jenkins.setAuthorizationStrategy(auth);

        // now that we prohibit alice to do a build on the same node, the build should run elsewhere
        for (int i=0; i<3; i++) {
            FreeStyleBuild b3 = assertBuildStatusSuccess(p.scheduleBuild2(0));
            assertNotSame(b3.getBuiltOnStr(), b1.getBuiltOnStr());
        }
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479915522/fstmerge_var2_5732991164883730748

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/model/QueueTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479915602/fstmerge_var1_6857910017534657263
@Test
    public void testImpersonateAndCurrent() {
        User user = User.get("John Smith"); 
        assertNotSame("User John Smith should not be the current user.", User.current().getId(), user.getId());
        SecurityContextHolder.getContext().setAuthentication(user.impersonate()); 
        assertEquals("User John Smith should be the current user.", user.getId(), User.current().getId());
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479915602/fstmerge_base_9209395126945824264
=======
@Test
    public void testImpersonateAndCurrent() {
        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());
        User user = User.get("John Smith"); 
        assertNotSame("User John Smith should not be the current user.", User.current().getId(), user.getId());
        SecurityContextHolder.getContext().setAuthentication(user.impersonate()); 
        assertEquals("User John Smith should be the current user.", user.getId(), User.current().getId());
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479915602/fstmerge_var2_9017448216013378958

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/model/UserTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479915624/fstmerge_var1_3226587188923451876
@Test
    public void testGetBuildsAndGetProjects() throws IOException, InterruptedException {
        User user = User.get("John Smith", true, Collections.emptyMap());
        FreeStyleProject project = j.createFreeStyleProject("free");
        FreeStyleProject project2 = j.createFreeStyleProject("free2");
        project.save();
        FakeChangeLogSCM scm = new FakeChangeLogSCM();
        scm.addChange().withAuthor(user.getId());
        project.setScm(scm);
        Queue.getInstance().schedule(project,0);
        Build build = project.getLastBuild();
        while(build==null){
            Thread.sleep(100);
            build = project.getLastBuild();
        }
        Queue.getInstance().schedule(project2,0);
        Build build2 = project2.getLastBuild();
        while(build2==null){
            Thread.sleep(100);
            build2 = project2.getLastBuild();
        }
        assertTrue("User should participate in the last build of project free.", user.getBuilds().contains(build));
        assertFalse("User should not participate in the last build of project free2.", user.getBuilds().contains(build2));
        assertTrue("User should participate in the project free.", user.getProjects().contains(project));
        assertFalse("User should not participate in the project free2.", user.getProjects().contains(project2));
        
        //JENKINS-16178: build should include also builds scheduled by user
        build2.addAction(new CauseAction(new Cause.UserIdCause()));
        assertFalse("User should not participate in the last build of project free2.", user.getBuilds().contains(build2));
        assertFalse("Current user should not participate in the last build of project free.", User.current().getBuilds().contains(build));
        assertTrue("Current user should participate in the last build of project free2.", User.current().getBuilds().contains(build2));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479915624/fstmerge_base_2506123341338807755
=======
@Test
    public void testGetBuildsAndGetProjects() throws Exception {
        User user = User.get("John Smith", true, Collections.emptyMap());
        FreeStyleProject project = j.createFreeStyleProject("free");
        FreeStyleProject project2 = j.createFreeStyleProject("free2");
        project.save();
        FakeChangeLogSCM scm = new FakeChangeLogSCM();
        scm.addChange().withAuthor(user.getId());
        project.setScm(scm);
        j.buildAndAssertSuccess(project);
        j.buildAndAssertSuccess(project2);
        Build build = project.getLastBuild();
        Build build2 = project2.getLastBuild();
        assertTrue("User should participate in the last build of project free.", user.getBuilds().contains(build));
        assertFalse("User should not participate in the last build of project free2.", user.getBuilds().contains(build2));
        assertTrue("User should participate in the project free.", user.getProjects().contains(project));
        assertFalse("User should not participate in the project free2.", user.getProjects().contains(project2));

        //JENKINS-16178: build should include also builds scheduled by user

        build2.replaceAction(new CauseAction(new Cause.UserIdCause()));
        assertFalse("User should not participate in the last build of project free2.", user.getBuilds().contains(build2));
        assertFalse("Current user should not participate in the last build of project free.", User.current().getBuilds().contains(build));
        assertTrue("Current user should participate in the last build of project free2.", User.current().getBuilds().contains(build2));
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479915624/fstmerge_var2_3286426491579697564

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/model/UserTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479915646/fstmerge_var1_8452427612880154166
@Test
    public void testHasPermission() {
        GlobalMatrixAuthorizationStrategy auth = new GlobalMatrixAuthorizationStrategy();   
        j.jenkins.setAuthorizationStrategy(auth);
        j.jenkins.setCrumbIssuer(null);
        HudsonPrivateSecurityRealm realm = new HudsonPrivateSecurityRealm(false);
        j.jenkins.setSecurityRealm(realm);
        User user = User.get("John Smith");
        User user2 = User.get("John Smith2");
        SecurityContextHolder.getContext().setAuthentication(user.impersonate());
        assertFalse("Current user should not have permission read.", user2.hasPermission(Permission.READ));
        assertTrue("Current user should always have permission read to himself.", user.hasPermission(Permission.READ));
        auth.add(Jenkins.ADMINISTER, user.getId());
        assertTrue("Current user should have permission read, because he has permission administer.", user2.hasPermission(Permission.READ));
        SecurityContextHolder.getContext().setAuthentication(Jenkins.ANONYMOUS);
        user2 = User.get("anonymous");
        assertFalse("Current user should not have permission read, because does not have global permission read and authentication is anonymous.", user2.hasPermission(Permission.READ));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479915646/fstmerge_base_9161069680740152263
=======
@Test
    public void testHasPermission() throws IOException {
        GlobalMatrixAuthorizationStrategy auth = new GlobalMatrixAuthorizationStrategy();   
        j.jenkins.setAuthorizationStrategy(auth);
        j.jenkins.setCrumbIssuer(null);
        HudsonPrivateSecurityRealm realm = new HudsonPrivateSecurityRealm(false);
        j.jenkins.setSecurityRealm(realm);
        User user = realm.createAccount("John Smith","password");
        User user2 = realm.createAccount("John Smith2", "password");
        SecurityContextHolder.getContext().setAuthentication(user.impersonate());
        assertFalse("Current user should not have permission read.", user2.hasPermission(Permission.READ));
        assertTrue("Current user should always have permission read to himself.", user.hasPermission(Permission.READ));
        auth.add(Jenkins.ADMINISTER, user.getId());
        assertTrue("Current user should have permission read, because he has permission administer.", user2.hasPermission(Permission.READ));
        SecurityContextHolder.getContext().setAuthentication(Jenkins.ANONYMOUS);
        user2 = User.get("anonymous");
        assertFalse("Current user should not have permission read, because does not have global permission read and authentication is anonymous.", user2.hasPermission(Permission.READ));
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479915646/fstmerge_var2_8451078781465663019

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/model/UserTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479915651/fstmerge_var1_5154560200359888476
@Test
    public void testCanDelete() throws IOException {
        GlobalMatrixAuthorizationStrategy auth = new GlobalMatrixAuthorizationStrategy();   
        j.jenkins.setAuthorizationStrategy(auth);
        j.jenkins.setCrumbIssuer(null);
        HudsonPrivateSecurityRealm realm = new HudsonPrivateSecurityRealm(false);
        j.jenkins.setSecurityRealm(realm);
        User user = User.get("John Smith");
        User user2 = User.get("John Smith2");
        user2.save();
        SecurityContextHolder.getContext().setAuthentication(user.impersonate());
        assertFalse("User should not be able delete because he does not have administer permission.", user2.canDelete());
        auth.add(Jenkins.ADMINISTER, user.getId());
        assertTrue("User should be able to delete.", user2.canDelete());
        assertFalse("User should not be able to delete because it is current user.", user.canDelete());
        SecurityContextHolder.getContext().setAuthentication(user2.impersonate());
        auth.add(Jenkins.ADMINISTER, user2.getId());
        assertFalse("User should not be able to delete because he is not saved.", user.canDelete());
        user.save();
        assertTrue("User should be able to delete.", user.canDelete());
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479915651/fstmerge_base_8722846471751371048
=======
@Test
    public void testCanDelete() throws IOException {
        GlobalMatrixAuthorizationStrategy auth = new GlobalMatrixAuthorizationStrategy();   
        j.jenkins.setAuthorizationStrategy(auth);
        j.jenkins.setCrumbIssuer(null);
        HudsonPrivateSecurityRealm realm = new HudsonPrivateSecurityRealm(false);
        j.jenkins.setSecurityRealm(realm);
        User user = realm.createAccount("John Smith","password");
        User user2 = realm.createAccount("John Smith2","password");
        user2.save();

        SecurityContextHolder.getContext().setAuthentication(user.impersonate());
        assertFalse("Ordinary user cannot delete somebody else", user2.canDelete());
        auth.add(Jenkins.ADMINISTER, user.getId());
        assertTrue("Administrator can delete anybody else", user2.canDelete());
        assertFalse("User (even admin) cannot delete himself", user.canDelete());

        SecurityContextHolder.getContext().setAuthentication(user2.impersonate());
        auth.add(Jenkins.ADMINISTER, user2.getId());
        User user3 = User.get("Random Somebody");
        assertFalse("Storage-less temporary user cannot be deleted", user3.canDelete());
        user3.save();
        assertTrue("But once storage is allocated, he can be deleted", user3.canDelete());
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479915651/fstmerge_var2_320860050851910391

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/model/UserTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479915714/fstmerge_var1_3730704521453582996
@Test
    public void testCheckPermission() throws IOException {
        User user = User.get("User");
        User user2 = User.get("User2");
        MyViewsProperty property = new MyViewsProperty(Messages.Hudson_ViewName());
        property.readResolve();
        property.setUser(user);
        GlobalMatrixAuthorizationStrategy auth = new GlobalMatrixAuthorizationStrategy();   
        rule.jenkins.setAuthorizationStrategy(auth);     
        user.addProperty(property);
        boolean ex = false;
        SecurityContextHolder.getContext().setAuthentication(user2.impersonate());
        try{
            property.checkPermission(Permission.CONFIGURE);
        }
        catch(AccessDeniedException e){
            ex = true;
        }
        assertTrue("Property should throw AccessDeniedException.",ex);
        SecurityContextHolder.getContext().setAuthentication(user.impersonate());
        try{
            property.checkPermission(Permission.CONFIGURE);
        }
        catch(AccessDeniedException e){
            fail("Property should not throw AccessDeniedException - user should control of himself.");
        }
        SecurityContextHolder.getContext().setAuthentication(user2.impersonate());
        auth.add(Jenkins.ADMINISTER, "User2");
        try{
            property.checkPermission(Permission.CONFIGURE);
        }
        catch(AccessDeniedException e){
            fail("Property should not throw AccessDeniedException.");
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479915714/fstmerge_base_1496014869500716939
=======
@Test
    public void testCheckPermission() throws IOException {
        rule.jenkins.setSecurityRealm(rule.createDummySecurityRealm());
        User user = User.get("User");
        User user2 = User.get("User2");
        MyViewsProperty property = new MyViewsProperty(Messages.Hudson_ViewName());
        property.readResolve();
        property.setUser(user);
        GlobalMatrixAuthorizationStrategy auth = new GlobalMatrixAuthorizationStrategy();   
        rule.jenkins.setAuthorizationStrategy(auth);     
        user.addProperty(property);
        boolean ex = false;
        SecurityContextHolder.getContext().setAuthentication(user2.impersonate());
        try{
            property.checkPermission(Permission.CONFIGURE);
        }
        catch(AccessDeniedException e){
            ex = true;
        }
        assertTrue("Property should throw AccessDeniedException.",ex);
        SecurityContextHolder.getContext().setAuthentication(user.impersonate());
        try{
            property.checkPermission(Permission.CONFIGURE);
        }
        catch(AccessDeniedException e){
            fail("Property should not throw AccessDeniedException - user should control of himself.");
        }
        SecurityContextHolder.getContext().setAuthentication(user2.impersonate());
        auth.add(Jenkins.ADMINISTER, "User2");
        try{
            property.checkPermission(Permission.CONFIGURE);
        }
        catch(AccessDeniedException e){
            fail("Property should not throw AccessDeniedException.");
        }
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479915714/fstmerge_var2_20663783401554407

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/model/MyViewsPropertyTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479915719/fstmerge_var1_88401585942352241
@Test
    public void testHasPermission() throws IOException {
        User user = User.get("User");
        User user2 = User.get("User2");
        MyViewsProperty property = new MyViewsProperty(Messages.Hudson_ViewName());
        property.readResolve();
        property.setUser(user);
        GlobalMatrixAuthorizationStrategy auth = new GlobalMatrixAuthorizationStrategy();   
        rule.jenkins.setAuthorizationStrategy(auth);    
        user.addProperty(property);
        SecurityContextHolder.getContext().setAuthentication(user2.impersonate());
        assertFalse("User User2 should not configure permission for user User",property.hasPermission(Permission.CONFIGURE));
        SecurityContextHolder.getContext().setAuthentication(user.impersonate());
        assertTrue("User should control of himself.", property.hasPermission(Permission.CONFIGURE));
        auth.add(Jenkins.ADMINISTER, "User2");
        assertTrue("User User2 should configure permission for user User",property.hasPermission(Permission.CONFIGURE));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479915719/fstmerge_base_1704739112337458793
=======
@Test
    public void testHasPermission() throws IOException {
        rule.jenkins.setSecurityRealm(rule.createDummySecurityRealm());
        User user = User.get("User");
        User user2 = User.get("User2");
        MyViewsProperty property = new MyViewsProperty(Messages.Hudson_ViewName());
        property.readResolve();
        property.setUser(user);
        GlobalMatrixAuthorizationStrategy auth = new GlobalMatrixAuthorizationStrategy();   
        rule.jenkins.setAuthorizationStrategy(auth);    
        user.addProperty(property);
        SecurityContextHolder.getContext().setAuthentication(user2.impersonate());
        assertFalse("User User2 should not configure permission for user User",property.hasPermission(Permission.CONFIGURE));
        SecurityContextHolder.getContext().setAuthentication(user.impersonate());
        assertTrue("User should control of himself.", property.hasPermission(Permission.CONFIGURE));
        auth.add(Jenkins.ADMINISTER, "User2");
        assertTrue("User User2 should configure permission for user User",property.hasPermission(Permission.CONFIGURE));
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479915719/fstmerge_var2_8241395338071476901

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/model/MyViewsPropertyTest.java
Conflict type: LineBasedMCFd
Conflict body: 
public void testFormValidation() throws Exception {
        executeOnServer(new Callable<Object>() {
            public Object call() throws Exception {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479915887/fstmerge_base_8602273535509895346
=======
                DescriptorImpl d = jenkins.getDescriptorByType(DescriptorImpl.class);

>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479915887/fstmerge_var2_8185380795743540888
                Label l = jenkins.getLabel("foo");
                DumbSlave s = createSlave(l);
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479915887/fstmerge_var1_2133121112584871302
                String msg = d.doCheckAssignedLabelString("goo").renderHtml();
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479915887/fstmerge_base_8602273535509895346
                String msg = FreeStyleProject.DESCRIPTOR.doCheckAssignedLabelString("goo").renderHtml();
=======
                String msg = d.doCheckAssignedLabelString(null, "goo").renderHtml();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479915887/fstmerge_var2_8185380795743540888
                assertTrue(msg.contains("foo"));
                assertTrue(msg.contains("goo"));

<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479915887/fstmerge_var1_2133121112584871302
                msg = d.doCheckAssignedLabelString("master && goo").renderHtml();
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479915887/fstmerge_base_8602273535509895346
                msg = FreeStyleProject.DESCRIPTOR.doCheckAssignedLabelString("master && goo").renderHtml();
=======
                msg = d.doCheckAssignedLabelString(null, "master && goo").renderHtml();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479915887/fstmerge_var2_8185380795743540888
                assertTrue(msg.contains("foo"));
                assertTrue(msg.contains("goo"));
                return null;
            }
        });
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/model/labels/LabelExpressionTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916092/fstmerge_var1_6640241838292570490
@Test public void fingerprintDependencies() throws Exception {
        FreeStyleProject upstream = createFreeStyleProjectWithFingerprints(singleContents, singleFiles);
        FreeStyleProject downstream = createFreeStyleProjectWithFingerprints(singleContents, singleFiles);

        j.assertBuildStatusSuccess(upstream.scheduleBuild2(0).get());
        j.assertBuildStatusSuccess(downstream.scheduleBuild2(0).get());

        List<AbstractProject> downstreamProjects = upstream.getDownstreamProjects();
        List<AbstractProject> upstreamProjects = downstream.getUpstreamProjects();

        assertEquals(1, downstreamProjects.size());
        assertEquals(1, upstreamProjects.size());
        assertTrue(upstreamProjects.contains(upstream));
        assertTrue(downstreamProjects.contains(downstream));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916092/fstmerge_base_5615793070296291769
=======
@Test public void fingerprintDependencies() throws Exception {
        FreeStyleProject upstream = createFreeStyleProjectWithFingerprints(singleContents, singleFiles);
        FreeStyleProject downstream = createFreeStyleProjectWithFingerprints(singleContents, singleFiles);

        j.assertBuildStatusSuccess(upstream.scheduleBuild2(0).get());
        j.assertBuildStatusSuccess(downstream.scheduleBuild2(0).get());

        j.jenkins.rebuildDependencyGraph();

        List<AbstractProject> downstreamProjects = upstream.getDownstreamProjects();
        List<AbstractProject> upstreamProjects = downstream.getUpstreamProjects();

        assertEquals(1, downstreamProjects.size());
        assertEquals(1, upstreamProjects.size());
        assertTrue(upstreamProjects.contains(upstream));
        assertTrue(downstreamProjects.contains(downstream));
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916092/fstmerge_var2_2120501802624240363

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/tasks/FingerprinterTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916096/fstmerge_var1_581516062207554286
@Test public void multipleUpstreamDependencies() throws Exception {
        FreeStyleProject upstream = createFreeStyleProjectWithFingerprints(singleContents, singleFiles);
        FreeStyleProject upstream2 = createFreeStyleProjectWithFingerprints(singleContents2, singleFiles2);
        FreeStyleProject downstream = createFreeStyleProjectWithFingerprints(doubleContents, doubleFiles);

        j.assertBuildStatusSuccess(upstream.scheduleBuild2(0).get());
        j.assertBuildStatusSuccess(upstream2.scheduleBuild2(0).get());
        j.assertBuildStatusSuccess(downstream.scheduleBuild2(0).get());

        List<AbstractProject> downstreamProjects = upstream.getDownstreamProjects();
        List<AbstractProject> downstreamProjects2 = upstream2.getDownstreamProjects();
        List<AbstractProject> upstreamProjects = downstream.getUpstreamProjects();

        assertEquals(1, downstreamProjects.size());
        assertEquals(1, downstreamProjects2.size());
        assertEquals(2, upstreamProjects.size());
        assertTrue(upstreamProjects.contains(upstream));
        assertTrue(upstreamProjects.contains(upstream2));
        assertTrue(downstreamProjects.contains(downstream));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916096/fstmerge_base_2630459235992744195
=======
@Test public void multipleUpstreamDependencies() throws Exception {
        FreeStyleProject upstream = createFreeStyleProjectWithFingerprints(singleContents, singleFiles);
        FreeStyleProject upstream2 = createFreeStyleProjectWithFingerprints(singleContents2, singleFiles2);
        FreeStyleProject downstream = createFreeStyleProjectWithFingerprints(doubleContents, doubleFiles);

        j.assertBuildStatusSuccess(upstream.scheduleBuild2(0).get());
        j.assertBuildStatusSuccess(upstream2.scheduleBuild2(0).get());
        j.assertBuildStatusSuccess(downstream.scheduleBuild2(0).get());

        j.jenkins.rebuildDependencyGraph();

        List<AbstractProject> downstreamProjects = upstream.getDownstreamProjects();
        List<AbstractProject> downstreamProjects2 = upstream2.getDownstreamProjects();
        List<AbstractProject> upstreamProjects = downstream.getUpstreamProjects();

        assertEquals(1, downstreamProjects.size());
        assertEquals(1, downstreamProjects2.size());
        assertEquals(2, upstreamProjects.size());
        assertTrue(upstreamProjects.contains(upstream));
        assertTrue(upstreamProjects.contains(upstream2));
        assertTrue(downstreamProjects.contains(downstream));
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916096/fstmerge_var2_6039160610759555351

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/tasks/FingerprinterTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916101/fstmerge_var1_3908566907022027747
@Test public void multipleDownstreamDependencies() throws Exception {
        FreeStyleProject upstream = createFreeStyleProjectWithFingerprints(doubleContents, doubleFiles);
        FreeStyleProject downstream = createFreeStyleProjectWithFingerprints(singleContents, singleFiles);
        FreeStyleProject downstream2 = createFreeStyleProjectWithFingerprints(singleContents2, singleFiles2);

        j.assertBuildStatusSuccess(upstream.scheduleBuild2(0).get());
        j.assertBuildStatusSuccess(downstream.scheduleBuild2(0).get());
        j.assertBuildStatusSuccess(downstream2.scheduleBuild2(0).get());

        List<AbstractProject> downstreamProjects = upstream.getDownstreamProjects();
        List<AbstractProject> upstreamProjects = downstream.getUpstreamProjects();
        List<AbstractProject> upstreamProjects2 = downstream2.getUpstreamProjects();

        assertEquals(2, downstreamProjects.size());
        assertEquals(1, upstreamProjects.size());
        assertEquals(1, upstreamProjects2.size());
        assertTrue(upstreamProjects.contains(upstream));
        assertTrue(upstreamProjects2.contains(upstream));
        assertTrue(downstreamProjects.contains(downstream));
        assertTrue(downstreamProjects.contains(downstream2));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916101/fstmerge_base_1901958687132439200
=======
@Test public void multipleDownstreamDependencies() throws Exception {
        FreeStyleProject upstream = createFreeStyleProjectWithFingerprints(doubleContents, doubleFiles);
        FreeStyleProject downstream = createFreeStyleProjectWithFingerprints(singleContents, singleFiles);
        FreeStyleProject downstream2 = createFreeStyleProjectWithFingerprints(singleContents2, singleFiles2);

        j.assertBuildStatusSuccess(upstream.scheduleBuild2(0).get());
        j.assertBuildStatusSuccess(downstream.scheduleBuild2(0).get());
        j.assertBuildStatusSuccess(downstream2.scheduleBuild2(0).get());

        j.jenkins.rebuildDependencyGraph();

        List<AbstractProject> downstreamProjects = upstream.getDownstreamProjects();
        List<AbstractProject> upstreamProjects = downstream.getUpstreamProjects();
        List<AbstractProject> upstreamProjects2 = downstream2.getUpstreamProjects();

        assertEquals(2, downstreamProjects.size());
        assertEquals(1, upstreamProjects.size());
        assertEquals(1, upstreamProjects2.size());
        assertTrue(upstreamProjects.contains(upstream));
        assertTrue(upstreamProjects2.contains(upstream));
        assertTrue(downstreamProjects.contains(downstream));
        assertTrue(downstreamProjects.contains(downstream2));
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916101/fstmerge_var2_6968163871537172865

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/tasks/FingerprinterTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916106/fstmerge_var1_8824712931440795510
@Test public void dependencyExclusion() throws Exception {
        FreeStyleProject upstream = createFreeStyleProjectWithFingerprints(singleContents, singleFiles);
        FreeStyleProject downstream = createFreeStyleProjectWithFingerprints(singleContents, singleFiles);

        FreeStyleBuild upstreamBuild = j.assertBuildStatusSuccess(upstream.scheduleBuild2(0).get());
        j.assertBuildStatusSuccess(downstream.scheduleBuild2(0).get());

        upstreamBuild.delete();

        Hudson.getInstance().rebuildDependencyGraph();

        List<AbstractProject> upstreamProjects = downstream.getUpstreamProjects();
        List<AbstractProject> downstreamProjects = upstream.getDownstreamProjects();

        assertEquals(0, upstreamProjects.size());
        assertEquals(0, downstreamProjects.size());
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916106/fstmerge_base_589606484008008438
=======
@Test public void dependencyExclusion() throws Exception {
        FreeStyleProject upstream = createFreeStyleProjectWithFingerprints(singleContents, singleFiles);
        FreeStyleProject downstream = createFreeStyleProjectWithFingerprints(singleContents, singleFiles);

        FreeStyleBuild upstreamBuild = j.assertBuildStatusSuccess(upstream.scheduleBuild2(0).get());
        j.assertBuildStatusSuccess(downstream.scheduleBuild2(0).get());

        upstreamBuild.delete();

        Jenkins.getInstance().rebuildDependencyGraph();

        List<AbstractProject> upstreamProjects = downstream.getUpstreamProjects();
        List<AbstractProject> downstreamProjects = upstream.getDownstreamProjects();

        assertEquals(0, upstreamProjects.size());
        assertEquals(0, downstreamProjects.size());
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916106/fstmerge_var2_1248989212251644202

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/tasks/FingerprinterTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916110/fstmerge_var1_7545676248091114008
@Test public void circularDependency() throws Exception {
        FreeStyleProject p = createFreeStyleProjectWithFingerprints(singleContents, singleFiles);
        
        j.assertBuildStatusSuccess(p.scheduleBuild2(0).get());
        j.assertBuildStatusSuccess(p.scheduleBuild2(0).get());
        
        List<AbstractProject> upstreamProjects = p.getUpstreamProjects();
        List<AbstractProject> downstreamProjects = p.getDownstreamProjects();
        
        assertEquals(0, upstreamProjects.size());
        assertEquals(0, downstreamProjects.size());
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916110/fstmerge_base_6265915850257324103
=======
@Test public void circularDependency() throws Exception {
        FreeStyleProject p = createFreeStyleProjectWithFingerprints(singleContents, singleFiles);
        
        j.assertBuildStatusSuccess(p.scheduleBuild2(0).get());
        j.assertBuildStatusSuccess(p.scheduleBuild2(0).get());
        
        Jenkins.getInstance().rebuildDependencyGraph();

        List<AbstractProject> upstreamProjects = p.getUpstreamProjects();
        List<AbstractProject> downstreamProjects = p.getDownstreamProjects();
        
        assertEquals(0, upstreamProjects.size());
        assertEquals(0, downstreamProjects.size());
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916110/fstmerge_var2_931553725941415847

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/tasks/FingerprinterTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916115/fstmerge_var1_2354070517999812508
@Test public void matrixDependency() throws Exception {
        MatrixProject matrixProject = j.createMatrixProject();
        matrixProject.setAxes(new AxisList(new Axis("foo", "a", "b")));
        FreeStyleProject freestyleProject = createFreeStyleProjectWithFingerprints(singleContents, singleFiles);
        addFingerprinterToProject(matrixProject, singleContents, singleFiles);

        j.jenkins.rebuildDependencyGraph();

        j.buildAndAssertSuccess(matrixProject);
        j.buildAndAssertSuccess(freestyleProject);
        j.waitUntilNoActivity();

        RunList<FreeStyleBuild> builds = freestyleProject.getBuilds();
        assertEquals("There should only be one FreestyleBuild", 1, builds.size());
        FreeStyleBuild build = builds.iterator().next();
        assertEquals(Result.SUCCESS, build.getResult());
        List<AbstractProject> downstream = j.jenkins.getDependencyGraph().getDownstream(matrixProject);
        assertTrue(downstream.contains(freestyleProject));        
        List<AbstractProject> upstream = j.jenkins.getDependencyGraph().getUpstream(freestyleProject);
        assertTrue(upstream.contains(matrixProject));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916115/fstmerge_base_6922457406296156958
=======
@Test public void matrixDependency() throws Exception {
        MatrixProject matrixProject = j.createMatrixProject();
        matrixProject.setAxes(new AxisList(new Axis("foo", "a", "b")));
        FreeStyleProject freestyleProject = createFreeStyleProjectWithFingerprints(singleContents, singleFiles);
        addFingerprinterToProject(matrixProject, singleContents, singleFiles);

        j.jenkins.rebuildDependencyGraph();

        j.buildAndAssertSuccess(matrixProject);
        j.buildAndAssertSuccess(freestyleProject);
        j.waitUntilNoActivity();

        j.jenkins.rebuildDependencyGraph();

        RunList<FreeStyleBuild> builds = freestyleProject.getBuilds();
        assertEquals("There should only be one FreestyleBuild", 1, builds.size());
        FreeStyleBuild build = builds.iterator().next();
        assertEquals(Result.SUCCESS, build.getResult());
        List<AbstractProject> downstream = j.jenkins.getDependencyGraph().getDownstream(matrixProject);
        assertTrue(downstream.contains(freestyleProject));        
        List<AbstractProject> upstream = j.jenkins.getDependencyGraph().getUpstream(freestyleProject);
        assertTrue(upstream.contains(matrixProject));
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916115/fstmerge_var2_8318769293300096721

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/tasks/FingerprinterTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916129/fstmerge_var1_1922588267039681268
@SuppressWarnings("unchecked")
    @Bug(18417)
    @Test
    public void fingerprintCleanup() throws Exception {
        Assume.assumeFalse("for p3.upstreamProjects expected:<[hudson.model.FreeStyleProject@590e5b8[test0]]> but was:<[]>", "https://jenkins.ci.cloudbees.com/job/core/job/jenkins_main_trunk/".equals(System.getenv("JOB_URL")));
        // file names shouldn't matter
        FreeStyleProject p1 = createFreeStyleProjectWithFingerprints(singleContents, singleFiles);
        FreeStyleProject p2 = createFreeStyleProjectWithFingerprints(singleContents, singleFiles2);
        FreeStyleProject p3 = createFreeStyleProjectWithFingerprints(singleContents, singleFiles);

        j.assertBuildStatusSuccess(p1.scheduleBuild2(0));
        j.assertBuildStatusSuccess(p2.scheduleBuild2(0));
        j.assertBuildStatusSuccess(p3.scheduleBuild2(0));

        Fingerprint f = j.jenkins._getFingerprint(Util.getDigestOf(singleContents[0]+"\n"));
        assertEquals(3,f.getUsages().size());

        assertEquals(Arrays.asList(p1), p2.getUpstreamProjects());
        assertEquals(Arrays.asList(p1), p3.getUpstreamProjects());
        assertEquals(new HashSet(Arrays.asList(p2,p3)), new HashSet(p1.getDownstreamProjects()));

        // discard the p3 records
        p3.delete();
        new FingerprintCleanupThread().execute(StreamTaskListener.fromStdout());

        // records for p3 should have been deleted now
        assertEquals(2,f.getUsages().size());
        assertEquals(Arrays.asList(p1), p2.getUpstreamProjects());
        assertEquals(Arrays.asList(p2), p1.getDownstreamProjects());


        // do a new build in p2 #2 that points to a separate fingerprints
        p2.getBuildersList().clear();
        p2.getPublishersList().clear();
        addFingerprinterToProject(p2,singleContents2,singleFiles2);
        j.assertBuildStatusSuccess(p2.scheduleBuild2(0));

        // another garbage collection that gets rid of p2 records from the fingerprint
        p2.getBuildByNumber(1).delete();
        new FingerprintCleanupThread().execute(StreamTaskListener.fromStdout());

        assertEquals(1,f.getUsages().size());
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916129/fstmerge_base_3713337786904933307
=======
@SuppressWarnings("unchecked")
    @RandomlyFails("for p3.upstreamProjects expected:<[hudson.model.FreeStyleProject@590e5b8[test0]]> but was:<[]>")
    @Bug(18417)
    @Test
    public void fingerprintCleanup() throws Exception {
        // file names shouldn't matter
        FreeStyleProject p1 = createFreeStyleProjectWithFingerprints(singleContents, singleFiles);
        FreeStyleProject p2 = createFreeStyleProjectWithFingerprints(singleContents, singleFiles2);
        FreeStyleProject p3 = createFreeStyleProjectWithFingerprints(singleContents, singleFiles);

        j.assertBuildStatusSuccess(p1.scheduleBuild2(0));
        j.assertBuildStatusSuccess(p2.scheduleBuild2(0));
        j.assertBuildStatusSuccess(p3.scheduleBuild2(0));

        Fingerprint f = j.jenkins._getFingerprint(Util.getDigestOf(singleContents[0]+"\n"));
        assertEquals(3,f.getUsages().size());

        j.jenkins.rebuildDependencyGraph();

        assertEquals(Arrays.asList(p1), p2.getUpstreamProjects());
        assertEquals(Arrays.asList(p1), p3.getUpstreamProjects());
        assertEquals(new HashSet(Arrays.asList(p2,p3)), new HashSet(p1.getDownstreamProjects()));

        // discard the p3 records
        p3.delete();
        new FingerprintCleanupThread().execute(StreamTaskListener.fromStdout());

        j.jenkins.rebuildDependencyGraph();

        // records for p3 should have been deleted now
        assertEquals(2,f.getUsages().size());
        assertEquals(Arrays.asList(p1), p2.getUpstreamProjects());
        assertEquals(Arrays.asList(p2), p1.getDownstreamProjects());


        // do a new build in p2 #2 that points to a separate fingerprints
        p2.getBuildersList().clear();
        p2.getPublishersList().clear();
        addFingerprinterToProject(p2,singleContents2,singleFiles2);
        j.assertBuildStatusSuccess(p2.scheduleBuild2(0));

        // another garbage collection that gets rid of p2 records from the fingerprint
        p2.getBuildByNumber(1).delete();
        new FingerprintCleanupThread().execute(StreamTaskListener.fromStdout());

        assertEquals(1,f.getUsages().size());
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916129/fstmerge_var2_4249357675569418932

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/tasks/FingerprinterTest.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916310/fstmerge_base_8713627343924949523
@Bug(3227)
=======
@Test
    @Bug(3227)
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916310/fstmerge_var2_8286231138546135960
    public void testEmptyDirectories() throws Exception {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916310/fstmerge_var1_4589985708911257940
        FreeStyleProject project = j.createFreeStyleProject();
        Publisher artifactArchiver = new ArtifactArchiver("dir/", "", false, false);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916310/fstmerge_base_8713627343924949523
        FreeStyleProject project = createFreeStyleProject();
        Publisher artifactArchiver = new ArtifactArchiver("dir/", "", false, false);
=======
        FreeStyleProject project = j.createFreeStyleProject();
        Publisher artifactArchiver = new ArtifactArchiver("dir/");
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916310/fstmerge_var2_8286231138546135960
        project.getPublishersList().replaceBy(Collections.singleton(artifactArchiver));
        project.getBuildersList().replaceBy(Collections.singleton(new TestBuilder() {
            public boolean perform(AbstractBuild<?, ?> build, Launcher launcher, BuildListener listener) throws InterruptedException, IOException {
                FilePath dir = build.getWorkspace().child("dir");
                dir.child("subdir1").mkdirs();
                FilePath subdir2 = dir.child("subdir2");
                subdir2.mkdirs();
                subdir2.child("file").write("content", "UTF-8");
                return true;
            }
        }));
        assertEquals(Result.SUCCESS, build(project)); // #1
        File artifacts = project.getBuildByNumber(1).getArtifactsDir();
        File[] kids = artifacts.listFiles();
        assertEquals(1, kids.length);
        assertEquals("dir", kids[0].getName());
        kids = kids[0].listFiles();
        assertEquals(1, kids.length);
        assertEquals("subdir2", kids[0].getName());
        kids = kids[0].listFiles();
        assertEquals(1, kids.length);
        assertEquals("file", kids[0].getName());
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/tasks/ArtifactArchiverTest.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916316/fstmerge_base_3440253964221983855
@Bug(10502)
=======
@Test
    @Bug(10502)
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916316/fstmerge_var2_61839040045541524
    public void testAllowEmptyArchive() throws Exception {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916316/fstmerge_var1_6703218881657854843
        FreeStyleProject project = j.createFreeStyleProject();
        project.getPublishersList().replaceBy(Collections.singleton(new ArtifactArchiver("f", "", false, true)));
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916316/fstmerge_base_3440253964221983855
        FreeStyleProject project = createFreeStyleProject();
        project.getPublishersList().replaceBy(Collections.singleton(new ArtifactArchiver("f", "", false, true)));
=======
        FreeStyleProject project = j.createFreeStyleProject();
        ArtifactArchiver aa = new ArtifactArchiver("f");
        aa.setAllowEmptyArchive(true);
        project.getPublishersList().replaceBy(Collections.singleton(aa));
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916316/fstmerge_var2_61839040045541524
        assertEquals("(no artifacts)", Result.SUCCESS, build(project));
        assertFalse(project.getBuildByNumber(1).getHasArtifacts());
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/tasks/ArtifactArchiverTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916320/fstmerge_var1_1426691928698683503
private void runNewBuildAndStartUnitlIsCreated(AbstractProject project) throws InterruptedException{
        int buildNumber = project.getNextBuildNumber();
        project.scheduleBuild2(0);
        int count = 0;
        while(project.getBuildByNumber(buildNumber)==null && count<30){
            Thread.sleep(100);
            count ++;
        }
        if(project.getBuildByNumber(buildNumber)==null)
            fail("Build " + buildNumber + " did not created.");
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916320/fstmerge_base_2290870834270409451
=======
private void runNewBuildAndStartUnitlIsCreated(AbstractProject project) throws InterruptedException{
        int buildNumber = project.getNextBuildNumber();
        project.scheduleBuild2(0);
        int count = 0;
        while(project.getBuildByNumber(buildNumber)==null && count<50){
            Thread.sleep(100);
            count ++;
        }
        if(project.getBuildByNumber(buildNumber)==null)
            fail("Build " + buildNumber + " did not created.");
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916320/fstmerge_var2_4281392553073820179

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/tasks/ArtifactArchiverTest.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916330/fstmerge_var1_5694008650035055355
@Test
    public void testSuccessVsFailure() throws Exception {
        FreeStyleProject project = j.createFreeStyleProject();
        project.getPublishersList().replaceBy(Collections.singleton(new ArtifactArchiver("f", "", true, false)));
        assertEquals("(no artifacts)", Result.FAILURE, build(project)); // #1
        assertFalse(project.getBuildByNumber(1).getHasArtifacts());
        project.getBuildersList().replaceBy(Collections.singleton(new CreateArtifact()));
        assertEquals(Result.SUCCESS, build(project)); // #2
        assertTrue(project.getBuildByNumber(2).getHasArtifacts());
        project.getBuildersList().replaceBy(Arrays.asList(new CreateArtifact(), new FailureBuilder()));
        assertEquals(Result.FAILURE, build(project)); // #3
        assertTrue(project.getBuildByNumber(2).getHasArtifacts());
        assertTrue(project.getBuildByNumber(3).getHasArtifacts());
        assertEquals(Result.FAILURE, build(project)); // #4
        assertTrue(project.getBuildByNumber(2).getHasArtifacts());
        assertTrue(project.getBuildByNumber(3).getHasArtifacts());
        assertTrue(project.getBuildByNumber(4).getHasArtifacts());
        assertEquals(Result.FAILURE, build(project)); // #5
        assertTrue(project.getBuildByNumber(2).getHasArtifacts());
        assertFalse("no better than #4", project.getBuildByNumber(3).getHasArtifacts());
        assertTrue(project.getBuildByNumber(4).getHasArtifacts());
        assertTrue(project.getBuildByNumber(5).getHasArtifacts());
        project.getBuildersList().replaceBy(Collections.singleton(new CreateArtifact()));
        assertEquals(Result.SUCCESS, build(project)); // #6
        assertTrue("#2 is still lastSuccessful until #6 is complete", project.getBuildByNumber(2).getHasArtifacts());
        assertFalse(project.getBuildByNumber(3).getHasArtifacts());
        assertFalse(project.getBuildByNumber(4).getHasArtifacts());
        assertTrue(project.getBuildByNumber(5).getHasArtifacts());
        assertTrue(project.getBuildByNumber(6).getHasArtifacts());
        assertEquals(Result.SUCCESS, build(project)); // #7
        assertFalse("lastSuccessful was #6 for ArtifactArchiver", project.getBuildByNumber(2).getHasArtifacts());
        assertFalse(project.getBuildByNumber(3).getHasArtifacts());
        assertFalse(project.getBuildByNumber(4).getHasArtifacts());
        assertFalse(project.getBuildByNumber(5).getHasArtifacts());
        assertTrue(project.getBuildByNumber(6).getHasArtifacts());
        assertTrue(project.getBuildByNumber(7).getHasArtifacts());
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916330/fstmerge_base_493884767455953120
public void testSuccessVsFailure() throws Exception {
        FreeStyleProject project = createFreeStyleProject();
        project.getPublishersList().replaceBy(Collections.singleton(new ArtifactArchiver("f", "", true, false)));
        assertEquals("(no artifacts)", Result.FAILURE, build(project)); // #1
        assertFalse(project.getBuildByNumber(1).getHasArtifacts());
        project.getBuildersList().replaceBy(Collections.singleton(new CreateArtifact()));
        assertEquals(Result.SUCCESS, build(project)); // #2
        assertTrue(project.getBuildByNumber(2).getHasArtifacts());
        project.getBuildersList().replaceBy(Arrays.asList(new CreateArtifact(), new FailureBuilder()));
        assertEquals(Result.FAILURE, build(project)); // #3
        assertTrue(project.getBuildByNumber(2).getHasArtifacts());
        assertTrue(project.getBuildByNumber(3).getHasArtifacts());
        assertEquals(Result.FAILURE, build(project)); // #4
        assertTrue(project.getBuildByNumber(2).getHasArtifacts());
        assertTrue(project.getBuildByNumber(3).getHasArtifacts());
        assertTrue(project.getBuildByNumber(4).getHasArtifacts());
        assertEquals(Result.FAILURE, build(project)); // #5
        assertTrue(project.getBuildByNumber(2).getHasArtifacts());
        assertFalse("no better than #4", project.getBuildByNumber(3).getHasArtifacts());
        assertTrue(project.getBuildByNumber(4).getHasArtifacts());
        assertTrue(project.getBuildByNumber(5).getHasArtifacts());
        project.getBuildersList().replaceBy(Collections.singleton(new CreateArtifact()));
        assertEquals(Result.SUCCESS, build(project)); // #6
        assertTrue("#2 is still lastSuccessful until #6 is complete", project.getBuildByNumber(2).getHasArtifacts());
        assertFalse(project.getBuildByNumber(3).getHasArtifacts());
        assertFalse(project.getBuildByNumber(4).getHasArtifacts());
        assertTrue(project.getBuildByNumber(5).getHasArtifacts());
        assertTrue(project.getBuildByNumber(6).getHasArtifacts());
        assertEquals(Result.SUCCESS, build(project)); // #7
        assertFalse("lastSuccessful was #6 for ArtifactArchiver", project.getBuildByNumber(2).getHasArtifacts());
        assertFalse(project.getBuildByNumber(3).getHasArtifacts());
        assertFalse(project.getBuildByNumber(4).getHasArtifacts());
        assertFalse(project.getBuildByNumber(5).getHasArtifacts());
        assertTrue(project.getBuildByNumber(6).getHasArtifacts());
        assertTrue(project.getBuildByNumber(7).getHasArtifacts());
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916330/fstmerge_var2_5260911378628039941

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/tasks/ArtifactArchiverTest.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916336/fstmerge_var1_6960015507718020662
@Test
    @Bug(2417)
    public void testStableVsUnstable() throws Exception {
        FreeStyleProject project = j.createFreeStyleProject();
        Publisher artifactArchiver = new ArtifactArchiver("f", "", true, false);
        project.getPublishersList().replaceBy(Collections.singleton(artifactArchiver));
        project.getBuildersList().replaceBy(Collections.singleton(new CreateArtifact()));
        assertEquals(Result.SUCCESS, build(project)); // #1
        assertTrue(project.getBuildByNumber(1).getHasArtifacts());
        project.getPublishersList().replaceBy(Arrays.asList(artifactArchiver, new TestsFail()));
        assertEquals(Result.UNSTABLE, build(project)); // #2
        assertTrue(project.getBuildByNumber(1).getHasArtifacts());
        assertTrue(project.getBuildByNumber(2).getHasArtifacts());
        assertEquals(Result.UNSTABLE, build(project)); // #3
        assertTrue(project.getBuildByNumber(1).getHasArtifacts());
        assertTrue(project.getBuildByNumber(2).getHasArtifacts());
        assertTrue(project.getBuildByNumber(3).getHasArtifacts());
        assertEquals(Result.UNSTABLE, build(project)); // #4
        assertTrue(project.getBuildByNumber(1).getHasArtifacts());
        assertFalse(project.getBuildByNumber(2).getHasArtifacts());
        assertTrue(project.getBuildByNumber(3).getHasArtifacts());
        assertTrue(project.getBuildByNumber(4).getHasArtifacts());
        project.getPublishersList().replaceBy(Collections.singleton(artifactArchiver));
        assertEquals(Result.SUCCESS, build(project)); // #5
        assertTrue(project.getBuildByNumber(1).getHasArtifacts());
        assertFalse(project.getBuildByNumber(2).getHasArtifacts());
        assertFalse(project.getBuildByNumber(3).getHasArtifacts());
        assertTrue(project.getBuildByNumber(4).getHasArtifacts());
        assertTrue(project.getBuildByNumber(5).getHasArtifacts());
        assertEquals(Result.SUCCESS, build(project)); // #6
        assertFalse(project.getBuildByNumber(1).getHasArtifacts());
        assertFalse(project.getBuildByNumber(2).getHasArtifacts());
        assertFalse(project.getBuildByNumber(3).getHasArtifacts());
        assertFalse(project.getBuildByNumber(4).getHasArtifacts());
        assertTrue(project.getBuildByNumber(5).getHasArtifacts());
        assertTrue(project.getBuildByNumber(6).getHasArtifacts());
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916336/fstmerge_base_1924452493243844687
@Bug(2417)
    public void testStableVsUnstable() throws Exception {
        FreeStyleProject project = createFreeStyleProject();
        Publisher artifactArchiver = new ArtifactArchiver("f", "", true, false);
        project.getPublishersList().replaceBy(Collections.singleton(artifactArchiver));
        project.getBuildersList().replaceBy(Collections.singleton(new CreateArtifact()));
        assertEquals(Result.SUCCESS, build(project)); // #1
        assertTrue(project.getBuildByNumber(1).getHasArtifacts());
        project.getPublishersList().replaceBy(Arrays.asList(artifactArchiver, new TestsFail()));
        assertEquals(Result.UNSTABLE, build(project)); // #2
        assertTrue(project.getBuildByNumber(1).getHasArtifacts());
        assertTrue(project.getBuildByNumber(2).getHasArtifacts());
        assertEquals(Result.UNSTABLE, build(project)); // #3
        assertTrue(project.getBuildByNumber(1).getHasArtifacts());
        assertTrue(project.getBuildByNumber(2).getHasArtifacts());
        assertTrue(project.getBuildByNumber(3).getHasArtifacts());
        assertEquals(Result.UNSTABLE, build(project)); // #4
        assertTrue(project.getBuildByNumber(1).getHasArtifacts());
        assertFalse(project.getBuildByNumber(2).getHasArtifacts());
        assertTrue(project.getBuildByNumber(3).getHasArtifacts());
        assertTrue(project.getBuildByNumber(4).getHasArtifacts());
        project.getPublishersList().replaceBy(Collections.singleton(artifactArchiver));
        assertEquals(Result.SUCCESS, build(project)); // #5
        assertTrue(project.getBuildByNumber(1).getHasArtifacts());
        assertFalse(project.getBuildByNumber(2).getHasArtifacts());
        assertFalse(project.getBuildByNumber(3).getHasArtifacts());
        assertTrue(project.getBuildByNumber(4).getHasArtifacts());
        assertTrue(project.getBuildByNumber(5).getHasArtifacts());
        assertEquals(Result.SUCCESS, build(project)); // #6
        assertFalse(project.getBuildByNumber(1).getHasArtifacts());
        assertFalse(project.getBuildByNumber(2).getHasArtifacts());
        assertFalse(project.getBuildByNumber(3).getHasArtifacts());
        assertFalse(project.getBuildByNumber(4).getHasArtifacts());
        assertTrue(project.getBuildByNumber(5).getHasArtifacts());
        assertTrue(project.getBuildByNumber(6).getHasArtifacts());
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916336/fstmerge_var2_7453008901713561855

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/tasks/ArtifactArchiverTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916486/fstmerge_var1_6218076783133312901
@LocalData
   @Test public void slave() throws Exception {
        Assume.assumeFalse("TimeoutException from basic", "https://jenkins.ci.cloudbees.com/job/core/job/jenkins_main_trunk/".equals(System.getenv("JOB_URL")));
        DumbSlave s = j.createOnlineSlave();
        project.setAssignedLabel(s.getSelfLabel());

        FilePath src = new FilePath(j.jenkins.getRootPath(), "jobs/junit/workspace/");
        assertNotNull(src);
        FilePath dest = s.getWorkspaceFor(project);
        assertNotNull(dest);
        src.copyRecursiveTo("*.xml", dest);
        
        basic();
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916486/fstmerge_base_4684720583949443057
=======
@RandomlyFails("TimeoutException from basic")
   @LocalData
   @Test public void slave() throws Exception {
        DumbSlave s = j.createOnlineSlave();
        project.setAssignedLabel(s.getSelfLabel());

        FilePath src = new FilePath(j.jenkins.getRootPath(), "jobs/junit/workspace/");
        assertNotNull(src);
        FilePath dest = s.getWorkspaceFor(project);
        assertNotNull(dest);
        src.copyRecursiveTo("*.xml", dest);
        
        basic();
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916486/fstmerge_var2_6536433897423464619

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/tasks/junit/JUnitResultArchiverTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916596/fstmerge_var1_7237471101132902888
@LocalData
    @Test
    public void aggregatedTestResultsOnly() throws Exception {
        createUpstreamProjectWithNoTests();
        createDownstreamProjectWithTests();

        buildAndSetupPageObjects();

        projectPage.getLatestAggregatedTestReportLink()
                .assertHasLatestTestResultText()
                .assertHasTests()
                .follow().hasLinkToTestResultOfBuild(TEST_PROJECT_NAME, 1);
        projectPage.assertNoTestReportLink();

        buildPage.getAggregatedTestReportLink()
                .assertHasAggregatedTestResultText()
                .assertHasTests()
                .follow().hasLinkToTestResultOfBuild(TEST_PROJECT_NAME, 1);
        buildPage.assertNoTestReportLink();
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916596/fstmerge_base_5924405241846233829
=======
@LocalData
    @Test
    public void aggregatedTestResultsOnly() throws Exception {
        createUpstreamProjectWithNoTests();
        createDownstreamProjectWithTests();

        buildAndSetupPageObjects();

        projectPage.getLatestAggregatedTestReportLink()
                .assertHasLatestAggregatedTestResultText()
                .assertHasTests()
                .follow().hasLinkToTestResultOfBuild(TEST_PROJECT_NAME, 1);

        projectPage.assertNoTestReportLink();

        buildPage.getAggregatedTestReportLink()
                .assertHasAggregatedTestResultText()
                .assertHasTests()
                .follow().hasLinkToTestResultOfBuild(TEST_PROJECT_NAME, 1);
        buildPage.assertNoTestReportLink();
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916596/fstmerge_var2_3669682714941279261

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/tasks/test/AggregatedTestResultPublisherTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916601/fstmerge_var1_3535748365994897785
@LocalData
    @Test
    public void testResultsOnly() throws Exception {
        createUpstreamProjectWithTests();
        createDownstreamProjectWithNoTests();

        buildAndSetupPageObjects();

        projectPage.getLatestTestReportLink()
                .assertHasLatestTestResultText()
                .assertHasTests()
                .follow();
        projectPage.assertNoAggregatedTestReportLink();

        buildPage.getTestReportLink()
                .assertHasTestResultText()
                .assertHasTests()
                .follow();
        buildPage.getAggregatedTestReportLink()
                .assertHasAggregatedTestResultText()
                .assertNoTests();
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916601/fstmerge_base_3760060785087730784
=======
@LocalData
    @Test
    public void testResultsOnly() throws Exception {
        createUpstreamProjectWithTests();
        createDownstreamProjectWithNoTests();

        buildAndSetupPageObjects();

        projectPage.getLatestTestReportLink()
                .assertHasLatestTestResultText()
                .assertHasTests()
                .follow();
        projectPage.getLatestAggregatedTestReportLink()
                .assertHasLatestAggregatedTestResultText()
                .assertNoTests()
                .follow();

        buildPage.getTestReportLink()
                .assertHasTestResultText()
                .assertHasTests()
                .follow();
        buildPage.getAggregatedTestReportLink()
                .assertHasAggregatedTestResultText()
                .assertNoTests()
                .follow();
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916601/fstmerge_var2_3392791884582855894

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/tasks/test/AggregatedTestResultPublisherTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916606/fstmerge_var1_2519920355321041055
@LocalData
    @Test
    public void testResultsAndAggregatedTestResults() throws Exception {
        createUpstreamProjectWithTests();
        createDownstreamProjectWithTests();

        buildAndSetupPageObjects();

        projectPage.getLatestTestReportLink()
                .assertHasLatestTestResultText()
                .assertHasTests()
                .follow();
        projectPage.assertNoAggregatedTestReportLink();

        buildPage.getTestReportLink()
                .assertHasTestResultText()
                .assertHasTests()
                .follow();
        buildPage.getAggregatedTestReportLink()
                .assertHasAggregatedTestResultText()
                .assertHasTests()
                .follow()
                .hasLinkToTestResultOfBuild(TEST_PROJECT_NAME, 1);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916606/fstmerge_base_138772613695192313
=======
@LocalData
    @Test
    public void testResultsAndAggregatedTestResults() throws Exception {
        createUpstreamProjectWithTests();
        createDownstreamProjectWithTests();

        buildAndSetupPageObjects();

        projectPage.getLatestTestReportLink()
                .assertHasLatestTestResultText()
                .assertHasTests()
                .follow();
        projectPage.getLatestAggregatedTestReportLink()
                .assertHasLatestAggregatedTestResultText()
                .assertHasTests()
                .follow();

        buildPage.getTestReportLink()
                .assertHasTestResultText()
                .assertHasTests()
                .follow();
        buildPage.getAggregatedTestReportLink()
                .assertHasAggregatedTestResultText()
                .assertHasTests()
                .follow()
                .hasLinkToTestResultOfBuild(TEST_PROJECT_NAME, 1);
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916606/fstmerge_var2_4833770136358544712

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/tasks/test/AggregatedTestResultPublisherTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916616/fstmerge_var1_3504947771126232421
private void buildOnce() throws Exception {
        build = j.buildAndAssertSuccess(upstreamProject);
        j.waitUntilNoActivity();

        List<AbstractBuild<?, ?>> downstreamBuilds = ImmutableList.copyOf(build.getDownstreamBuilds(downstreamProject));
        assertThat(downstreamBuilds, hasSize(1));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916616/fstmerge_base_5709511110024048366
=======
private void buildOnce() throws Exception {
        build(1);
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916616/fstmerge_var2_2240873227735101794

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/tasks/test/AggregatedTestResultPublisherTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916636/fstmerge_var1_3053474668680521824
private void createDownstreamProjectWithNoTests() throws Exception {
        downstreamProject = j.createFreeStyleProject(TEST_PROJECT_NAME);
        downstreamProject.setQuietPeriod(0);
        addFingerprinterToProject(downstreamProject, singleContents, singleFiles);

        upstreamProject.getPublishersList().add(new BuildTrigger(ImmutableList.of(downstreamProject), Result.SUCCESS));
        upstreamProject.getPublishersList().add(new AggregatedTestResultPublisher(TEST_PROJECT_NAME));

        j.jenkins.rebuildDependencyGraph();
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916636/fstmerge_base_4680940062551299378
=======
private void createDownstreamProjectWithNoTests() throws Exception {
        downstreamProject = j.createFreeStyleProject(TEST_PROJECT_NAME);
        downstreamProject.setQuietPeriod(0);
        addFingerprinterToProject(downstreamProject, singleContents, singleFiles);

        upstreamProject.getPublishersList().add(new BuildTrigger(ImmutableList.of(downstreamProject), Result.SUCCESS));
        upstreamProject.getPublishersList().add(new AggregatedTestResultPublisher(null));

        j.jenkins.rebuildDependencyGraph();
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916636/fstmerge_var2_1213353341933194480

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/tasks/test/AggregatedTestResultPublisherTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916646/fstmerge_var1_4043961122706400835
private void addFingerprinterToProject(FreeStyleProject project, String[] contents, String[] files) throws Exception {
        StringBuilder targets = new StringBuilder();
        for (int i = 0; i < contents.length; i++) {
            project.getBuildersList().add(new Shell("echo " + contents[i] + " > " + files[i]));
            targets.append(files[i]).append(',');
        }

        project.getPublishersList().add(new Fingerprinter(targets.toString(), false));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916646/fstmerge_base_588287974592532148
=======
private void addFingerprinterToProject(FreeStyleProject project, String[] contents, String[] files) throws Exception {
        StringBuilder targets = new StringBuilder();
        for (int i = 0; i < contents.length; i++) {
            project.getBuildersList().add(new Shell("echo $BUILD_NUMBER " + contents[i] + " > " + files[i]));
            targets.append(files[i]).append(',');
        }

        project.getPublishersList().add(new Fingerprinter(targets.toString(), false));
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479916646/fstmerge_var2_8952534647641049154

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/tasks/test/AggregatedTestResultPublisherTest.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479917352/fstmerge_var1_619190771531576773
@Bug(6031)
    public void testCompletedStatelessLogAnnotation() throws Exception {
        FreeStyleProject p = createFreeStyleProject();
        p.getBuildersList().add(new TestBuilder() {
            public boolean perform(AbstractBuild<?, ?> build, Launcher launcher, BuildListener listener) throws InterruptedException, IOException {
                listener.getLogger().println("---");
                listener.getLogger().println("ooo");
                listener.getLogger().println("ooo");
                return true;
            }
        });

        FreeStyleBuild b = buildAndAssertSuccess(p);

        // make sure we see the annotation
        HtmlPage rsp = createWebClient().getPage(b, "console");
        assertEquals(1,rsp.selectNodes("//B[@class='demo']").size());

        // make sure raw console output doesn't include the garbage
        TextPage raw = (TextPage)createWebClient().goTo(b.getUrl()+"consoleText","text/plain");
        System.out.println(raw.getContent());
        String nl = System.getProperty("line.separator");
        assertTrue(raw.getContent().contains(nl+"---"+nl+"ooo"+nl+"ooo"+nl));

        // there should be two 'ooo's
        String xml = rsp.asXml();
        assertEquals(xml, 3, xml.split("ooo").length);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479917352/fstmerge_base_5024241534218161272
@Bug(6031)
    public void testCompletedStatelessLogAnnotation() throws Exception {
        FreeStyleProject p = createFreeStyleProject();
        p.getBuildersList().add(new TestBuilder() {
            public boolean perform(AbstractBuild<?, ?> build, Launcher launcher, BuildListener listener) throws InterruptedException, IOException {
                listener.getLogger().println("---");
                listener.getLogger().println("ooo");
                listener.getLogger().println("ooo");
                return true;
            }
        });

        FreeStyleBuild b = buildAndAssertSuccess(p);

        // make sure we see the annotation
        HtmlPage rsp = createWebClient().getPage(b, "console");
        assertEquals(1,rsp.selectNodes("//B[@class='demo']").size());

        // make sure raw console output doesn't include the garbage
        TextPage raw = (TextPage)createWebClient().goTo(b.getUrl()+"consoleText","text/plain");
        System.out.println(raw.getContent());
        String nl = System.getProperty("line.separator");
        assertTrue(raw.getContent().contains(nl+"---"+nl+"ooo"+nl+"ooo"+nl));

        // there should be two 'ooo's
        assertEquals(3,rsp.asXml().split("ooo").length);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479917352/fstmerge_var2_2393855126273126445

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/console/ConsoleAnnotatorTest.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479917378/fstmerge_var1_5894713482342211356
public void testSpaceInUrl() {
        MatrixProject mp = new MatrixProject("matrix test");
        MatrixConfiguration mc = new MatrixConfiguration(mp, Combination.fromString("foo bar=baz bat"));
        assertEquals("job/matrix%20test/", mp.getUrl());
        assertEquals("job/matrix%20test/foo%20bar=baz%20bat/", mc.getUrl());
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479917378/fstmerge_base_890930242458161011
public void testSpaceInUrl() {
        MatrixProject mp = new MatrixProject("matrix test");
        MatrixConfiguration mc = new MatrixConfiguration(mp, Combination.fromString("foo bar=baz bat"));
        assertEquals("job/matrix%20test/", mp.getUrl());
        assertTrue("Invalid: " + mc.getUrl(),
                   "job/matrix%20test/foo%20bar=baz%20bat/".equals(mc.getUrl())
                   || "job/matrix%20test/./foo%20bar=baz%20bat/".equals(mc.getUrl()));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479917378/fstmerge_var2_6291007290709997897

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/matrix/MatrixTest.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479917628/fstmerge_var1_6332108323129080656
@Bug(6779)
    public void testDeleteSetBuildDeletesModuleBuilds() throws Exception {
        MavenModuleSet project = createProject("maven-multimod.zip");
        project.setLocalRepository(new DefaultLocalRepositoryLocator());
        project.setGoals("install");
        buildAndAssertSuccess(project);
        buildAndAssertSuccess(project.getModule("org.jvnet.hudson.main.test.multimod:moduleB"));
        buildAndAssertSuccess(project);
        assertEquals(2, project.getBuilds().size()); // Module build does not add a ModuleSetBuild
        project.getFirstBuild().delete();
        // A#1, B#1 and B#2 should all be deleted too
        assertEquals(1, project.getModule("org.jvnet.hudson.main.test.multimod:moduleA").getBuilds().size());
        assertEquals(1, project.getModule("org.jvnet.hudson.main.test.multimod:moduleB").getBuilds().size());
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479917628/fstmerge_base_4738313103899057641
@Bug(6779)
    public void testDeleteSetBuildDeletesModuleBuilds() throws Exception {
        MavenModuleSet project = createProject("maven-multimod.zip");
        project.setGoals("install");
        buildAndAssertSuccess(project);
        buildAndAssertSuccess(project.getModule("org.jvnet.hudson.main.test.multimod:moduleB"));
        buildAndAssertSuccess(project);
        assertEquals(2, project.getBuilds().size()); // Module build does not add a ModuleSetBuild
        project.getFirstBuild().delete();
        // A#1, B#1 and B#2 should all be deleted too
        assertEquals(1, project.getModule("org.jvnet.hudson.main.test.multimod:moduleA").getBuilds().size());
        assertEquals(1, project.getModule("org.jvnet.hudson.main.test.multimod:moduleB").getBuilds().size());
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479917628/fstmerge_var2_7795728266505025828

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/maven/MavenProjectTest.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479917714/fstmerge_var1_3157845036188549084
@Bug(8415)
    public void testMaven2Failed() throws Exception {
        configureDefaultMaven();
        final MavenModuleSet m = createMavenProject();
        m.setGoals( "test -Dmaven.test.failure.ignore=false" );
        m.setScm(new ExtractResourceSCM(getClass().getResource("maven-multimodule-unit-failure.zip")));
        assertBuildStatus(Result.FAILURE, m.scheduleBuild2(0).get());
        // JENKINS-18895:
        MavenModule failing = m.getModule("com.mycompany.app:my-app");
        assertEquals(Result.FAILURE, failing.getLastBuild().getResult());
        RunLoadCounter.prepare(failing);
        assertEquals(Result.FAILURE, RunLoadCounter.assertMaxLoads(failing, 0, new Callable<Result>() {
            @Override public Result call() throws Exception {
                return m.getLastBuild().getResult();
            }
        }));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479917714/fstmerge_base_1703512360567969931
@Bug(8415)
    public void testMaven2Failed() throws Exception {
        configureDefaultMaven();
        MavenModuleSet m = createMavenProject();
        m.setGoals( "test -Dmaven.test.failure.ignore=false" );
        m.setScm(new ExtractResourceSCM(getClass().getResource("maven-multimodule-unit-failure.zip")));
        assertBuildStatus(Result.FAILURE, m.scheduleBuild2(0).get());
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479917714/fstmerge_var2_2975026272591543978

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/hudson/maven/MavenBuildSurefireFailedTest.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918040/fstmerge_var1_1364337588933248447
public void _testBasicWorkflow() throws Exception {
        putSomeOldData(jenkins.getRootDir());

        WebClient wc = createWebClient();

        // one should see the warning. try scheduling it
        assertTrue(!monitor.isScanOnBoot());
        HtmlForm form = getRekeyForm(wc);
        submit(form, "schedule");
        assertTrue(monitor.isScanOnBoot());
        form = getRekeyForm(wc);
        assertTrue(getButton(form, 1).isDisabled());

        // run it now
        assertTrue(!monitor.getLogFile().exists());
        submit(form, "background");
        assertTrue(monitor.getLogFile().exists());

        // should be no warning/error now
        HtmlPage manage = wc.goTo("/manage");
        assertEquals(0,manage.selectNodes("//*[class='error']").size());
        assertEquals(0,manage.selectNodes("//*[class='warning']").size());

        // and the data should be rewritten
        verifyRewrite(jenkins.getRootDir());
        assertTrue(monitor.isDone());

        // dismiss and the message will be gone
        assertTrue(monitor.isEnabled());
        form = getRekeyForm(wc);
        submit(form, "dismiss");
        assertFalse(monitor.isEnabled());
        try {
            getRekeyForm(wc);
            fail();
        } catch (ElementNotFoundException e) {
            // expected
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918040/fstmerge_base_939453753800617731
=======
public void _testBasicWorkflow() throws Exception {
        putSomeOldData(jenkins.getRootDir());

        WebClient wc = createWebClient();

        // one should see the warning. try scheduling it
        assertTrue(!monitor.isScanOnBoot());
        HtmlForm form = getRekeyForm(wc);
        submit(form, "schedule");
        assertTrue(monitor.isScanOnBoot());
        form = getRekeyForm(wc);
        assertTrue(getButton(form, 1).isDisabled());

        // run it now
        assertTrue(!monitor.getLogFile().exists());
        submit(form, "background");
        assertTrue(monitor.getLogFile().exists());

        // should be no warning/error now
        HtmlPage manage = wc.goTo("manage");
        assertEquals(0,manage.selectNodes("//*[class='error']").size());
        assertEquals(0,manage.selectNodes("//*[class='warning']").size());

        // and the data should be rewritten
        verifyRewrite(jenkins.getRootDir());
        assertTrue(monitor.isDone());

        // dismiss and the message will be gone
        assertTrue(monitor.isEnabled());
        form = getRekeyForm(wc);
        submit(form, "dismiss");
        assertFalse(monitor.isEnabled());
        try {
            getRekeyForm(wc);
            fail();
        } catch (ElementNotFoundException e) {
            // expected
        }
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918040/fstmerge_var2_2358710650903282700

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/test/src/test/java/jenkins/security/RekeySecretAdminMonitorTest.java
Conflict type: ModifierList
Conflict body: 
~~FSTMerge~~ protected static final ##FSTMerge## private static final ##FSTMerge##
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/Maven3ProcessFactory.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918481/fstmerge_var1_7183436678210915928
protected GetClassWorldsJar(String mvnHome, TaskListener listener) {
            this.mvnHome = mvnHome;
            this.listener = listener;
        }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918481/fstmerge_base_404241729075204858
private GetClassWorldsJar(String mvnHome, TaskListener listener) {
            this.mvnHome = mvnHome;
            this.listener = listener;
        }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918481/fstmerge_var2_3482914493664530553

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/Maven3ProcessFactory.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918494/fstmerge_var1_2143557410426104235
public String getIconFileName() {
        if(channel==null)   return null;
        return "computer.png";
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918494/fstmerge_base_1673242664485569673
public String getIconFileName() {
        if(channel==null)   return null;
        return "computer.gif";
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918494/fstmerge_var2_8814117924702534935

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/MavenProbeAction.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918521/fstmerge_var1_6804914946359576840
public void doScript( StaplerRequest req, StaplerResponse rsp ) throws IOException, ServletException {
        Jenkins._doScript(req, rsp, req.getView(this, "_script.jelly"), channel, owner.getACL());
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918521/fstmerge_base_9007791231401504561
public void doScript( StaplerRequest req, StaplerResponse rsp ) throws IOException, ServletException {
        // ability to run arbitrary script is dangerous,
        // so tie it to the admin access
        owner.checkPermission(Jenkins.RUN_SCRIPTS);

        String text = req.getParameter("script");
        if(text!=null) {
            try {
                req.setAttribute("output",
                RemotingDiagnostics.executeGroovy(text,channel));
            } catch (InterruptedException e) {
                throw new ServletException(e);
            }
        }

        req.getView(this,"_script.jelly").forward(req,rsp);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918521/fstmerge_var2_3663607903161748234

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/MavenProbeAction.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918553/fstmerge_var1_4709864904401345447
@Override
    public EnvVars getEnvironment(TaskListener log) throws IOException, InterruptedException {
        EnvVars envs = super.getEnvironment(log);

        // We need to add M2_HOME and the mvn binary to the PATH so if Maven
        // needs to run Maven it will pick the correct one.
        // This can happen if maven calls ANT which itself calls Maven
        // or if Maven calls itself e.g. maven-release-plugin
        MavenInstallation mvn = project.getMaven();
        if (mvn == null)
            throw new AbortException(Messages.MavenModuleSetBuild_NoMavenConfigured());

        
        mvn = mvn.forEnvironment(envs);
        
        Computer computer = Computer.currentComputer();
        if (computer != null) { // just in case were not in a build
            Node node = computer.getNode(); // TODO should this rather be getBuiltOn()? Cf. JENKINS-18898
            if (node != null) {
                mvn = mvn.forNode(node, log);
                mvn.buildEnvVars(envs);
            }
        }
        
        return envs;
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918553/fstmerge_base_2258723196983038419
@Override
    public EnvVars getEnvironment(TaskListener log) throws IOException, InterruptedException {
        EnvVars envs = super.getEnvironment(log);

        // We need to add M2_HOME and the mvn binary to the PATH so if Maven
        // needs to run Maven it will pick the correct one.
        // This can happen if maven calls ANT which itself calls Maven
        // or if Maven calls itself e.g. maven-release-plugin
        MavenInstallation mvn = project.getMaven();
        if (mvn == null)
            throw new AbortException(Messages.MavenModuleSetBuild_NoMavenConfigured());

        
        mvn = mvn.forEnvironment(envs);
        
        Computer computer = Computer.currentComputer();
        if (computer != null) { // just in case were not in a build
            Node node = computer.getNode();
            if (node != null) {
                mvn = mvn.forNode(node, log);
                mvn.buildEnvVars(envs);
            }
        }
        
        return envs;
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918553/fstmerge_var2_3913872779528002326

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/MavenModuleSetBuild.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918558/fstmerge_var1_8214690269640651920
@Override
    public Result getResult() {
        if (isBuilding()) {
            return computeResult();
        }
        synchronized (notifyModuleBuildLock) {
            if (effectiveResult == null) {
                effectiveResult = computeResult();
            }
            return effectiveResult;
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918558/fstmerge_base_5322073047385687226
@Override
    public Result getResult() {
        Result r = super.getResult();

        for (MavenBuild b : getModuleLastBuilds().values()) {
            Result br = b.getResult();
            if(r==null)
                r = br;
            else
            if(br==Result.NOT_BUILT)
                continue;   // UGLY: when computing combined status, ignore the modules that were not built
            else
            if(br!=null)
                r = r.combine(br);
        }

        return r;
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918558/fstmerge_var2_163572853692034960

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/MavenModuleSetBuild.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918575/fstmerge_var1_939865960587649534
private long estimateModuleSetBuildDurationOverhead(int numberOfBuilds) {
        List<MavenModuleSetBuild> moduleSetBuilds = getParent().getEstimatedDurationCandidates();
        
        if (moduleSetBuilds.isEmpty()) {
            return 0;
        }
        
        long overhead = 0;
        for(MavenModuleSetBuild moduleSetBuild : moduleSetBuilds) {
            long sumOfModuleBuilds = 0;
            for (List<MavenBuild> builds : moduleSetBuild.getModuleBuilds().values()) {
                if (!builds.isEmpty()) {
                    MavenBuild moduleBuild = builds.get(0);
                    sumOfModuleBuilds += moduleBuild.getDuration();
                }
            }
            
            overhead += Math.max(0, moduleSetBuild.getDuration() - sumOfModuleBuilds);
        }
        
        return Math.round((double)overhead / moduleSetBuilds.size());
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918575/fstmerge_base_4354848892544088437
private long estimateModuleSetBuildDurationOverhead(int numberOfBuilds) {
        List<MavenModuleSetBuild> moduleSetBuilds = getPreviousBuildsOverThreshold(numberOfBuilds, Result.UNSTABLE);
        
        if (moduleSetBuilds.isEmpty()) {
            return 0;
        }
        
        long overhead = 0;
        for(MavenModuleSetBuild moduleSetBuild : moduleSetBuilds) {
            long sumOfModuleBuilds = 0;
            for (List<MavenBuild> builds : moduleSetBuild.getModuleBuilds().values()) {
                if (!builds.isEmpty()) {
                    MavenBuild moduleBuild = builds.get(0);
                    sumOfModuleBuilds += moduleBuild.getDuration();
                }
            }
            
            overhead += Math.max(0, moduleSetBuild.getDuration() - sumOfModuleBuilds);
        }
        
        return Math.round((double)overhead / moduleSetBuilds.size());
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918575/fstmerge_var2_7254792451697907126

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/MavenModuleSetBuild.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918626/fstmerge_var1_5952480690419288314
void notifyModuleBuild(MavenBuild newBuild) {
        try {
            // update module set build number
            getParent().updateNextBuildNumber();

            // update actions
            Map<MavenModule, List<MavenBuild>> moduleBuilds = getModuleBuilds();

            // actions need to be replaced atomically especially
            // given that two builds might complete simultaneously.
            // use a separate lock object since this synchronized block calls into plugins,
            // which in turn can access other MavenModuleSetBuild instances, which will result in a dead lock.
            synchronized(notifyModuleBuildLock) {
                effectiveResult = null;
                boolean modified = false;

                List<Action> actions = getActions();
                Set<Class<? extends AggregatableAction>> individuals = new HashSet<Class<? extends AggregatableAction>>();
                for (Action a : actions) {
                    if(a instanceof MavenAggregatedReport) {
                        MavenAggregatedReport mar = (MavenAggregatedReport) a;
                        mar.update(moduleBuilds,newBuild);
                        individuals.add(mar.getIndividualActionType());
                        modified = true;
                    }
                }

                // see if the new build has any new aggregatable action that we haven't seen.
                for (AggregatableAction aa : newBuild.getActions(AggregatableAction.class)) {
                    if(individuals.add(aa.getClass())) {
                        // new AggregatableAction
                        MavenAggregatedReport mar = aa.createAggregatedAction(this, moduleBuilds);
                        mar.update(moduleBuilds,newBuild);
                        addAction(mar);
                        modified = true;
                    }
                }

                if(modified) {
                    save();
                    getProject().updateTransientActions();
                }
            }

            // symlink to this module build
            String moduleFsName = newBuild.getProject().getModuleName().toFileSystemName();
            Util.createSymlink(getRootDir(),
                    "../../modules/"+ moduleFsName +"/builds/"+newBuild.getId() /*ugly!*/,
                    moduleFsName, StreamTaskListener.NULL);
        } catch (IOException e) {
            LOGGER.log(Level.WARNING,"Failed to update "+this,e);
        } catch (InterruptedException e) {
            LOGGER.log(Level.WARNING,"Failed to update "+this,e);
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918626/fstmerge_base_6616847725661562419
void notifyModuleBuild(MavenBuild newBuild) {
        try {
            // update module set build number
            getParent().updateNextBuildNumber();

            // update actions
            Map<MavenModule, List<MavenBuild>> moduleBuilds = getModuleBuilds();

            // actions need to be replaced atomically especially
            // given that two builds might complete simultaneously.
            // use a separate lock object since this synchronized block calls into plugins,
            // which in turn can access other MavenModuleSetBuild instances, which will result in a dead lock.
            synchronized(notifyModuleBuildLock) {
                boolean modified = false;

                List<Action> actions = getActions();
                Set<Class<? extends AggregatableAction>> individuals = new HashSet<Class<? extends AggregatableAction>>();
                for (Action a : actions) {
                    if(a instanceof MavenAggregatedReport) {
                        MavenAggregatedReport mar = (MavenAggregatedReport) a;
                        mar.update(moduleBuilds,newBuild);
                        individuals.add(mar.getIndividualActionType());
                        modified = true;
                    }
                }

                // see if the new build has any new aggregatable action that we haven't seen.
                for (AggregatableAction aa : newBuild.getActions(AggregatableAction.class)) {
                    if(individuals.add(aa.getClass())) {
                        // new AggregatableAction
                        MavenAggregatedReport mar = aa.createAggregatedAction(this, moduleBuilds);
                        mar.update(moduleBuilds,newBuild);
                        addAction(mar);
                        modified = true;
                    }
                }

                if(modified) {
                    save();
                    getProject().updateTransientActions();
                }
            }

            // symlink to this module build
            String moduleFsName = newBuild.getProject().getModuleName().toFileSystemName();
            Util.createSymlink(getRootDir(),
                    "../../modules/"+ moduleFsName +"/builds/"+newBuild.getId() /*ugly!*/,
                    moduleFsName, StreamTaskListener.NULL);
        } catch (IOException e) {
            LOGGER.log(Level.WARNING,"Failed to update "+this,e);
        } catch (InterruptedException e) {
            LOGGER.log(Level.WARNING,"Failed to update "+this,e);
        }
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918626/fstmerge_var2_6862080690257613433

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/MavenModuleSetBuild.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918635/fstmerge_var1_2322272153127585705
protected Result doRun(final BuildListener listener) throws Exception {
            
        	Result r = null;
        	PrintStream logger = listener.getLogger();

            try {
            	
                EnvVars envVars = getEnvironment(listener);
                MavenInstallation mvn = project.getMaven();
                if(mvn==null)
                    throw new AbortException(Messages.MavenModuleSetBuild_NoMavenConfigured());

                mvn = mvn.forEnvironment(envVars).forNode(Computer.currentComputer().getNode(), listener);
                
                MavenInformation mavenInformation = getModuleRoot().act( new MavenVersionCallable( mvn.getHome() ));
                
                String mavenVersion = mavenInformation.getVersion();
                
                MavenBuildInformation mavenBuildInformation = new MavenBuildInformation( mavenVersion );
                
                setMavenVersionUsed( mavenVersion );

                LOGGER.fine(getFullDisplayName()+" is building with mavenVersion " + mavenVersion + " from file " + mavenInformation.getVersionResourcePath());
                
                if(!project.isAggregatorStyleBuild()) {
                    parsePoms(listener, logger, envVars, mvn, mavenVersion, mavenBuildInformation);
                    // start module builds
                    logger.println("Triggering "+project.getRootModule().getModuleName());
                    project.getRootModule().scheduleBuild(new UpstreamCause((Run<?,?>)MavenModuleSetBuild.this));
                } else {
                    // do builds here
                    try {
                        List<BuildWrapper> wrappers = new ArrayList<BuildWrapper>();
                        for (BuildWrapper w : project.getBuildWrappersList())
                            wrappers.add(w);
                        ParametersAction parameters = getAction(ParametersAction.class);
                        if (parameters != null)
                            parameters.createBuildWrappers(MavenModuleSetBuild.this,wrappers);

                        for( BuildWrapper w : wrappers) {
                            Environment e = w.setUp(MavenModuleSetBuild.this, launcher, listener);
                            if(e==null){
                                setResult(r = Result.FAILURE);
                                return r;
                            }
                            buildEnvironments.add(e);
                            e.buildEnvVars(envVars); // #3502: too late for getEnvironment to do this
                        }
                        
                    	// run pre build steps
                    	if(!preBuild(listener,project.getPrebuilders())
                        || !preBuild(listener,project.getPostbuilders())
                        || !preBuild(listener,project.getPublishers())){
                    		setResult(r = FAILURE);
                            return r;
                    	}

                    	if(!build(listener,project.getPrebuilders().toList())){
                    		setResult(r = FAILURE);
                            return r;
            			}

                        parsePoms(listener, logger, envVars, mvn, mavenVersion, mavenBuildInformation); // #5428 : do pre-build *before* parsing pom
                        SplittableBuildListener slistener = new SplittableBuildListener(listener);
                        proxies = new HashMap<ModuleName, ProxyImpl2>();
                        List<ModuleName> changedModules = new ArrayList<ModuleName>();
                        
                        if (project.isIncrementalBuild() && !getChangeSet().isEmptySet()) {
                            changedModules.addAll(getUnbuildModulesSinceLastSuccessfulBuild());
                        }

                        for (MavenModule m : project.sortedActiveModules) {
                            MavenBuild mb = m.newBuild();
                            // JENKINS-8418
                            mb.setBuiltOnStr( getBuiltOnStr() );
                            // Check if incrementalBuild is selected and that there are changes -
                            // we act as if incrementalBuild is not set if there are no changes.
                            if (!MavenModuleSetBuild.this.getChangeSet().isEmptySet()
                                && project.isIncrementalBuild()) {
                                //If there are changes for this module, add it.
                                // Also add it if we've never seen this module before,
                                // or if the previous build of this module failed or was unstable.
                                if ((mb.getPreviousBuiltBuild() == null) ||
                                    (!getChangeSetFor(m).isEmpty()) 
                                    || (mb.getPreviousBuiltBuild().getResult().isWorseThan(Result.SUCCESS))) {
                                    changedModules.add(m.getModuleName());
                                }
                            }

                            mb.setWorkspace(getModuleRoot().child(m.getRelativePath()));
                            proxies.put(m.getModuleName(), mb.new ProxyImpl2(MavenModuleSetBuild.this,slistener));
                        }

                        // run the complete build here

                        // figure out the root POM location.
                        // choice of module root ('ws' in this method) is somewhat arbitrary
                        // when multiple CVS/SVN modules are checked out, so also check
                        // the path against the workspace root if that seems like what the user meant (see issue #1293)
                        String rootPOM = project.getRootPOM(envVars); // JENKINS-13822
                        FilePath pom = getModuleRoot().child(rootPOM);
                        FilePath parentLoc = getWorkspace().child(rootPOM);
                        if(!pom.exists() && parentLoc.exists())
                            pom = parentLoc;

                        
                        final ProcessCache.MavenProcess process;
                        
                        boolean maven3orLater = mavenBuildInformation.isMaven3OrLater();

                        MavenUtil.MavenVersion mavenVersionType = MavenUtil.getMavenVersion( mavenVersion );

                        final ProcessCache.Factory factory;

                        Class<?> maven3MainClass = null;

                        Class<?> maven3LauncherClass = null;

                        switch ( mavenVersionType ){
                            case MAVEN_2:
                                LOGGER.fine( "using maven 2 " + mavenVersion );
                                factory = new MavenProcessFactory( project, MavenModuleSetBuild.this, launcher, envVars,getMavenOpts(listener, envVars),
                                                                  pom.getParent() );
                                break;
                            case MAVEN_3_0_X:
                                LOGGER.fine( "using maven 3 " + mavenVersion );
                                factory = new Maven3ProcessFactory( project, MavenModuleSetBuild.this, launcher, envVars, getMavenOpts(listener, envVars),
                                                                    pom.getParent() );
                                maven3MainClass = Maven3Main.class;
                                maven3LauncherClass = Maven3Launcher.class;
                                break;
                            default:
                                LOGGER.fine( "using maven 3 " + mavenVersion );
                                factory = new Maven31ProcessFactory( project, MavenModuleSetBuild.this, launcher, envVars, getMavenOpts(listener, envVars),
                                                                    pom.getParent() );
                                maven3MainClass = Maven31Main.class;
                                maven3LauncherClass = Maven31Launcher.class;
                        }

                        process = MavenBuild.mavenProcessCache.get( launcher.getChannel(), slistener, factory);


                        ArgumentListBuilder margs = new ArgumentListBuilder().add("-B").add("-f", pom.getRemote());
                        FilePath localRepo = project.getLocalRepository().locate(MavenModuleSetBuild.this);
                        if(localRepo!=null)
                            margs.add("-Dmaven.repo.local="+localRepo.getRemote());

                        FilePath remoteSettings = SettingsProvider.getSettingsFilePath(project.getSettings(), MavenModuleSetBuild.this, listener);
                        if (remoteSettings != null)
                            margs.add("-s" , remoteSettings.getRemote());

                        FilePath remoteGlobalSettings = GlobalSettingsProvider.getSettingsFilePath(project.getGlobalSettings(), MavenModuleSetBuild.this, listener);
                        if (remoteGlobalSettings != null)
                            margs.add("-gs" , remoteGlobalSettings.getRemote());
                        
                        // If incrementalBuild is set
                        // and the previous build didn't specify that we need a full build
                        // and we're on Maven 2.1 or later
                        // and there's at least one module listed in changedModules,
                        // then do the Maven incremental build commands.
                        // If there are no changed modules, we're building everything anyway.
                        boolean maven2_1orLater = new ComparableVersion (mavenVersion).compareTo( new ComparableVersion ("2.1") ) >= 0;
                        boolean needsFullBuild = getPreviousCompletedBuild() != null &&
                            getPreviousCompletedBuild().getAction(NeedsFullBuildAction.class) != null;
                        if (project.isIncrementalBuild()) {
                            if (!needsFullBuild && maven2_1orLater && !changedModules.isEmpty()) {
                                margs.add("-amd");
                                margs.add("-pl", Util.join(changedModules, ","));
                            } else {
                                if (LOGGER.isLoggable(Level.FINE)) {
                                    LOGGER.fine(String.format("Skipping incremental build: needsFullBuild=%s, maven2.1orLater=%s, changedModulesEmpty?=%s",
                                            needsFullBuild, maven2_1orLater, changedModules.isEmpty()));
                                }
                            }
                        }


                        
                        final List<MavenArgumentInterceptorAction> argInterceptors = this.getBuild().getActions(MavenArgumentInterceptorAction.class);
                        
						// find the correct maven goals and options, there might by an action overruling the defaults
                        String goals = project.getGoals(); // default
                        for (MavenArgumentInterceptorAction mavenArgInterceptor : argInterceptors) {
                        	final String goalsAndOptions = mavenArgInterceptor.getGoalsAndOptions((MavenModuleSetBuild)this.getBuild());
							if(StringUtils.isNotBlank(goalsAndOptions)){
                        		goals = goalsAndOptions;
                                // only one interceptor is allowed to overwrite the whole "goals and options" string
                        		break;
                        	}
						}
						margs.addTokenized(envVars.expand(goals));

						// enable the interceptors to change the whole command argument list
						// all available interceptors are allowed to modify the argument list
						for (MavenArgumentInterceptorAction mavenArgInterceptor : argInterceptors) {
							final ArgumentListBuilder newMargs = mavenArgInterceptor.intercept(margs, (MavenModuleSetBuild)this.getBuild());
							if (newMargs != null) {
								margs = newMargs;
							}
						}
                        
                        final AbstractMavenBuilder builder;
                        if (maven3orLater) {
                            Maven3Builder.Maven3BuilderRequest maven3BuilderRequest = new Maven3Builder.Maven3BuilderRequest();
                            maven3BuilderRequest.listener=slistener;
                            maven3BuilderRequest.proxies=proxies;
                            maven3BuilderRequest.modules=project.sortedActiveModules;
                            maven3BuilderRequest.goals=margs.toList();
                            maven3BuilderRequest.systemProps=envVars;
                            maven3BuilderRequest.mavenBuildInformation=mavenBuildInformation;
                            maven3BuilderRequest.maven3MainClass=maven3MainClass;
                            maven3BuilderRequest.maven3LauncherClass=maven3LauncherClass;
                            maven3BuilderRequest.supportEventSpy = MavenUtil.supportEventSpy( mavenVersion );
                            builder = new Maven3Builder(maven3BuilderRequest);
                        } else {
                            builder = 
                                new Maven2Builder(slistener, proxies, project.sortedActiveModules, margs.toList(), envVars, mavenBuildInformation);
                        }
                        
                        MavenProbeAction mpa=null;
                        try {
                            mpa = new MavenProbeAction(project,process.channel);
                            addAction(mpa);
                            r = process.call(builder);
                            for (ProxyImpl2 proxy : proxies.values()) {
                                proxy.performArchiving(launcher, listener);
                            }
                            return r;
                        } finally {
                            builder.end(launcher);
                            getActions().remove(mpa);
                            process.discard();
                        }                            
                        
                    } catch (InterruptedException e) {
                        r = Executor.currentExecutor().abortResult();
                        throw e;
                    } finally {
            			// only run post build steps if requested...
                        if (r==null || r.isBetterOrEqualTo(project.getRunPostStepsIfResult())) {
                            if(!build(listener,project.getPostbuilders().toList())){
                                r = FAILURE;
            				}
            			}
            			
                        if (r != null) {
                            setResult(r);
                        }

                        // tear down in reverse order
                        boolean failed=false;
                        for( int i=buildEnvironments.size()-1; i>=0; i-- ) {
                            if (!buildEnvironments.get(i).tearDown(MavenModuleSetBuild.this,listener)) {
                                failed=true;
                            }                    
                        }
                        // WARNING The return in the finally clause will trump any return before
                        if (failed) return Result.FAILURE;
                    }
                }
                
                
                return r;
            } catch (AbortException e) {
                if(e.getMessage()!=null)
                    listener.error(e.getMessage());
                return Result.FAILURE;
            } catch (InterruptedIOException e) {
                e.printStackTrace(listener.error("Aborted Maven execution for InterruptedIOException"));
                return Executor.currentExecutor().abortResult();
            } catch (IOException e) {
                e.printStackTrace(listener.error(Messages.MavenModuleSetBuild_FailedToParsePom()));
                return Result.FAILURE;
            } catch (RunnerAbortedException e) {
                return Result.FAILURE;
            } catch (RuntimeException e) {
                // bug in the code.
                e.printStackTrace(listener.error("Processing failed due to a bug in the code. Please report this to jenkinsci-users@googlegroups.com"));
                logger.println("project="+project);
                logger.println("project.getModules()="+project.getModules());
                logger.println("project.getRootModule()="+project.getRootModule());
                throw e;
            } finally {
            }
        }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918635/fstmerge_base_8491649283506392905
protected Result doRun(final BuildListener listener) throws Exception {
            
        	Result r = null;
        	PrintStream logger = listener.getLogger();

            try {
            	
                EnvVars envVars = getEnvironment(listener);
                MavenInstallation mvn = project.getMaven();
                if(mvn==null)
                    throw new AbortException(Messages.MavenModuleSetBuild_NoMavenConfigured());

                mvn = mvn.forEnvironment(envVars).forNode(Computer.currentComputer().getNode(), listener);
                
                MavenInformation mavenInformation = getModuleRoot().act( new MavenVersionCallable( mvn.getHome() ));
                
                String mavenVersion = mavenInformation.getVersion();
                
                MavenBuildInformation mavenBuildInformation = new MavenBuildInformation( mavenVersion );
                
                setMavenVersionUsed( mavenVersion );

                LOGGER.fine(getFullDisplayName()+" is building with mavenVersion " + mavenVersion + " from file " + mavenInformation.getVersionResourcePath());
                
                if(!project.isAggregatorStyleBuild()) {
                    parsePoms(listener, logger, envVars, mvn, mavenVersion);
                    // start module builds
                    logger.println("Triggering "+project.getRootModule().getModuleName());
                    project.getRootModule().scheduleBuild(new UpstreamCause((Run<?,?>)MavenModuleSetBuild.this));
                } else {
                    // do builds here
                    try {
                        List<BuildWrapper> wrappers = new ArrayList<BuildWrapper>();
                        for (BuildWrapper w : project.getBuildWrappersList())
                            wrappers.add(w);
                        ParametersAction parameters = getAction(ParametersAction.class);
                        if (parameters != null)
                            parameters.createBuildWrappers(MavenModuleSetBuild.this,wrappers);

                        for( BuildWrapper w : wrappers) {
                            Environment e = w.setUp(MavenModuleSetBuild.this, launcher, listener);
                            if(e==null){
                                setResult(r = Result.FAILURE);
                                return r;
                            }
                            buildEnvironments.add(e);
                            e.buildEnvVars(envVars); // #3502: too late for getEnvironment to do this
                        }
                        
                    	// run pre build steps
                    	if(!preBuild(listener,project.getPrebuilders())
                        || !preBuild(listener,project.getPostbuilders())
                        || !preBuild(listener,project.getPublishers())){
                    		setResult(r = FAILURE);
                            return r;
                    	}

                    	if(!build(listener,project.getPrebuilders().toList())){
                    		setResult(r = FAILURE);
                            return r;
            			}

                        parsePoms(listener, logger, envVars, mvn, mavenVersion); // #5428 : do pre-build *before* parsing pom
                        SplittableBuildListener slistener = new SplittableBuildListener(listener);
                        proxies = new HashMap<ModuleName, ProxyImpl2>();
                        List<ModuleName> changedModules = new ArrayList<ModuleName>();
                        
                        if (project.isIncrementalBuild() && !getChangeSet().isEmptySet()) {
                            changedModules.addAll(getUnbuildModulesSinceLastSuccessfulBuild());
                        }

                        for (MavenModule m : project.sortedActiveModules) {
                            MavenBuild mb = m.newBuild();
                            // JENKINS-8418
                            mb.setBuiltOnStr( getBuiltOnStr() );
                            // Check if incrementalBuild is selected and that there are changes -
                            // we act as if incrementalBuild is not set if there are no changes.
                            if (!MavenModuleSetBuild.this.getChangeSet().isEmptySet()
                                && project.isIncrementalBuild()) {
                                //If there are changes for this module, add it.
                                // Also add it if we've never seen this module before,
                                // or if the previous build of this module failed or was unstable.
                                if ((mb.getPreviousBuiltBuild() == null) ||
                                    (!getChangeSetFor(m).isEmpty()) 
                                    || (mb.getPreviousBuiltBuild().getResult().isWorseThan(Result.SUCCESS))) {
                                    changedModules.add(m.getModuleName());
                                }
                            }

                            mb.setWorkspace(getModuleRoot().child(m.getRelativePath()));
                            proxies.put(m.getModuleName(), mb.new ProxyImpl2(MavenModuleSetBuild.this,slistener));
                        }

                        // run the complete build here

                        // figure out the root POM location.
                        // choice of module root ('ws' in this method) is somewhat arbitrary
                        // when multiple CVS/SVN modules are checked out, so also check
                        // the path against the workspace root if that seems like what the user meant (see issue #1293)
                        String rootPOM = project.getRootPOM(envVars); // JENKINS-13822
                        FilePath pom = getModuleRoot().child(rootPOM);
                        FilePath parentLoc = getWorkspace().child(rootPOM);
                        if(!pom.exists() && parentLoc.exists())
                            pom = parentLoc;

                        
                        final ProcessCache.MavenProcess process;
                        
                        boolean maven3orLater = mavenBuildInformation.isMaven3OrLater(); 
                        if ( maven3orLater )
                        {
                            LOGGER.fine( "using maven 3 " + mavenVersion );
                            process =
                                MavenBuild.mavenProcessCache.get( launcher.getChannel(), slistener,
                                                                  new Maven3ProcessFactory( project, launcher, envVars, getMavenOpts(listener, envVars),
                                                                                            pom.getParent() ) );
                        }
                        else
                        {
                            LOGGER.fine( "using maven 2 " + mavenVersion );
                            process =
                                MavenBuild.mavenProcessCache.get( launcher.getChannel(), slistener,
                                                                  new MavenProcessFactory( project, launcher, envVars,getMavenOpts(listener, envVars),
                                                                                           pom.getParent() ) );
                        }
                        ArgumentListBuilder margs = new ArgumentListBuilder().add("-B").add("-f", pom.getRemote());
                        FilePath localRepo = project.getLocalRepository().locate(MavenModuleSetBuild.this);
                        if(localRepo!=null)
                            margs.add("-Dmaven.repo.local="+localRepo.getRemote());

                        FilePath remoteSettings = SettingsProvider.getSettingsFilePath(project.getSettings(), MavenModuleSetBuild.this, listener);
                        if (remoteSettings != null)
                            margs.add("-s" , remoteSettings.getRemote());

                        FilePath remoteGlobalSettings = GlobalSettingsProvider.getSettingsFilePath(project.getGlobalSettings(), MavenModuleSetBuild.this, listener);
                        if (remoteGlobalSettings != null)
                            margs.add("-gs" , remoteGlobalSettings.getRemote());
                        
                        // If incrementalBuild is set
                        // and the previous build didn't specify that we need a full build
                        // and we're on Maven 2.1 or later
                        // and there's at least one module listed in changedModules,
                        // then do the Maven incremental build commands.
                        // If there are no changed modules, we're building everything anyway.
                        boolean maven2_1orLater = new ComparableVersion (mavenVersion).compareTo( new ComparableVersion ("2.1") ) >= 0;
                        boolean needsFullBuild = getPreviousCompletedBuild() != null &&
                            getPreviousCompletedBuild().getAction(NeedsFullBuildAction.class) != null;
                        if (project.isIncrementalBuild()) {
                            if (!needsFullBuild && maven2_1orLater && !changedModules.isEmpty()) {
                                margs.add("-amd");
                                margs.add("-pl", Util.join(changedModules, ","));
                            } else {
                                if (LOGGER.isLoggable(Level.FINE)) {
                                    LOGGER.fine(String.format("Skipping incremental build: needsFullBuild=%s, maven2.1orLater=%s, changedModulesEmpty?=%s",
                                            needsFullBuild, maven2_1orLater, changedModules.isEmpty()));
                                }
                            }
                        }


                        
                        final List<MavenArgumentInterceptorAction> argInterceptors = this.getBuild().getActions(MavenArgumentInterceptorAction.class);
                        
						// find the correct maven goals and options, there might by an action overruling the defaults
                        String goals = project.getGoals(); // default
                        for (MavenArgumentInterceptorAction mavenArgInterceptor : argInterceptors) {
                        	final String goalsAndOptions = mavenArgInterceptor.getGoalsAndOptions((MavenModuleSetBuild)this.getBuild());
							if(StringUtils.isNotBlank(goalsAndOptions)){
                        		goals = goalsAndOptions;
                                // only one interceptor is allowed to overwrite the whole "goals and options" string
                        		break;
                        	}
						}
						margs.addTokenized(envVars.expand(goals));

						// enable the interceptors to change the whole command argument list
						// all available interceptors are allowed to modify the argument list
						for (MavenArgumentInterceptorAction mavenArgInterceptor : argInterceptors) {
							final ArgumentListBuilder newMargs = mavenArgInterceptor.intercept(margs, (MavenModuleSetBuild)this.getBuild());
							if (newMargs != null) {
								margs = newMargs;
							}
						}                        
                        
                        final AbstractMavenBuilder builder;
                        if (maven3orLater) {
                            builder =
                                new Maven3Builder( slistener, proxies, project.sortedActiveModules, margs.toList(), envVars, mavenBuildInformation );
                        } else {
                            builder = 
                                new Maven2Builder(slistener, proxies, project.sortedActiveModules, margs.toList(), envVars, mavenBuildInformation);
                        }
                        
                        MavenProbeAction mpa=null;
                        try {
                            mpa = new MavenProbeAction(project,process.channel);
                            addAction(mpa);
                            r = process.call(builder);
                            return r;
                        } finally {
                            builder.end(launcher);
                            getActions().remove(mpa);
                            process.discard();
                        }                            
                        
                    } catch (InterruptedException e) {
                        r = Executor.currentExecutor().abortResult();
                        throw e;
                    } finally {
            			// only run post build steps if requested...
                        if (r==null || r.isBetterOrEqualTo(project.getRunPostStepsIfResult())) {
                            if(!build(listener,project.getPostbuilders().toList())){
                                r = FAILURE;
            				}
            			}
            			
                        if (r != null) {
                            setResult(r);
                        }

                        // tear down in reverse order
                        boolean failed=false;
                        for( int i=buildEnvironments.size()-1; i>=0; i-- ) {
                            if (!buildEnvironments.get(i).tearDown(MavenModuleSetBuild.this,listener)) {
                                failed=true;
                            }                    
                        }
                        // WARNING The return in the finally clause will trump any return before
                        if (failed) return Result.FAILURE;
                    }
                }
                
                
                return r;
            } catch (AbortException e) {
                if(e.getMessage()!=null)
                    listener.error(e.getMessage());
                return Result.FAILURE;
            } catch (InterruptedIOException e) {
                e.printStackTrace(listener.error("Aborted Maven execution for InterruptedIOException"));
                return Executor.currentExecutor().abortResult();
            } catch (IOException e) {
                e.printStackTrace(listener.error(Messages.MavenModuleSetBuild_FailedToParsePom()));
                return Result.FAILURE;
            } catch (RunnerAbortedException e) {
                return Result.FAILURE;
            } catch (RuntimeException e) {
                // bug in the code.
                e.printStackTrace(listener.error("Processing failed due to a bug in the code. Please report this to jenkinsci-users@googlegroups.com"));
                logger.println("project="+project);
                logger.println("project.getModules()="+project.getModules());
                logger.println("project.getRootModule()="+project.getRootModule());
                throw e;
            } finally {
            }
        }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918635/fstmerge_var2_6020827788066531847

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/MavenModuleSetBuild.java
Conflict type: ImplementList
Conflict body: 
~~FSTMerge~~ implements FileCallable<PomParser.Result> ##FSTMerge## implements FileCallable<List<PomInfo>> ##FSTMerge##
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/MavenModuleSetBuild.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918674/fstmerge_var1_1999120393293562085
PomParser(BuildListener listener, MavenInstallation mavenHome, String mavenVersion, EnvVars envVars, MavenModuleSetBuild build) throws IOException, InterruptedException {
            // project cannot be shipped to the remote JVM, so all the relevant properties need to be captured now.
            MavenModuleSet project = build.getProject();
            this.listener = listener;
            this.mavenHome = mavenHome;
            this.rootPOM = project.getRootPOM(envVars); // JENKINS-13822
            this.profiles = project.getProfiles();
            this.properties = project.getMavenProperties();
            this.updateSnapshots = isUpdateSnapshots(project.getGoals());
            ParametersDefinitionProperty parametersDefinitionProperty = project.getProperty( ParametersDefinitionProperty.class );
            if (parametersDefinitionProperty != null && parametersDefinitionProperty.getParameterDefinitions() != null) {
                for (ParameterDefinition parameterDefinition : parametersDefinitionProperty.getParameterDefinitions()) {
                    // those must used as env var
                    if (parameterDefinition instanceof StringParameterDefinition) {
                        this.properties.put( "env." + parameterDefinition.getName(), ((StringParameterDefinition)parameterDefinition).getDefaultValue() );
                    }
                }
            }
            if (envVars != null && !envVars.isEmpty()) {
                for (Entry<String,String> entry : envVars.entrySet()) {
                    if (entry.getKey() != null && entry.getValue() != null) {
                        this.properties.put( "env." + entry.getKey(), entry.getValue() );
                    }
                }
            }
            
            this.nonRecursive = project.isNonRecursive();

            this.workspaceProper = build.getWorkspace().getRemote();
            LOGGER.fine("Workspace is " + workspaceProper);
            FilePath localRepo = project.getLocalRepository().locate(build);
            if (localRepo!=null) {
                this.privateRepository = localRepo.getRemote();
            } else {
                this.privateRepository = null;
            }
            
            this.alternateSettings = SettingsProvider.getSettingsRemotePath(project.getSettings(), build, listener);
            this.globalSettings = GlobalSettingsProvider.getSettingsRemotePath(project.getGlobalSettings(), build, listener);
            
            this.mavenVersion = mavenVersion;
            this.resolveDependencies = project.isResolveDependencies();
            this.processPlugins = project.isProcessPlugins();
            
            this.moduleRootPath = 
                project.getScm().getModuleRoot( build.getWorkspace(), project.getLastBuild() ).getRemote();
            
            this.mavenValidationLevel = project.getMavenValidationLevel();
            plexusContributors = PlexusModuleContributorFactory.aggregate(build);
        }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918674/fstmerge_base_5389426045454580979
public PomParser(BuildListener listener, MavenInstallation mavenHome, String mavenVersion, EnvVars envVars, MavenModuleSetBuild build) {
            // project cannot be shipped to the remote JVM, so all the relevant properties need to be captured now.
            MavenModuleSet project = build.getProject();
            this.listener = listener;
            this.mavenHome = mavenHome;
            this.rootPOM = project.getRootPOM(envVars); // JENKINS-13822
            this.profiles = project.getProfiles();
            this.properties = project.getMavenProperties();
            this.updateSnapshots = isUpdateSnapshots(project.getGoals());
            ParametersDefinitionProperty parametersDefinitionProperty = project.getProperty( ParametersDefinitionProperty.class );
            if (parametersDefinitionProperty != null && parametersDefinitionProperty.getParameterDefinitions() != null) {
                for (ParameterDefinition parameterDefinition : parametersDefinitionProperty.getParameterDefinitions()) {
                    // those must used as env var
                    if (parameterDefinition instanceof StringParameterDefinition) {
                        this.properties.put( "env." + parameterDefinition.getName(), ((StringParameterDefinition)parameterDefinition).getDefaultValue() );
                    }
                }
            }
            if (envVars != null && !envVars.isEmpty()) {
                for (Entry<String,String> entry : envVars.entrySet()) {
                    if (entry.getKey() != null && entry.getValue() != null) {
                        this.properties.put( "env." + entry.getKey(), entry.getValue() );
                    }
                }
            }
            
            this.nonRecursive = project.isNonRecursive();

            this.workspaceProper = build.getWorkspace().getRemote();
            LOGGER.fine("Workspace is " + workspaceProper);
            FilePath localRepo = project.getLocalRepository().locate(build);
            if (localRepo!=null) {
                this.privateRepository = localRepo.getRemote();
            } else {
                this.privateRepository = null;
            }
            
            this.alternateSettings = SettingsProvider.getSettingsRemotePath(project.getSettings(), build, listener);
            this.globalSettings = GlobalSettingsProvider.getSettingsRemotePath(project.getGlobalSettings(), build, listener);
            
            this.mavenVersion = mavenVersion;
            this.resolveDependencies = project.isResolveDependencies();
            this.processPlugins = project.isProcessPlugins();
            
            this.moduleRootPath = 
                project.getScm().getModuleRoot( build.getWorkspace(), project.getLastBuild() ).getRemote();
            
            this.mavenValidationLevel = project.getMavenValidationLevel();
        }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918674/fstmerge_var2_1412127583319446881

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/MavenModuleSetBuild.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918680/fstmerge_var1_4344656110279639035
public Result invoke(File ws, VirtualChannel channel) throws IOException {
            File pom;
            
            PrintStream logger = listener.getLogger();

            if (IOUtils.isAbsolute(rootPOM)) {
                pom = new File(rootPOM);
            } else {
                // choice of module root ('ws' in this method) is somewhat arbitrary
                // when multiple CVS/SVN modules are checked out, so also check
                // the path against the workspace root if that seems like what the user meant (see issue #1293)
                pom = new File(ws, rootPOM);
                File parentLoc = new File(ws.getParentFile(),rootPOM);
                if(!pom.exists() && parentLoc.exists())
                    pom = parentLoc;
            }

            if(!pom.exists())
                throw new AbortException(Messages.MavenModuleSetBuild_NoSuchPOMFile(pom));

            if (rootPOM.startsWith("../") || rootPOM.startsWith("..\\")) {
                File wsp = new File(workspaceProper);
                               
                if (!ws.equals(wsp)) {
                    rootPOMRelPrefix = ws.getCanonicalPath().substring(wsp.getCanonicalPath().length()+1)+"/";
                } else {
                    rootPOMRelPrefix = wsp.getName() + "/";
                }
            } else {
                rootPOMRelPrefix = "";
            }            
            
            if(verbose)
                logger.println("Parsing "
			       + (nonRecursive ? "non-recursively " : "recursively ")
			       + pom);
	    
            File settingsLoc;

            if (alternateSettings == null) {
                settingsLoc = null;
            } else if (IOUtils.isAbsolute(alternateSettings)) {
                settingsLoc = new File(alternateSettings);
            } else {
                // Check for settings.xml first in the workspace proper, and then in the current directory,
                // which is getModuleRoot().
                // This is backwards from the order the root POM logic uses, but it's to be consistent with the Maven execution logic.
                settingsLoc = new File(workspaceProper, alternateSettings);
                File mrSettingsLoc = new File(workspaceProper, alternateSettings);
                if (!settingsLoc.exists() && mrSettingsLoc.exists())
                    settingsLoc = mrSettingsLoc;
            }
            if (debug)
            {
                logger.println(Messages.MavenModuleSetBuild_SettinsgXmlAndPrivateRepository(settingsLoc,privateRepository));
            }
            if ((settingsLoc != null) && (!settingsLoc.exists())) {
                throw new AbortException(Messages.MavenModuleSetBuild_NoSuchAlternateSettings(settingsLoc.getAbsolutePath()));
            }

            try {
                MavenEmbedderRequest mer = new MavenEmbedderRequest( listener, mavenHome.getHomeDir(),
                                                                                      profiles, properties,
                                                                                      privateRepository, settingsLoc );
                mer.setTransferListener(new SimpleTransferListener(listener));
                mer.setUpdateSnapshots(this.updateSnapshots);
                
                mer.setProcessPlugins(this.processPlugins);
                mer.setResolveDependencies(this.resolveDependencies);
                if (globalSettings != null) {
                    mer.setGlobalSettings(new File(globalSettings));
                }
                
                // FIXME handle 3.1 level when version will be here : no rush :-)
                // or made something configurable tru the ui ?
                ReactorReader reactorReader = null;
                boolean maven3OrLater = MavenUtil.maven3orLater(mavenVersion);
                if (maven3OrLater) {
                    mer.setValidationLevel(VALIDATION_LEVEL_MAVEN_3_0);
                } else {
                    reactorReader = new ReactorReader( new HashMap<String, MavenProject>(), new File(workspaceProper) );
                    mer.setWorkspaceReader(reactorReader);
                }

                {// create a classloader that loads extensions
                    List<URL> urls = plexusContributors.getPlexusComponentJars();
                    if (!urls.isEmpty()) {
                        mer.setClassLoader(
                                new URLClassLoader(urls.toArray(new URL[urls.size()]),
                                        mer.getClassLoader()));
                    }
                }
                
                if (this.mavenValidationLevel >= 0) {
                    mer.setValidationLevel(this.mavenValidationLevel);
                }
                
                //mavenEmbedderRequest.setClassLoader( MavenEmbedderUtils.buildClassRealm( mavenHome.getHomeDir(), null, null ) );
                
                MavenEmbedder embedder = MavenUtil.createEmbedder( mer );
                
                MavenProject rootProject = null;
                
                List<MavenProject> mps = new ArrayList<MavenProject>(0);
                if (maven3OrLater) {
                    mps = embedder.readProjects( pom,!this.nonRecursive );

                } else {
                    // http://issues.jenkins-ci.org/browse/HUDSON-8390
                    // we cannot read maven projects in one time for backward compatibility
                    // but we have to use a ReactorReader to get some pom with bad inheritence configured
                    MavenProject mavenProject = embedder.readProject( pom );
                    rootProject = mavenProject;
                    mps.add( mavenProject );
                    reactorReader.addProject( mavenProject );
                    if (!this.nonRecursive) {
                        readChilds( mavenProject, embedder, mps, reactorReader );
                    }
                }
                Map<String,MavenProject> canonicalPaths = new HashMap<String, MavenProject>( mps.size() );
                Map<String,String> modelParents = new HashMap<String,String>();
                for(MavenProject mp : mps) {
                    // Projects are indexed by POM path and not module path because
                    // Maven allows to have several POMs with different names in the same directory
                    canonicalPaths.put( mp.getFile().getCanonicalPath(), mp );
                    while (true) {
                        String k = mp.getId();
                        if (modelParents.containsKey(k)) {
                            break;
                        }
                        MavenProject mpp = mp.getParent();
                        if (mpp == null) {
                            break;
                        }
                        modelParents.put(k, mpp.getId());
                        mp = mpp;
                    }
                }                
                //MavenUtil.resolveModules(embedder,mp,getRootPath(rootPOMRelPrefix),relPath,listener,nonRecursive);

                if(verbose) {
                    for (Entry<String,MavenProject> e : canonicalPaths.entrySet())
                        logger.printf("Discovered %s at %s\n",e.getValue().getId(),e.getKey());
                }

                Set<PomInfo> infos = new LinkedHashSet<PomInfo>();
                
                if (maven3OrLater) {
                    for (MavenProject mp : mps) {
                        if (mp.isExecutionRoot()) {
                            rootProject = mp;
                            continue;
                        }
                    }
                }
                // if rootProject is null but no reason :-) use the first one
                if (rootProject == null) {
                    rootProject = mps.get( 0 );
                }
                toPomInfo(rootProject,null,canonicalPaths,infos);

                for (PomInfo pi : infos)
                    pi.cutCycle();

                return new Result(new ArrayList<PomInfo>(infos), modelParents);
            } catch (MavenEmbedderException e) {
                throw new MavenExecutionException(e);
            } catch (ProjectBuildingException e) {
                throw new MavenExecutionException(e);
            }
        }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918680/fstmerge_base_4039956751705306537
public List<PomInfo> invoke(File ws, VirtualChannel channel) throws IOException {
            File pom;
            
            PrintStream logger = listener.getLogger();

            if (IOUtils.isAbsolute(rootPOM)) {
                pom = new File(rootPOM);
            } else {
                // choice of module root ('ws' in this method) is somewhat arbitrary
                // when multiple CVS/SVN modules are checked out, so also check
                // the path against the workspace root if that seems like what the user meant (see issue #1293)
                pom = new File(ws, rootPOM);
                File parentLoc = new File(ws.getParentFile(),rootPOM);
                if(!pom.exists() && parentLoc.exists())
                    pom = parentLoc;
            }

            if(!pom.exists())
                throw new AbortException(Messages.MavenModuleSetBuild_NoSuchPOMFile(pom));

            if (rootPOM.startsWith("../") || rootPOM.startsWith("..\\")) {
                File wsp = new File(workspaceProper);
                               
                if (!ws.equals(wsp)) {
                    rootPOMRelPrefix = ws.getCanonicalPath().substring(wsp.getCanonicalPath().length()+1)+"/";
                } else {
                    rootPOMRelPrefix = wsp.getName() + "/";
                }
            } else {
                rootPOMRelPrefix = "";
            }            
            
            if(verbose)
                logger.println("Parsing "
			       + (nonRecursive ? "non-recursively " : "recursively ")
			       + pom);
	    
            File settingsLoc;

            if (alternateSettings == null) {
                settingsLoc = null;
            } else if (IOUtils.isAbsolute(alternateSettings)) {
                settingsLoc = new File(alternateSettings);
            } else {
                // Check for settings.xml first in the workspace proper, and then in the current directory,
                // which is getModuleRoot().
                // This is backwards from the order the root POM logic uses, but it's to be consistent with the Maven execution logic.
                settingsLoc = new File(workspaceProper, alternateSettings);
                File mrSettingsLoc = new File(workspaceProper, alternateSettings);
                if (!settingsLoc.exists() && mrSettingsLoc.exists())
                    settingsLoc = mrSettingsLoc;
            }
            if (debug)
            {
                logger.println(Messages.MavenModuleSetBuild_SettinsgXmlAndPrivateRepository(settingsLoc,privateRepository));
            }
            if ((settingsLoc != null) && (!settingsLoc.exists())) {
                throw new AbortException(Messages.MavenModuleSetBuild_NoSuchAlternateSettings(settingsLoc.getAbsolutePath()));
            }

            try {
                MavenEmbedderRequest mavenEmbedderRequest = new MavenEmbedderRequest( listener, mavenHome.getHomeDir(),
                                                                                      profiles, properties,
                                                                                      privateRepository, settingsLoc );
                mavenEmbedderRequest.setTransferListener( new SimpleTransferListener(listener) );
                mavenEmbedderRequest.setUpdateSnapshots( this.updateSnapshots );
                
                mavenEmbedderRequest.setProcessPlugins( this.processPlugins );
                mavenEmbedderRequest.setResolveDependencies( this.resolveDependencies );
                if (globalSettings != null) {
                    mavenEmbedderRequest.setGlobalSettings( new File(globalSettings) );
                }
                
                // FIXME handle 3.1 level when version will be here : no rush :-)
                // or made something configurable tru the ui ?
                ReactorReader reactorReader = null;
                boolean maven3OrLater = MavenUtil.maven3orLater(mavenVersion);
                if (maven3OrLater) {
                    mavenEmbedderRequest.setValidationLevel( ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_3_0 );
                } else {
                    reactorReader = new ReactorReader( new HashMap<String, MavenProject>(), new File(workspaceProper) );
                    mavenEmbedderRequest.setWorkspaceReader( reactorReader );
                }
                
                
                if (this.mavenValidationLevel >= 0) {
                    mavenEmbedderRequest.setValidationLevel( this.mavenValidationLevel );
                }
                
                //mavenEmbedderRequest.setClassLoader( MavenEmbedderUtils.buildClassRealm( mavenHome.getHomeDir(), null, null ) );
                
                MavenEmbedder embedder = MavenUtil.createEmbedder( mavenEmbedderRequest );
                
                MavenProject rootProject = null;
                
                List<MavenProject> mps = new ArrayList<MavenProject>(0);
                if (maven3OrLater) {
                    mps = embedder.readProjects( pom,!this.nonRecursive );

                } else {
                    // http://issues.jenkins-ci.org/browse/HUDSON-8390
                    // we cannot read maven projects in one time for backward compatibility
                    // but we have to use a ReactorReader to get some pom with bad inheritence configured
                    MavenProject mavenProject = embedder.readProject( pom );
                    rootProject = mavenProject;
                    mps.add( mavenProject );
                    reactorReader.addProject( mavenProject );
                    if (!this.nonRecursive) {
                        readChilds( mavenProject, embedder, mps, reactorReader );
                    }
                }
                Map<String,MavenProject> canonicalPaths = new HashMap<String, MavenProject>( mps.size() );
                for(MavenProject mp : mps) {
                    // Projects are indexed by POM path and not module path because
                    // Maven allows to have several POMs with different names in the same directory
                    canonicalPaths.put( mp.getFile().getCanonicalPath(), mp );
                }                
                //MavenUtil.resolveModules(embedder,mp,getRootPath(rootPOMRelPrefix),relPath,listener,nonRecursive);

                if(verbose) {
                    for (Entry<String,MavenProject> e : canonicalPaths.entrySet())
                        logger.printf("Discovered %s at %s\n",e.getValue().getId(),e.getKey());
                }

                Set<PomInfo> infos = new LinkedHashSet<PomInfo>();
                
                if (maven3OrLater) {
                    for (MavenProject mp : mps) {
                        if (mp.isExecutionRoot()) {
                            rootProject = mp;
                            continue;
                        }
                    }
                }
                // if rootProject is null but no reason :-) use the first one
                if (rootProject == null) {
                    rootProject = mps.get( 0 );
                }
                toPomInfo(rootProject,null,canonicalPaths,infos);

                for (PomInfo pi : infos)
                    pi.cutCycle();

                return new ArrayList<PomInfo>(infos);
            } catch (MavenEmbedderException e) {
                throw new MavenExecutionException(e);
            } catch (ProjectBuildingException e) {
                throw new MavenExecutionException(e);
            }
        }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918680/fstmerge_var2_8079613298007672661

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/MavenModuleSetBuild.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918891/fstmerge_var1_7604565676431996283
@Override
    protected void submit(StaplerRequest req, StaplerResponse rsp) throws IOException, ServletException, FormException {
        super.submit(req, rsp);

        reporters.rebuild(req, req.getSubmittedForm(),MavenReporters.getConfigurableList());

        goals = Util.fixEmpty(req.getParameter("goals").trim());

        // dependency setting might have been changed by the user, so rebuild.
        Jenkins.getInstance().rebuildDependencyGraphAsync();
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918891/fstmerge_base_2027624558165825246
@Override
    protected void submit(StaplerRequest req, StaplerResponse rsp) throws IOException, ServletException, FormException {
        super.submit(req, rsp);

        reporters.rebuild(req, req.getSubmittedForm(),MavenReporters.getConfigurableList());

        goals = Util.fixEmpty(req.getParameter("goals").trim());

        // dependency setting might have been changed by the user, so rebuild.
        Jenkins.getInstance().rebuildDependencyGraph();
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918891/fstmerge_var2_3430746827192381056

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/MavenModule.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918918/fstmerge_var1_6833796098350945161
public boolean perform(AbstractBuild<?,?> build, Launcher launcher,
			BuildListener listener) throws InterruptedException, IOException {

	    MavenModuleSetBuild msb = (MavenModuleSetBuild) build;
        
        Map<MavenModule, MavenBuild> moduleLastBuilds = msb.getModuleLastBuilds();
        
        for (MavenBuild moduleBuild : moduleLastBuilds.values()) {
        
            SurefireReport report = moduleBuild.getAction(SurefireReport.class);
            if (report == null) {
                continue;
            }
            
            List<Data> data = new ArrayList<Data>();
            if (getTestDataPublishers() != null) {
                for (TestDataPublisher tdp : getTestDataPublishers()) {
                    Data d = tdp.getTestData(build, launcher, listener, report.getResult());
                    if (d != null) {
                        data.add(d);
                    }
                }
            }
            
            if (!data.isEmpty()) {
                report.setData(data);
                moduleBuild.save();
            }
        }

		return true;
	}
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918918/fstmerge_base_6622861568505690608
public boolean perform(AbstractBuild<?,?> build, Launcher launcher,
			BuildListener listener) throws InterruptedException, IOException {

		SurefireReport report = build.getAction(SurefireReport.class);
		if (report == null) {
			return true;
		}
		
		List<Data> data = new ArrayList<Data>();
		if (testDataPublishers != null) {
			for (TestDataPublisher tdp : testDataPublishers) {
				Data d = tdp.getTestData(build, launcher, listener, report.getResult());
				if (d != null) {
					data.add(d);
				}
			}
		}
		
		report.setData(data);

		return true;
	}
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479918918/fstmerge_var2_5726355924585945279

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/MavenTestDataPublisher.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919089/fstmerge_var1_9100324503560665433
public Result call() throws IOException {

        try {
            initializeAsynchronousExecutions();

            MavenExecutionListener mavenExecutionListener = supportEventSpy ? new JenkinsEventSpy(this) : new MavenExecutionListener( this );
            if (supportEventSpy)
            {
                Method setEventSpiesMethod = maven3LauncherClass.getMethod( "setEventSpies", List.class );
                setEventSpiesMethod.invoke( null, Collections.singletonList(mavenExecutionListener) );

            } else {
                Method setMavenExecutionListenerMethod = maven3LauncherClass.getMethod( "setMavenExecutionListener", ExecutionListener.class );

                setMavenExecutionListenerMethod.invoke( null, mavenExecutionListener );
            }
            markAsSuccess = false;

            registerSystemProperties();

            PrintStream logger = listener.getLogger();
            logger.println(formatArgs(goals));

            Method launchMethod = maven3MainClass.getMethod( "launch", String[].class );

            Integer res = (Integer) launchMethod.invoke(null, new Object[] {goals.toArray(new String[goals.size()])} );

            //int r = Maven3Main.launch( goals.toArray(new String[goals.size()]));

            int r = res.intValue();

            // now check the completion status of async ops
            long startTime = System.nanoTime();
            
            Result waitForAsyncExecutionsResult = waitForAsynchronousExecutions();
            if (waitForAsyncExecutionsResult != null) {
                return waitForAsyncExecutionsResult;
            }
            
            mavenExecutionListener.overheadTime += System.nanoTime()-startTime;

            if(profile) {
                NumberFormat n = NumberFormat.getInstance();
                logger.println("Total overhead was "+format(n,mavenExecutionListener.overheadTime)+"ms");
                Channel ch = Channel.current();
                logger.println("Class loading "   +format(n,ch.classLoadingTime.get())   +"ms, "+ch.classLoadingCount+" classes");
                logger.println("Resource loading "+format(n,ch.resourceLoadingTime.get())+"ms, "+ch.resourceLoadingCount+" times");                
            }

            Method mavenExecutionResultGetMethod = maven3LauncherClass.getMethod( "getMavenExecutionResult", null );

            mavenExecutionResult = (HudsonMavenExecutionResult) mavenExecutionResultGetMethod.invoke( null, null );

            //mavenExecutionResult = Maven3Launcher.getMavenExecutionResult();
            
            if(r==0 && mavenExecutionResult.getThrowables().isEmpty()) {
                if(mavenExecutionListener.hasTestFailures()){
                    return Result.UNSTABLE;    
                }
                return Result.SUCCESS;
            }

			// manage of Maven error are moved to ExecutionEventLogger, they are
			// threaded as in MavenCli

            if(markAsSuccess) {
                logger.println(Messages.MavenBuilder_Failed());
                if(mavenExecutionListener.hasTestFailures()){
                    return Result.UNSTABLE;    
                }
                return Result.SUCCESS;
            }
            return Result.FAILURE;
        } catch (NoSuchMethodException e) {
            throw new IOException2(e);
        } catch (IllegalAccessException e) {
            throw new IOException2(e);
        } catch (InvocationTargetException e) {
            throw new IOException2(e);
        //} catch (ClassNotFoundException e) {
        //    throw new IOException2(e);
        } catch (Exception e) {
            throw new IOException2(e);
        } finally {
            if (DUMP_PERFORMANCE_COUNTERS)
                Channel.current().dumpPerformanceCounters(listener.error("Remoting stats"));
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919089/fstmerge_base_6392345558500672169
public Result call() throws IOException {

        try {
            initializeAsynchronousExecutions();
        
            MavenExecutionListener mavenExecutionListener = new MavenExecutionListener( this );
            Maven3Launcher.setMavenExecutionListener( mavenExecutionListener );
            
            markAsSuccess = false;

            registerSystemProperties();

            listener.getLogger().println(formatArgs(goals));
            
            
            int r = Maven3Main.launch( goals.toArray(new String[goals.size()]));

            // now check the completion status of async ops
            long startTime = System.nanoTime();
            
            Result waitForAsyncExecutionsResult = waitForAsynchronousExecutions();
            if (waitForAsyncExecutionsResult != null) {
                return waitForAsyncExecutionsResult;
            }
            
            mavenExecutionListener.overheadTime += System.nanoTime()-startTime;

            if(profile) {
                NumberFormat n = NumberFormat.getInstance();
                PrintStream logger = listener.getLogger();
                logger.println("Total overhead was "+format(n,mavenExecutionListener.overheadTime)+"ms");
                Channel ch = Channel.current();
                logger.println("Class loading "   +format(n,ch.classLoadingTime.get())   +"ms, "+ch.classLoadingCount+" classes");
                logger.println("Resource loading "+format(n,ch.resourceLoadingTime.get())+"ms, "+ch.resourceLoadingCount+" times");                
            }

            mavenExecutionResult = Maven3Launcher.getMavenExecutionResult();
            
            PrintStream logger = listener.getLogger();
            
            if(r==0 && mavenExecutionResult.getThrowables().isEmpty()) {
                if(mavenExecutionListener.hasTestFailures()){
                    return Result.UNSTABLE;    
                }
                return Result.SUCCESS;
            }
            
            if (!mavenExecutionResult.getThrowables().isEmpty()) {
                logger.println( "mavenExecutionResult exceptions not empty");
                for(Throwable throwable : mavenExecutionResult.getThrowables()) {
                    logger.println("message : " + throwable.getMessage());
                    if (throwable.getCause()!=null) {
                        logger.println("cause : " + throwable.getCause().getMessage());
                    }
                    logger.println("Stack trace : ");
                    throwable.printStackTrace( logger );
                }
                
            }

            if(markAsSuccess) {
                listener.getLogger().println(Messages.MavenBuilder_Failed());
                if(mavenExecutionListener.hasTestFailures()){
                    return Result.UNSTABLE;    
                }
                return Result.SUCCESS;
            }
            return Result.FAILURE;
        } catch (NoSuchMethodException e) {
            throw new IOException2(e);
        } catch (IllegalAccessException e) {
            throw new IOException2(e);
        } catch (InvocationTargetException e) {
            throw new IOException2(e);
        } catch (ClassNotFoundException e) {
            throw new IOException2(e);
        } catch (Exception e) {
            throw new IOException2(e);
        }
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919089/fstmerge_var2_3477298395843069575

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/Maven3Builder.java
Conflict type: ModifierList
Conflict body: 
~~FSTMerge~~ private static ##FSTMerge## private static final ##FSTMerge##
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/Maven3Builder.java
Conflict type: LineBasedMCFd
Conflict body: 
~~FSTMerge~~ protected ExecutionEventLogger eventLogger; ##FSTMerge## private ExecutionEventLogger eventLogger; ##FSTMerge##
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/Maven3Builder.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919095/fstmerge_var1_8263545683666755537
public MavenExecutionListener(AbstractMavenBuilder maven3Builder) {
            this.maven3Builder = maven3Builder;
            this.proxies = new ConcurrentHashMap<ModuleName, FilterImpl>(maven3Builder.proxies);
            for (ModuleName name : this.proxies.keySet()) {
                executedMojosPerModule.put( name, new CopyOnWriteArrayList<ExecutedMojo>() );
            }
            this.reporters = new ConcurrentHashMap<ModuleName, List<MavenReporter>>(maven3Builder.reporters);
            

            // E.g. there's also the option to redirect logging to a file which is handled there, but not here.
            this.eventLogger = new ExecutionEventLogger( logger );
        }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919095/fstmerge_base_7593884032769879829
public MavenExecutionListener(AbstractMavenBuilder maven3Builder) {
            this.maven3Builder = maven3Builder;
            this.proxies = new ConcurrentHashMap<ModuleName, FilterImpl>(maven3Builder.proxies);
            for (ModuleName name : this.proxies.keySet()) {
                executedMojosPerModule.put( name, new CopyOnWriteArrayList<ExecutedMojo>() );
            }
            this.reporters = new ConcurrentHashMap<ModuleName, List<MavenReporter>>(maven3Builder.reporters);
            
            // TODO: we should think about reusing the code in org.apache.maven.cli.DefaultMavenExecutionRequestBuilder#logging?
            // E.g. there's also the option to redirect logging to a file which is handled there, but not here.
            PrintStreamLogger logger = new PrintStreamLogger( maven3Builder.listener.getLogger() );
            if (maven3Builder.isDebug()) {
                logger.setThreshold(PrintStreamLogger.LEVEL_DEBUG);
            } else if (maven3Builder.isQuiet()) {
                logger.setThreshold(PrintStreamLogger.LEVEL_ERROR);
            }
            
            this.eventLogger = new ExecutionEventLogger( logger );
        }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919095/fstmerge_var2_8521571441645909816

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/Maven3Builder.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919186/fstmerge_var1_8437460256357021617
public void mojoStarted( ExecutionEvent event ) {
            debug( "mojoStarted " + mojoExec( event ) );
            recordMojoStarted(event);
            this.eventLogger.mojoStarted( event );
        }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919186/fstmerge_base_7982492739471173080
public void mojoStarted( ExecutionEvent event ) {
            debug("mojoStarted " + mojoExec(event));
            recordMojoStarted(event);
            this.eventLogger.mojoStarted( event );
        }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919186/fstmerge_var2_301475417456124028

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/Maven3Builder.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919274/fstmerge_var1_8569233394653732323
@Deprecated
    FilePath getArtifactsDir();
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919274/fstmerge_base_6867801043959722112
FilePath getArtifactsDir();
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919274/fstmerge_var2_4667097660795544367

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/MavenBuildProxy.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919594/fstmerge_var1_7447370628279220965
@Deprecated
        public FilePath getArtifactsDir() {
            return new FilePath(MavenBuild.this.getArtifactsDir());
        }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919594/fstmerge_base_2566993321001794166
public FilePath getArtifactsDir() {
            return new FilePath(MavenBuild.this.getArtifactsDir());
        }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919594/fstmerge_var2_4522777492959786401

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/MavenBuild.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919642/fstmerge_var1_5026613412447146544
public void start() {
            onStartBuilding();
            startTime = System.currentTimeMillis();
            try {
                sync();
                listener.setSideOutputStream(log);
            } catch (IOException e) {
                e.printStackTrace();
            }
            RunListener.fireStarted(MavenBuild.this, listener);
        }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919642/fstmerge_base_1371827653325074237
public void start() {
            onStartBuilding();
            startTime = System.currentTimeMillis();
            try {
                sync();
                listener.setSideOutputStream(log);
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919642/fstmerge_var2_7338872028105626453

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/MavenBuild.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919646/fstmerge_var1_6662869134922460245
public void end() {
            if(result==null)
                setResult(Result.SUCCESS);
            onEndBuilding();
            duration += System.currentTimeMillis()- startTime;
            parentBuild.notifyModuleBuild(MavenBuild.this);
            try {
                sync();
                listener.setSideOutputStream(null);
                save();
            } catch (IOException e) {
                e.printStackTrace();
            }
            try {
                updateSymlinks(listener);
            } catch (InterruptedException x) {
                Logger.getLogger(MavenBuild.class.getName()).log(Level.WARNING, null, x);
            }
            RunListener.fireCompleted(MavenBuild.this, listener);
        }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919646/fstmerge_base_8538966803992896940
public void end() {
            if(result==null)
                setResult(Result.SUCCESS);
            onEndBuilding();
            duration += System.currentTimeMillis()- startTime;
            parentBuild.notifyModuleBuild(MavenBuild.this);
            try {
                sync();
                listener.setSideOutputStream(null);
                save();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919646/fstmerge_var2_4790047539266023916

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/MavenBuild.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919687/fstmerge_var1_6927258449624951611
protected Result doRun(BuildListener listener) throws Exception {
            // pick up a list of reporters to run
            reporters = getProject().createReporters();
            MavenModuleSet mms = getProject().getParent();
            if(debug)
                listener.getLogger().println("Reporters="+reporters);

            for (BuildWrapper w : mms.getBuildWrappersList()) {
                Environment e = w.setUp(MavenBuild.this, launcher, listener);
                if (e == null) {
                    return Result.FAILURE;
                }
                buildEnvironments.add(e);
            }

            EnvVars envVars = getEnvironment(listener); // buildEnvironments should be set up first
            
            MavenInstallation mvn = getProject().getParent().getMaven();
            
            mvn = mvn.forEnvironment(envVars).forNode(Computer.currentComputer().getNode(), listener);
            
            MavenInformation mavenInformation = getModuleRoot().act( new MavenVersionCallable( mvn.getHome() ));
            
            String mavenVersion = mavenInformation.getVersion();

            LOGGER.fine(getFullDisplayName()+" is building with mavenVersion " + mavenVersion + " from file " + mavenInformation.getVersionResourcePath());
            

            MavenUtil.MavenVersion mavenVersionType = MavenUtil.getMavenVersion( mavenVersion );

            final ProcessCache.Factory factory;

            switch ( mavenVersionType ){
                case MAVEN_2:
                    LOGGER.fine( "using maven 2 " + mavenVersion );
                    factory = new MavenProcessFactory( getParent().getParent(), MavenBuild.this, launcher, envVars, getMavenOpts(listener, envVars), null );
                    break;
                case MAVEN_3_0_X:
                    LOGGER.fine( "using maven 3 " + mavenVersion );
                    factory = new Maven3ProcessFactory( getParent().getParent(), MavenBuild.this, launcher, envVars, getMavenOpts(listener, envVars), null );
                    break;
                default:
                    LOGGER.fine( "using maven 3 " + mavenVersion );
                    factory = new Maven31ProcessFactory( getParent().getParent(), MavenBuild.this, launcher, envVars, getMavenOpts(listener, envVars), null );

            }

            ProcessCache.MavenProcess process = MavenBuild.mavenProcessCache.get( launcher.getChannel(), listener, factory);

            ArgumentListBuilder margs = new ArgumentListBuilder("-N","-B");
            FilePath localRepo = mms.getLocalRepository().locate(MavenBuild.this);
            if(localRepo!=null)
                // the workspace must be on this node, so getRemote() is safe.
                margs.add("-Dmaven.repo.local="+localRepo.getRemote());
            
            String settingsPath = SettingsProvider.getSettingsRemotePath(mms.getSettings(), MavenBuild.this, listener);
            if (settingsPath != null) {
                margs.add("-s").add(settingsPath);
            }

            margs.add("-f",getModuleRoot().child("pom.xml").getRemote());
            margs.addTokenized(getProject().getGoals());

            Map<String,String> systemProps = new HashMap<String, String>(envVars);
            // backward compatibility
            systemProps.put("hudson.build.number",String.valueOf(getNumber()));

            if (mavenVersionType == MavenUtil.MavenVersion.MAVEN_3_0_X || mavenVersionType == MavenUtil.MavenVersion.MAVEN_3_1)
            { 
                // FIXME here for maven 3 builds
                listener.getLogger().println("Building single Maven modules is not implemented for Maven 3, yet!");
                return Result.ABORTED;
            }
            else
            {
                boolean normalExit = false;
                try {
                    ProxyImpl proxy = new ProxyImpl();
                    Result r = process.call(new Builder(
                        listener, proxy,
                        getProject(), margs.toList(), systemProps));
                    proxy.performArchiving(launcher, listener);
                    normalExit = true;
                    return r;
                } finally {
                    if(normalExit)  process.recycle();
                    else            process.discard();
    
                    // tear down in reverse order
                    boolean failed=false;
                    for( int i=buildEnvironments.size()-1; i>=0; i-- ) {
                        if (!buildEnvironments.get(i).tearDown(MavenBuild.this,listener)) {
                            failed=true;
                        }                    
                    }
                    // WARNING The return in the finally clause will trump any return before
                    if (failed) return Result.FAILURE;
                }
            }
        }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919687/fstmerge_base_2813525830196624059
protected Result doRun(BuildListener listener) throws Exception {
            // pick up a list of reporters to run
            reporters = getProject().createReporters();
            MavenModuleSet mms = getProject().getParent();
            if(debug)
                listener.getLogger().println("Reporters="+reporters);

            for (BuildWrapper w : mms.getBuildWrappersList()) {
                Environment e = w.setUp(MavenBuild.this, launcher, listener);
                if (e == null) {
                    return Result.FAILURE;
                }
                buildEnvironments.add(e);
            }

            EnvVars envVars = getEnvironment(listener); // buildEnvironments should be set up first
            
            MavenInstallation mvn = getProject().getParent().getMaven();
            
            mvn = mvn.forEnvironment(envVars).forNode(Computer.currentComputer().getNode(), listener);
            
            MavenInformation mavenInformation = getModuleRoot().act( new MavenVersionCallable( mvn.getHome() ));
            
            String mavenVersion = mavenInformation.getVersion();

            LOGGER.fine(getFullDisplayName()+" is building with mavenVersion " + mavenVersion + " from file " + mavenInformation.getVersionResourcePath());
            

            boolean maven3orLater = MavenUtil.maven3orLater(mavenVersion);

            ProcessCache.MavenProcess process = MavenBuild.mavenProcessCache.get( launcher.getChannel(), listener, maven3orLater
                ? new Maven3ProcessFactory(
                        getParent().getParent(), launcher, envVars, getMavenOpts(listener, envVars), null )
                : new MavenProcessFactory(
                        getParent().getParent(), launcher, envVars, getMavenOpts(listener, envVars), null ));

            ArgumentListBuilder margs = new ArgumentListBuilder("-N","-B");
            FilePath localRepo = mms.getLocalRepository().locate(MavenBuild.this);
            if(localRepo!=null)
                // the workspace must be on this node, so getRemote() is safe.
                margs.add("-Dmaven.repo.local="+localRepo.getRemote());
            
            String settingsPath = SettingsProvider.getSettingsRemotePath(mms.getSettings(), MavenBuild.this, listener);
            if (settingsPath != null) {
                margs.add("-s").add(settingsPath);
            }

            margs.add("-f",getModuleRoot().child("pom.xml").getRemote());
            margs.addTokenized(getProject().getGoals());

            Map<String,String> systemProps = new HashMap<String, String>(envVars);
            // backward compatibility
            systemProps.put("hudson.build.number",String.valueOf(getNumber()));

            if (maven3orLater)
            { 
                // FIXME here for maven 3 builds
                listener.getLogger().println("Building single Maven modules is not implemented for Maven 3, yet!");
                return Result.ABORTED;
            }
            else
            {
                boolean normalExit = false;
                try {
                    Result r = process.call(new Builder(
                        listener,new ProxyImpl(),
                        getProject(), margs.toList(), systemProps));
                    normalExit = true;
                    return r;
                } finally {
                    if(normalExit)  process.recycle();
                    else            process.discard();
    
                    // tear down in reverse order
                    boolean failed=false;
                    for( int i=buildEnvironments.size()-1; i>=0; i-- ) {
                        if (!buildEnvironments.get(i).tearDown(MavenBuild.this,listener)) {
                            failed=true;
                        }                    
                    }
                    // WARNING The return in the finally clause will trump any return before
                    if (failed) return Result.FAILURE;
                }
            }
        }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919687/fstmerge_var2_7454455371739277238

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/MavenBuild.java
Conflict type: LineBasedMCFd
Conflict body: 
~~FSTMerge~~ public final @Nonnull ModuleName name; ##FSTMerge## public final ModuleName name; ##FSTMerge##
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/PomInfo.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919742/fstmerge_var1_6570996333238140574
public ExecutedMojo(MojoInfo mojo, long duration) {
        this.groupId = mojo.pluginName.groupId;
        this.artifactId = mojo.pluginName.artifactId;
        this.version = mojo.pluginName.version;
        this.goal = mojo.getGoal();
        this.executionId = mojo.mojoExecution.getExecutionId();
        this.duration = duration;

        String digest = null;
        MojoDescriptor md = mojo.mojoExecution.getMojoDescriptor();
        PluginDescriptor pd = md.getPluginDescriptor();
        try {
            Class<?> clazz = getMojoClass( md, pd );
            if (clazz!=null) {
                File jarFile = Which.jarFile(clazz);
                if (jarFile.isFile()) {
                    digest = Util.getDigestOf(jarFile);
                } else {
                    // Maybe mojo was loaded from a classes dir instead of from a jar (JENKINS-5044)
                    LOGGER.log(Level.WARNING, "Cannot calculate digest of mojo class, because mojo wasn't loaded from a jar, but from: "
                            + jarFile);
                }
            } else {
                LOGGER.log(Level.WARNING, "Failed to getClass for "+md.getImplementation());    
            }
            
        } catch (IllegalArgumentException e) {
            LOGGER.log(Level.WARNING, "Failed to locate jar for "+md.getImplementation(),e);
        } catch (ClassNotFoundException e) {
            // perhaps the plugin has failed to load.
        } catch (IOException e) {
            LOGGER.log(Level.WARNING, "Failed to calculate digest for "+md.getImplementation(),e);
        }
        this.digest = digest;
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919742/fstmerge_base_8656972962573307468
public ExecutedMojo(MojoInfo mojo, long duration) {
        this.groupId = mojo.pluginName.groupId;
        this.artifactId = mojo.pluginName.artifactId;
        this.version = mojo.pluginName.version;
        this.goal = mojo.getGoal();
        this.executionId = mojo.mojoExecution.getExecutionId();
        this.duration = duration;

        String digest = null;
        MojoDescriptor md = mojo.mojoExecution.getMojoDescriptor();
        PluginDescriptor pd = md.getPluginDescriptor();
        try {
            Class<?> clazz = getMojoClass( md, pd );
            if (clazz!=null) {
                File jarFile = Which.jarFile(clazz);
                if (jarFile.isFile()) {
                    digest = Util.getDigestOf(new FileInputStream(jarFile));
                } else {
                    // Maybe mojo was loaded from a classes dir instead of from a jar (JENKINS-5044)
                    LOGGER.log(Level.WARNING, "Cannot calculate digest of mojo class, because mojo wasn't loaded from a jar, but from: "
                            + jarFile);
                }
            } else {
                LOGGER.log(Level.WARNING, "Failed to getClass for "+md.getImplementation());    
            }
            
        } catch (IllegalArgumentException e) {
            LOGGER.log(Level.WARNING, "Failed to locate jar for "+md.getImplementation(),e);
        } catch (ClassNotFoundException e) {
            // perhaps the plugin has failed to load.
        } catch (IOException e) {
            LOGGER.log(Level.WARNING, "Failed to calculate digest for "+md.getImplementation(),e);
        }
        this.digest = digest;
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919742/fstmerge_var2_5500081719632944562

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/ExecutedMojo.java
Conflict type: LineBasedMCFd
Conflict body: 
~~FSTMerge~~ private SettingsProvider settings; ##FSTMerge## private SettingsProvider settings = new DefaultSettingsProvider(); ##FSTMerge##
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/MavenModuleSet.java
Conflict type: LineBasedMCFd
Conflict body: 
~~FSTMerge~~ private GlobalSettingsProvider globalSettings; ##FSTMerge## private GlobalSettingsProvider globalSettings = new DefaultGlobalSettingsProvider(); ##FSTMerge##
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/MavenModuleSet.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919831/fstmerge_var1_1091961366485123207
public MavenModule getItem(String name) {
        try {
            return modules.get(ModuleName.fromString(name));
        } catch (IllegalArgumentException x) {
            return null; // not a Maven module name, ignore
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919831/fstmerge_base_5959685470194273181
public MavenModule getItem(String name) {
        return modules.get(ModuleName.fromString(name));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919831/fstmerge_var2_4172174441323000507

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/MavenModuleSet.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919960/fstmerge_var1_237546765582047964
public SettingsProvider getSettings() {
        return settings != null ? settings : GlobalMavenConfig.get().getSettingsProvider();
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919960/fstmerge_base_6111518546443468882
public SettingsProvider getSettings() {
        return settings != null ? settings : new DefaultSettingsProvider();
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919960/fstmerge_var2_3881266131973767392

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/MavenModuleSet.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919964/fstmerge_var1_7483804897985022987
public GlobalSettingsProvider getGlobalSettings() {
        return globalSettings != null ? globalSettings : GlobalMavenConfig.get().getGlobalSettingsProvider();
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919964/fstmerge_base_4282962543774753610
public GlobalSettingsProvider getGlobalSettings() {
        return globalSettings != null ? globalSettings : new DefaultGlobalSettingsProvider();
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479919964/fstmerge_var2_1018781255316367500

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/MavenModuleSet.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479920119/fstmerge_var1_3267562592727833927
public String getMavenOpts() {
        if ((mavenOpts!=null) && (mavenOpts.trim().length()>0)) { 
            return mavenOpts.replaceAll("[\t\r\n]+"," ");
        }
        else {
            String globalOpts = getDescriptor().getGlobalMavenOpts();
            if (globalOpts!=null) {
                return globalOpts.replaceAll("[\t\r\n]+"," ");
            }
            else {
                return globalOpts;
            }
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479920119/fstmerge_base_1220571008391726052
public String getMavenOpts() {
        if ((mavenOpts!=null) && (mavenOpts.trim().length()>0)) { 
            return mavenOpts.replaceAll("[\t\r\n]+"," ");
        }
        else {
            String globalOpts = DESCRIPTOR.getGlobalMavenOpts();
            if (globalOpts!=null) {
                return globalOpts.replaceAll("[\t\r\n]+"," ");
            }
            else {
                return globalOpts;
            }
        }
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479920119/fstmerge_var2_74337289471643859

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/MavenModuleSet.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479920128/fstmerge_var1_8122061884993551620
public MavenInstallation getMaven() {
        MavenInstallation[] installations = getDescriptor().getMavenDescriptor().getInstallations();
        for( MavenInstallation i : installations) {
            if(mavenName==null || i.getName().equals(mavenName))
                return i;
        }
        if (installations.length==1)
            return installations[0];
        return null;
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479920128/fstmerge_base_4968129849225259216
public MavenInstallation getMaven() {
        MavenInstallation[] installations = DESCRIPTOR.getMavenDescriptor().getInstallations();
        for( MavenInstallation i : installations) {
            if(mavenName==null || i.getName().equals(mavenName))
                return i;
        }
        if (installations.length==1)
            return installations[0];
        return null;
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479920128/fstmerge_var2_8963111818352359427

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/MavenModuleSet.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479920171/fstmerge_var1_2164271013997750144
public DescriptorImpl getDescriptor() {
        return (DescriptorImpl)Jenkins.getInstance().getDescriptorOrDie(getClass());
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479920171/fstmerge_base_5873687164832726185
public DescriptorImpl getDescriptor() {
        return DESCRIPTOR;
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479920171/fstmerge_var2_8489019206399414839

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/MavenModuleSet.java
Conflict type: LineBasedMCFd
Conflict body: 
~~FSTMerge~~ @Restricted(NoExternalUse.class)
    @Extension(ordinal=900)
    public static final DescriptorImpl DESCRIPTOR = new DescriptorImpl(); ##FSTMerge## @Extension(ordinal=900)
    public static final DescriptorImpl DESCRIPTOR = new DescriptorImpl(); ##FSTMerge##
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/MavenModuleSet.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479920225/fstmerge_var1_7955056237653696034
public MavenModuleSet newInstance(ItemGroup parent, String name) {
            MavenModuleSet mms = new MavenModuleSet(parent,name);
            mms.setSettings(GlobalMavenConfig.get().getSettingsProvider());
            mms.setGlobalSettings(GlobalMavenConfig.get().getGlobalSettingsProvider());
            return mms;
        }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479920225/fstmerge_base_5292470384364844249
public MavenModuleSet newInstance(ItemGroup parent, String name) {
            return new MavenModuleSet(parent,name);
        }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479920225/fstmerge_var2_319345037377324312

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/MavenModuleSet.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479920303/fstmerge_var1_8778920971371886490
@SuppressWarnings("RV_RETURN_VALUE_IGNORED_BAD_PRACTICE")
    public static MavenEmbedder createEmbedder(MavenEmbedderRequest mer) throws MavenEmbedderException, IOException {
        
        
        MavenRequest mavenRequest = new MavenRequest();
        
        // make sure ~/.m2 exists to avoid http://www.nabble.com/BUG-Report-tf3401736.html
        File m2Home = new File(MavenEmbedder.userHome, ".m2");
        m2Home.mkdirs();
        if(!m2Home.exists())
            throw new AbortException("Failed to create "+m2Home);

        if (mer.getPrivateRepository()!=null)
            mavenRequest.setLocalRepositoryPath( mer.getPrivateRepository() );

        if (mer.getProfiles() != null) {
            mavenRequest.setProfiles(Arrays.asList( StringUtils.split( mer.getProfiles(), "," ) ));
        }
        

        if ( mer.getAlternateSettings() != null ) {
            mavenRequest.setUserSettingsFile( mer.getAlternateSettings().getAbsolutePath() );
        } else {
            mavenRequest.setUserSettingsFile( new File( m2Home, "settings.xml" ).getAbsolutePath() );
        }

        if ( mer.getGlobalSettings() != null) {
            mavenRequest.setGlobalSettingsFile( mer.getGlobalSettings().getAbsolutePath() );
        } else {
            mavenRequest.setGlobalSettingsFile( new File( mer.getMavenHome(), "conf/settings.xml" ).getAbsolutePath() );
        }
        
        if (mer.getWorkspaceReader() != null ) {
            mavenRequest.setWorkspaceReader( mer.getWorkspaceReader() );
        }
        
        mavenRequest.setUpdateSnapshots(mer.isUpdateSnapshots());

        // TODO olamy check this sould be userProperties 
        mavenRequest.setSystemProperties(mer.getSystemProperties());

        if (mer.getTransferListener() != null) {
            if (debugMavenEmbedder) {
                mer.getListener().getLogger()
                    .println( "use transfertListener " + mer.getTransferListener().getClass().getName() );
            }
            mavenRequest.setTransferListener( mer.getTransferListener() );
        }

        mavenRequest.setMavenLoggerManager( new Slf4jLoggerManager() );

        //mavenRequest.setContainerClassPathScanning( PlexusConstants.SCANNING_OFF );

        //mavenRequest.setContainerComponentVisibility( PlexusConstants.GLOBAL_VISIBILITY );

        ClassLoader mavenEmbedderClassLoader = mer.getClassLoader();

        {// are we loading the right components.xml? (and not from Maven that's running Jetty, if we are running in "mvn hudson-dev:run" or "mvn hpi:run"?
            Enumeration<URL> e = mavenEmbedderClassLoader.getResources("META-INF/plexus/components.xml");
            while (e.hasMoreElements()) {
                URL url = e.nextElement();
                LOGGER.fine("components.xml from "+url);
            }
        }

        mavenRequest.setProcessPlugins( mer.isProcessPlugins() );
        mavenRequest.setResolveDependencies( mer.isResolveDependencies() );
        mavenRequest.setValidationLevel( mer.getValidationLevel() );
            
        // TODO check this MaskingClassLoader with maven 3 artifacts
        MavenEmbedder maven = new MavenEmbedder( mavenEmbedderClassLoader, mavenRequest );

        return maven;
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479920303/fstmerge_base_7609273762245589528
@SuppressWarnings("RV_RETURN_VALUE_IGNORED_BAD_PRACTICE")
    public static MavenEmbedder createEmbedder(MavenEmbedderRequest mavenEmbedderRequest) throws MavenEmbedderException, IOException {
        
        
        MavenRequest mavenRequest = new MavenRequest();
        
        // make sure ~/.m2 exists to avoid http://www.nabble.com/BUG-Report-tf3401736.html
        File m2Home = new File(MavenEmbedder.userHome, ".m2");
        m2Home.mkdirs();
        if(!m2Home.exists())
            throw new AbortException("Failed to create "+m2Home);

        if (mavenEmbedderRequest.getPrivateRepository()!=null)
            mavenRequest.setLocalRepositoryPath( mavenEmbedderRequest.getPrivateRepository() );

        if (mavenEmbedderRequest.getProfiles() != null) {
            mavenRequest.setProfiles(Arrays.asList( StringUtils.split( mavenEmbedderRequest.getProfiles(), "," ) ));    
        }
        

        if ( mavenEmbedderRequest.getAlternateSettings() != null ) {
            mavenRequest.setUserSettingsFile( mavenEmbedderRequest.getAlternateSettings().getAbsolutePath() );
        } else {
            mavenRequest.setUserSettingsFile( new File( m2Home, "settings.xml" ).getAbsolutePath() );
        }

        if ( mavenEmbedderRequest.getGlobalSettings() != null) {
            mavenRequest.setGlobalSettingsFile( mavenEmbedderRequest.getGlobalSettings().getAbsolutePath() );
        } else {
            mavenRequest.setGlobalSettingsFile( new File( mavenEmbedderRequest.getMavenHome(), "conf/settings.xml" ).getAbsolutePath() );
        }
        
        if (mavenEmbedderRequest.getWorkspaceReader() != null ) {
            mavenRequest.setWorkspaceReader( mavenEmbedderRequest.getWorkspaceReader() );
        }
        
        mavenRequest.setUpdateSnapshots(mavenEmbedderRequest.isUpdateSnapshots());

        // TODO olamy check this sould be userProperties 
        mavenRequest.setSystemProperties(mavenEmbedderRequest.getSystemProperties());

        if (mavenEmbedderRequest.getTransferListener() != null) {
            if (debugMavenEmbedder) {
                mavenEmbedderRequest.getListener().getLogger()
                    .println( "use transfertListener " + mavenEmbedderRequest.getTransferListener().getClass().getName() );
            }
            mavenRequest.setTransferListener( mavenEmbedderRequest.getTransferListener() );
        }
        EmbedderLoggerImpl logger =
            new EmbedderLoggerImpl( mavenEmbedderRequest.getListener(), debugMavenEmbedder ? org.codehaus.plexus.logging.Logger.LEVEL_DEBUG
                            : org.codehaus.plexus.logging.Logger.LEVEL_INFO );
        mavenRequest.setMavenLoggerManager( logger );
        
        ClassLoader mavenEmbedderClassLoader =
            mavenEmbedderRequest.getClassLoader() == null ? new MaskingClassLoader( MavenUtil.class.getClassLoader() )
                            : mavenEmbedderRequest.getClassLoader(); 

        {// are we loading the right components.xml? (and not from Maven that's running Jetty, if we are running in "mvn hudson-dev:run" or "mvn hpi:run"?
            Enumeration<URL> e = mavenEmbedderClassLoader.getResources("META-INF/plexus/components.xml");
            while (e.hasMoreElements()) {
                URL url = e.nextElement();
                LOGGER.fine("components.xml from "+url);
            }
        }

        mavenRequest.setProcessPlugins( mavenEmbedderRequest.isProcessPlugins() );
        mavenRequest.setResolveDependencies( mavenEmbedderRequest.isResolveDependencies() );
        mavenRequest.setValidationLevel( mavenEmbedderRequest.getValidationLevel() );
            
        // TODO check this MaskingClassLoader with maven 3 artifacts
        MavenEmbedder maven = new MavenEmbedder( mavenEmbedderClassLoader, mavenRequest );

        return maven;
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479920303/fstmerge_var2_8396157401186109259

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/MavenUtil.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479920313/fstmerge_var1_5954056437602201512
public static boolean maven3orLater(String mavenVersion) {
        // null or empty so false !
        if (StringUtils.isBlank( mavenVersion )) {
            return false;
        }
        return new ComparableVersion(mavenVersion).compareTo( new ComparableVersion ("3.0") ) >= 0;
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479920313/fstmerge_base_5332427969570702425
public static boolean maven3orLater(String mavenVersion) {
        // null or empty so false !
        if (StringUtils.isBlank( mavenVersion )) {
            return false;
        }
        return new ComparableVersion (mavenVersion).compareTo( new ComparableVersion ("3.0") ) >= 0;
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479920313/fstmerge_var2_1005047232803447500

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/MavenUtil.java
Conflict type: LineBasedMCFd
Conflict body: 
~~FSTMerge~~ public final @Nonnull String groupId; ##FSTMerge## public final String groupId; ##FSTMerge##
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/ModuleName.java
Conflict type: LineBasedMCFd
Conflict body: 
~~FSTMerge~~ public final @Nonnull String artifactId; ##FSTMerge## public final String artifactId; ##FSTMerge##
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/ModuleName.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479920520/fstmerge_var1_2965049847263403259
public ModuleName(String groupId, String artifactId) {
        if (groupId == null) {
            throw new NullPointerException("Must specify groupId");
        }
        if (artifactId == null) {
            throw new NullPointerException("Must specify artifactId");
        }
        this.groupId = groupId;
        this.artifactId = artifactId;
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479920520/fstmerge_base_1607504306484272387
public ModuleName(String groupId, String artifactId) {
        this.groupId = groupId;
        this.artifactId = artifactId;
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479920520/fstmerge_var2_3697576265218078303

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/ModuleName.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479920623/fstmerge_var1_6066642756879234301
MavenProcess(PerChannel parent, String mavenOpts, MavenInstallation installation, JDK jdk, NewProcess np, RedirectableOutputStream output) throws IOException, InterruptedException {
            this.parent = parent;
            this.mavenOpts = mavenOpts;
            this.channel = np.channel;
            /* Probably not currently useful for testing; could add if we did not want plugins accidentally loading 7+ bytecode into Maven JVM:
            short javaLevel = 6; // cf. jenkins/pom.xml#java.level
            channel.setMaximumBytecodeLevel(javaLevel);
            */
            this.proc = np.proc;
            this.installation = installation;
            this.jdk = jdk;
            this.output = output;
            this.systemProperties = channel.call(new GetSystemProperties());
        }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479920623/fstmerge_base_3183483399349889386
MavenProcess(PerChannel parent, String mavenOpts, MavenInstallation installation, JDK jdk, NewProcess np, RedirectableOutputStream output) throws IOException, InterruptedException {
            this.parent = parent;
            this.mavenOpts = mavenOpts;
            this.channel = np.channel;
            this.proc = np.proc;
            this.installation = installation;
            this.jdk = jdk;
            this.output = output;
            this.systemProperties = channel.call(new GetSystemProperties());
        }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479920623/fstmerge_var2_4618406660647572619

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/ProcessCache.java
Conflict type: LineBasedMCFd
Conflict body: 
~~FSTMerge~~ private ClassLoader classLoader = getDefaultMavenClassLoader(); ##FSTMerge## private ClassLoader classLoader; ##FSTMerge##
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/MavenEmbedderRequest.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921070/fstmerge_var1_7460860768477385126
protected List<Action> createTransientActions() {
        List<Action> r = super.createTransientActions();

        // if we just pick up the project actions from the last build,
        // and if the last build failed very early, then the reports that
        // kick in later (like test results) won't be displayed.
        // so pick up last successful build, too.
        Set<Class> added = new HashSet<Class>();
        addTransientActionsFromBuild(getLastBuild(),r,added);
        addTransientActionsFromBuild(getLastSuccessfulBuild(),r,added);

        for (Trigger<?> trigger : triggers())
            r.addAll(trigger.getProjectActions());

        return r;
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921070/fstmerge_base_4567754091327150774
protected List<Action> createTransientActions() {
        List<Action> r = super.createTransientActions();

        // if we just pick up the project actions from the last build,
        // and if the last build failed very early, then the reports that
        // kick in later (like test results) won't be displayed.
        // so pick up last successful build, too.
        Set<Class> added = new HashSet<Class>();
        addTransientActionsFromBuild(getLastBuild(),r,added);
        addTransientActionsFromBuild(getLastSuccessfulBuild(),r,added);

        for (Trigger<?> trigger : triggers)
            r.addAll(trigger.getProjectActions());

        return r;
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921070/fstmerge_var2_2736092147686086559

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/AbstractMavenProject.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921109/fstmerge_var1_7398346608755185662
public PrintWriter error(String msg) {
        core.error(msg);
        return new PrintWriter(logger, true);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921109/fstmerge_base_6624248007851421006
public PrintWriter error(String msg) {
        core.error(msg);
        return new PrintWriter(logger);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921109/fstmerge_var2_4541613305896864290

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/SplittableBuildListener.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921113/fstmerge_var1_5451689065403963956
public PrintWriter error(String format, Object... args) {
        core.error(format,args);
        return new PrintWriter(logger, true);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921113/fstmerge_base_317070125377547193
public PrintWriter error(String format, Object... args) {
        core.error(format,args);
        return new PrintWriter(logger);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921113/fstmerge_var2_4059326633463508280

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/SplittableBuildListener.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921118/fstmerge_var1_5526867731217775013
public PrintWriter fatalError(String msg) {
        core.fatalError(msg);
        return new PrintWriter(logger, true);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921118/fstmerge_base_7478315411536660510
public PrintWriter fatalError(String msg) {
        core.fatalError(msg);
        return new PrintWriter(logger);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921118/fstmerge_var2_2423069061155001462

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/SplittableBuildListener.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921122/fstmerge_var1_2402882554740453546
public PrintWriter fatalError(String format, Object... args) {
        core.fatalError(format,args);
        return new PrintWriter(logger, true);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921122/fstmerge_base_9082271590385428932
public PrintWriter fatalError(String format, Object... args) {
        core.fatalError(format,args);
        return new PrintWriter(logger);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921122/fstmerge_var2_4416864830478803382

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/SplittableBuildListener.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921352/fstmerge_var1_8473711031323465986
public ProcessCache.NewProcess newProcess(BuildListener listener, OutputStream out) throws IOException, InterruptedException {
        if(MavenProcessFactory.debug)
            listener.getLogger().println("Using env variables: "+ envVars);
        try {
            //launcher.getChannel().export( type, instance )
            Charset charset;
            try {
                charset = Charset.forName(launcher.getChannel().call(new GetCharset()));
            } catch (UnsupportedCharsetException e) {
                // choose the bit preserving charset. not entirely sure if iso-8859-1 does that though.
                charset = Charset.forName("iso-8859-1");
            }

            MavenConsoleAnnotator mca = new MavenConsoleAnnotator(out,charset);

            if ( mavenRemoteUseInet ) {
                envVars.put(MAVEN_REMOTE_USEINET_ENV_VAR_NAME , "true" );
            }
            JDK jdk = getJava(listener);
            JDK originalJdk = null;
            JDK: while (true) {
            final Acceptor acceptor = launcher.getChannel().call(new SocketHandler());
            final ArgumentListBuilder cmdLine = buildMavenAgentCmdLine(listener, acceptor.getPort(), jdk);
            String[] cmds = cmdLine.toCommandArray();
            final Proc proc = launcher.launch().cmds(cmds).envs(envVars).stdout(mca).pwd(workDir).start();

            Connection con;
            try {
                con = acceptor.accept();
            } catch (SocketTimeoutException e) {
                // failed to connect. Is the process dead?
                // if so, the error should have been provided by the launcher already.
                // so abort gracefully without a stack trace.
                if(!proc.isAlive())
                    throw new AbortException("Failed to launch Maven. Exit code = "+proc.join());
                throw e;
            }

            Channel ch = Channels.forProcess("Channel to Maven " + Arrays.toString(cmds),
                    Computer.threadPoolForRemoting, new BufferedInputStream(con.in), new BufferedOutputStream(con.out),
                    listener.getLogger(), proc);
            try {
                ch.call(new ConfigureOriginalJDK(originalJdk));
            } catch (IOException x) {
                if (originalJdk == null) { // so we only try this once
                    for (Throwable t = x; t != null; t = t.getCause()) {
                        if (t instanceof UnsupportedClassVersionError) {
                            listener.error("[JENKINS-18403] JDK 5 not supported to run Maven; retrying with slave Java and setting compile/test properties to point to " + jdk.getHome());
                            originalJdk = jdk;
                            jdk = launcher.getChannel().call(new FindJavaHome());
                            continue JDK;
                        }
                    }
                }
                throw x;
            }

            if (!PlexusModuleContributorFactory.all().isEmpty())
                applyPlexusModuleContributor(ch,build);

            return new NewProcess(ch,proc);
            }
        } catch (IOException e) {
            if(fixNull(e.getMessage()).contains("java: not found")) {
                // diagnose issue #659
                JDK jdk = mms.getJDK();
                if(jdk==null)
                    throw new IOException2(mms.getDisplayName()+" is not configured with a JDK, but your PATH doesn't include Java",e);
            }
            throw e;
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921352/fstmerge_base_4209599978974041553
public ProcessCache.NewProcess newProcess(BuildListener listener, OutputStream out) throws IOException, InterruptedException {
        if(MavenProcessFactory.debug)
            listener.getLogger().println("Using env variables: "+ envVars);
        try {
            //launcher.getChannel().export( type, instance )
            final Acceptor acceptor = launcher.getChannel().call(new SocketHandler());
            Charset charset;
            try {
                charset = Charset.forName(launcher.getChannel().call(new GetCharset()));
            } catch (UnsupportedCharsetException e) {
                // choose the bit preserving charset. not entirely sure if iso-8859-1 does that though.
                charset = Charset.forName("iso-8859-1");
            }

            MavenConsoleAnnotator mca = new MavenConsoleAnnotator(out,charset);

            if ( mavenRemoteUseInet ) {
                envVars.put(MAVEN_REMOTE_USEINET_ENV_VAR_NAME , "true" );
            }
            final ArgumentListBuilder cmdLine = buildMavenAgentCmdLine( listener,acceptor.getPort());
            String[] cmds = cmdLine.toCommandArray();
            final Proc proc = launcher.launch().cmds(cmds).envs(envVars).stdout(mca).pwd(workDir).start();

            Connection con;
            try {
                con = acceptor.accept();
            } catch (SocketTimeoutException e) {
                // failed to connect. Is the process dead?
                // if so, the error should have been provided by the launcher already.
                // so abort gracefully without a stack trace.
                if(!proc.isAlive())
                    throw new AbortException("Failed to launch Maven. Exit code = "+proc.join());
                throw e;
            }

            return new NewProcess(
                Channels.forProcess("Channel to Maven "+ Arrays.toString(cmds),
                    Computer.threadPoolForRemoting, new BufferedInputStream(con.in), new BufferedOutputStream(con.out),
                    listener.getLogger(), proc),
                proc);
        } catch (IOException e) {
            if(fixNull(e.getMessage()).contains("java: not found")) {
                // diagnose issue #659
                JDK jdk = mms.getJDK();
                if(jdk==null)
                    throw new IOException2(mms.getDisplayName()+" is not configured with a JDK, but your PATH doesn't include Java",e);
            }
            throw e;
        }
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921352/fstmerge_var2_7560271765797787446

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/AbstractMavenProcessFactory.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921357/fstmerge_var1_7211548750750099646
protected ArgumentListBuilder buildMavenAgentCmdLine(BuildListener listener,int tcpPort) throws IOException, InterruptedException {
        return buildMavenAgentCmdLine(listener, tcpPort, getJava(listener));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921357/fstmerge_base_8113573766713383427
protected ArgumentListBuilder buildMavenAgentCmdLine(BuildListener listener,int tcpPort) throws IOException, InterruptedException {
        MavenInstallation mvn = getMavenInstallation(listener);
        if(mvn==null) {
            listener.error("Maven version is not configured for this project. Can't determine which Maven to run");
            throw new RunnerAbortedException();
        }
        if(mvn.getHome()==null) {
            listener.error("Maven '%s' doesn't have its home set",mvn.getName());
            throw new RunnerAbortedException();
        }

        boolean isMaster = getCurrentNode()== Jenkins.getInstance();
        FilePath slaveRoot=null;
        if(!isMaster)
            slaveRoot = getCurrentNode().getRootPath();

        ArgumentListBuilder args = new ArgumentListBuilder();
        JDK jdk = getJava(listener);
        if(jdk==null) {
            args.add("java");
        } else {
            args.add(jdk.getHome()+"/bin/java"); // use JDK.getExecutable() here ?
        }

        if(debugPort!=0)
            args.add("-Xrunjdwp:transport=dt_socket,server=y,address="+debugPort);
        if(yjp)
            args.add("-agentlib:yjpagent=tracing");

        args.addTokenized(getMavenOpts());
        
        args.add( "-cp" );
        args.add(getMavenAgentClassPath(mvn,isMaster,slaveRoot,listener));
        args.add(getMainClassName());

        // M2_HOME
        args.add(mvn.getHome());

        // remoting.jar
        String remotingJar = getLauncher().getChannel().call(new GetRemotingJar());
        if(remotingJar==null) {// this shouldn't be possible, but there are still reports indicating this, so adding a probe here.
            listener.error("Failed to determine the location of slave.jar");
            throw new RunnerAbortedException();
        }
        args.add(remotingJar);

        // interceptor.jar
        args.add(getMavenInterceptorClassPath(mvn,isMaster,slaveRoot));

        // TCP/IP port to establish the remoting infrastructure
        args.add(tcpPort);
        
        String interceptorOverride = getMavenInterceptorOverride(mvn,isMaster,slaveRoot);
        if (interceptorOverride!=null) {
            args.add(interceptorOverride);
        }

        return args;
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921357/fstmerge_var2_4412235847539642515

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/AbstractMavenProcessFactory.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921423/fstmerge_var1_3830362043253801789
@Override
    public void sessionEnded( ExecutionEvent event )
    {
        if ( logger.isInfoEnabled() )
        {
            if ( event.getSession().getProjects().size() > 1 )
            {
                logReactorSummary( event.getSession() );
            }

            logResult( event.getSession() );

            logStats( event.getSession() );

            logger.info( chars( '-', LINE_LENGTH ) );
        }

        logErrors( event.getSession() );
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921423/fstmerge_base_6945161036079920880
@Override
    public void sessionEnded( ExecutionEvent event )
    {
        if ( logger.isInfoEnabled() )
        {
            if ( event.getSession().getProjects().size() > 1 )
            {
                logReactorSummary( event.getSession() );
            }

            logResult( event.getSession() );

            logStats( event.getSession() );

            logger.info( chars( '-', LINE_LENGTH ) );
        }
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921423/fstmerge_var2_8615137393837549108

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/util/ExecutionEventLogger.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921734/fstmerge_var1_1263488603041220734
public String getIconFileName() {
            if(getSiteDir(project).exists())
                return "help.png";
            else
                // hide it since we don't have site yet.
                return null;
        }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921734/fstmerge_base_1131380211614510917
public String getIconFileName() {
            if(getSiteDir(project).exists())
                return "help.gif";
            else
                // hide it since we don't have site yet.
                return null;
        }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921734/fstmerge_var2_6173020053620039593

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/reporters/MavenSiteArchiver.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921803/fstmerge_var1_8176338066613401579
public boolean postBuild(MavenBuildProxy build, MavenProject pom, BuildListener listener) throws InterruptedException, IOException {
        
        recordParents(build, pom, listener);
        
        build.executeAsync(new BuildCallable<Void,IOException>() {
            private static final long serialVersionUID = -1360161848504044869L;

            // record is transient, so needs to make a copy first
            private final Map<String,String> u = used;
            private final Map<String,String> p = produced;

            public Void call(MavenBuild build) throws IOException, InterruptedException {
                FingerprintMap map = Jenkins.getInstance().getFingerprintMap();

                for (Entry<String, String> e : p.entrySet())
                    map.getOrCreate(build, e.getKey(), e.getValue()).add(build);
                for (Entry<String, String> e : u.entrySet())
                    map.getOrCreate(null, e.getKey(), e.getValue()).add(build);

                Map<String,String> all = new HashMap<String, String>(u);
                all.putAll(p);

                // add action
                FingerprintAction fa = build.getAction(FingerprintAction.class);
                if (fa!=null)   fa.add(all);
                else            build.getActions().add(new FingerprintAction(build,all));
                return null;
            }
        });
        return true;
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921803/fstmerge_base_1077523984021311459
public boolean postBuild(MavenBuildProxy build, MavenProject pom, BuildListener listener) throws InterruptedException, IOException {
        
        recordParents(build, pom);
        
        build.executeAsync(new BuildCallable<Void,IOException>() {
            private static final long serialVersionUID = -1360161848504044869L;

            // record is transient, so needs to make a copy first
            private final Map<String,String> u = used;
            private final Map<String,String> p = produced;

            public Void call(MavenBuild build) throws IOException, InterruptedException {
                FingerprintMap map = Jenkins.getInstance().getFingerprintMap();

                for (Entry<String, String> e : p.entrySet())
                    map.getOrCreate(build, e.getKey(), e.getValue()).add(build);
                for (Entry<String, String> e : u.entrySet())
                    map.getOrCreate(null, e.getKey(), e.getValue()).add(build);

                Map<String,String> all = new HashMap<String, String>(u);
                all.putAll(p);

                // add action
                FingerprintAction fa = build.getAction(FingerprintAction.class);
                if (fa!=null)   fa.add(all);
                else            build.getActions().add(new FingerprintAction(build,all));
                return null;
            }
        });
        return true;
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921803/fstmerge_var2_7512753640182551703

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/reporters/MavenFingerprinter.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921808/fstmerge_var1_310464448550756917
@SuppressWarnings("deprecation")
    private ArtifactRepository getArtifactRepositoryMaven21(MavenProject pom) {
	    ProjectBuilderConfiguration projectBuilderConfiguration;
        try {
            // Since maven-plugin is compiled against maven-core-3x, we need to retrieve 
            // this maven 2 object via reflection
            Method method = MavenProject.class.getMethod("getProjectBuilderConfiguration");
            projectBuilderConfiguration = (ProjectBuilderConfiguration) method.invoke(pom);
            if (projectBuilderConfiguration == null) {
                return null;
            }
            return projectBuilderConfiguration.getLocalRepository();
        } catch (Exception e) {
            LOGGER.log(Level.WARNING, "Could not retrieve BuilderConfigration", e);
            return null;
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921808/fstmerge_base_2312753981630122777
@SuppressWarnings("deprecation")
    private ArtifactRepository getArtifactRepositoryMaven21(MavenProject pom) {
	    ProjectBuilderConfiguration projectBuilderConfiguration;
        try {
            // Since maven-plugin is compiled against maven-core-3x, we need to retrieve 
            // this maven 2 object via reflection
            Method method = MavenProject.class.getMethod("getProjectBuilderConfiguration");
            projectBuilderConfiguration = (ProjectBuilderConfiguration) method.invoke(pom);
            return projectBuilderConfiguration.getLocalRepository();
        } catch (Exception e) {
            LOGGER.log(Level.WARNING, "Could not retrieve BuilderConfigration", e);
            return null;
        }
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921808/fstmerge_var2_4662986434002957891

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/reporters/MavenFingerprinter.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921986/fstmerge_var1_8591711610639693843
public boolean postBuild(MavenBuildProxy build, MavenProject pom, final BuildListener listener) throws InterruptedException, IOException {
        // artifacts that are known to Maven.
        Set<File> mavenArtifacts = new HashSet<File>();

        if (pom.getFile() != null) {// goals like 'clean' runs without loading POM, apparently.
            // record POM
            final MavenArtifact pomArtifact = new MavenArtifact(
                    pom.getGroupId(), pom.getArtifactId(), pom.getVersion(), null, "pom", pom.getFile().getName(), Util.getDigestOf(pom.getFile()));

            final String repositoryUrl = pom.getDistributionManagementArtifactRepository() == null ? null : Util.fixEmptyAndTrim(pom.getDistributionManagementArtifactRepository().getUrl());
            final String repositoryId = pom.getDistributionManagementArtifactRepository() == null ? null : Util.fixEmptyAndTrim(pom.getDistributionManagementArtifactRepository().getId());

            mavenArtifacts.add(pom.getFile());
            pomArtifact.archive(build, pom.getFile(), listener);

            // record main artifact (if packaging is POM, this doesn't exist)
            final MavenArtifact mainArtifact = MavenArtifact.create(pom.getArtifact());
            if (mainArtifact != null) {
                File f = pom.getArtifact().getFile();
                mavenArtifacts.add(f);
                mainArtifact.archive(build, f, listener);
            }

            // record attached artifacts
            final List<MavenArtifact> attachedArtifacts = new ArrayList<MavenArtifact>();
            for (Artifact a : pom.getAttachedArtifacts()) {
                MavenArtifact ma = MavenArtifact.create(a);
                if (ma != null) {
                    mavenArtifacts.add(a.getFile());
                    ma.archive(build, a.getFile(), listener);
                    attachedArtifacts.add(ma);
                }
            }

            // record the action
            build.executeAsync(new MavenBuildProxy.BuildCallable<Void, IOException>() {
                private static final long serialVersionUID = -7955474564875700905L;

                public Void call(MavenBuild build) throws IOException, InterruptedException {
                    // if a build forks lifecycles, this method can be called multiple times
                    List<MavenArtifactRecord> old = build.getActions(MavenArtifactRecord.class);
                    if (!old.isEmpty())
                        build.getActions().removeAll(old);

                    MavenArtifactRecord mar = new MavenArtifactRecord(build, pomArtifact, mainArtifact, attachedArtifacts,
                            repositoryUrl,
                            repositoryId);
                    build.addAction(mar);

                    // TODO kutzi: why are the fingerprints recorded here?
                    // I thought that is the job of MavenFingerprinter
                    mar.recordFingerprints();

                    return null;
                }
            });
        }

        // do we have any assembly artifacts?
//        System.out.println("Considering "+assemblies+" at "+MavenArtifactArchiver.this);
//        new Exception().fillInStackTrace().printStackTrace();
        if (build.isArchivingDisabled()) {
          listener.getLogger().println("[JENKINS] Archiving disabled");
        } else if (assemblies!=null) {
            for (File assembly : assemblies) {
                if(mavenArtifacts.contains(assembly))
                    continue;   // looks like this is already archived
                String target = assembly.getName();
                listener.getLogger().println("[JENKINS] Archiving "+ assembly+" to "+target);
                build.queueArchiving(target, assembly.getAbsolutePath());
                // TODO: fingerprint
            }
        }

        return true;
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921986/fstmerge_base_6564537653776921902
public boolean postBuild(MavenBuildProxy build, MavenProject pom, final BuildListener listener) throws InterruptedException, IOException {
        // artifacts that are known to Maven.
        Set<File> mavenArtifacts = new HashSet<File>();

        if (pom.getFile() != null) {// goals like 'clean' runs without loading POM, apparently.
            // record POM
            final MavenArtifact pomArtifact = new MavenArtifact(
                    pom.getGroupId(), pom.getArtifactId(), pom.getVersion(), null, "pom", pom.getFile().getName(), Util.getDigestOf(new FileInputStream(pom.getFile())));

            final String repositoryUrl = pom.getDistributionManagementArtifactRepository() == null ? null : Util.fixEmptyAndTrim(pom.getDistributionManagementArtifactRepository().getUrl());
            final String repositoryId = pom.getDistributionManagementArtifactRepository() == null ? null : Util.fixEmptyAndTrim(pom.getDistributionManagementArtifactRepository().getId());

            mavenArtifacts.add(pom.getFile());
            pomArtifact.archive(build, pom.getFile(), listener);

            // record main artifact (if packaging is POM, this doesn't exist)
            final MavenArtifact mainArtifact = MavenArtifact.create(pom.getArtifact());
            if (mainArtifact != null) {
                File f = pom.getArtifact().getFile();
                mavenArtifacts.add(f);
                mainArtifact.archive(build, f, listener);
            }

            // record attached artifacts
            final List<MavenArtifact> attachedArtifacts = new ArrayList<MavenArtifact>();
            for (Artifact a : pom.getAttachedArtifacts()) {
                MavenArtifact ma = MavenArtifact.create(a);
                if (ma != null) {
                    mavenArtifacts.add(a.getFile());
                    ma.archive(build, a.getFile(), listener);
                    attachedArtifacts.add(ma);
                }
            }

            // record the action
            build.executeAsync(new MavenBuildProxy.BuildCallable<Void, IOException>() {
                private static final long serialVersionUID = -7955474564875700905L;

                public Void call(MavenBuild build) throws IOException, InterruptedException {
                    // if a build forks lifecycles, this method can be called multiple times
                    List<MavenArtifactRecord> old = build.getActions(MavenArtifactRecord.class);
                    if (!old.isEmpty())
                        build.getActions().removeAll(old);

                    MavenArtifactRecord mar = new MavenArtifactRecord(build, pomArtifact, mainArtifact, attachedArtifacts,
                            repositoryUrl,
                            repositoryId);
                    build.addAction(mar);

                    // TODO kutzi: why are the fingerprints recorded here?
                    // I thought that is the job of MavenFingerprinter
                    mar.recordFingerprints();

                    return null;
                }
            });
        }

        // do we have any assembly artifacts?
//        System.out.println("Considering "+assemblies+" at "+MavenArtifactArchiver.this);
//        new Exception().fillInStackTrace().printStackTrace();
        if (build.isArchivingDisabled()) {
          listener.getLogger().println("[JENKINS] Archiving disabled");
        } else if (assemblies!=null) {
            for (File assembly : assemblies) {
                if(mavenArtifacts.contains(assembly))
                    continue;   // looks like this is already archived
                FilePath target = build.getArtifactsDir().child(assembly.getName());
                listener.getLogger().println("[JENKINS] Archiving "+ assembly+" to "+target);
                new FilePath(assembly).copyTo(target);
                // TODO: fingerprint
            }
        }

        return true;
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479921986/fstmerge_var2_8352558967149323331

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/reporters/MavenArtifactArchiver.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479922046/fstmerge_var1_7107605493296818464
public final String getIconFileName() {
        return "redo.png";
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479922046/fstmerge_base_1095448290629363308
public final String getIconFileName() {
        return "redo.gif";
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479922046/fstmerge_var2_7554014817212965292

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/reporters/MavenAbstractArtifactRecord.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479922079/fstmerge_var1_876642158647237489
@RequirePOST
    public final HttpResponse doRedeploy(
            @QueryParameter("_.id") final String id,
            @QueryParameter("_.url") final String repositoryUrl,
            @QueryParameter("_.uniqueVersion") final boolean uniqueVersion) throws ServletException, IOException {
        getACL().checkPermission(REDEPLOY);

        File logFile = new File(getBuild().getRootDir(),"maven-deployment."+records.size()+".log");
        final Record record = new Record(repositoryUrl, logFile.getName());
        records.add(record);

        new TaskThread(this,ListenerAndText.forFile(logFile,this)) {
            protected void perform(TaskListener listener) throws Exception {
                try {
                    MavenEmbedder embedder = MavenUtil.createEmbedder(listener,getBuild());
                    ArtifactRepositoryLayout layout =
                        embedder.lookup( ArtifactRepositoryLayout.class,"default");
                    ArtifactRepositoryFactory factory =
                        (ArtifactRepositoryFactory) embedder.lookup(ArtifactRepositoryFactory.ROLE);

                    ArtifactRepository repository = factory.createDeploymentArtifactRepository(
                            id, repositoryUrl, layout, uniqueVersion);
                    WrappedArtifactRepository repo = new WrappedArtifactRepository(repository, uniqueVersion);
                    deploy(embedder,repo,listener);

                    record.result = Result.SUCCESS;
                } finally {
                    if(record.result==null)
                        record.result = Result.FAILURE;
                    // persist the record
                    getBuild().save();
                }
            }
        }.start();

        return HttpRedirect.DOT;
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479922079/fstmerge_base_1990191326745874381
public final HttpResponse doRedeploy(
            @QueryParameter("_.id") final String id,
            @QueryParameter("_.url") final String repositoryUrl,
            @QueryParameter("_.uniqueVersion") final boolean uniqueVersion) throws ServletException, IOException {
        getACL().checkPermission(REDEPLOY);

        File logFile = new File(getBuild().getRootDir(),"maven-deployment."+records.size()+".log");
        final Record record = new Record(repositoryUrl, logFile.getName());
        records.add(record);

        new TaskThread(this,ListenerAndText.forFile(logFile,this)) {
            protected void perform(TaskListener listener) throws Exception {
                try {
                    MavenEmbedder embedder = MavenUtil.createEmbedder(listener,getBuild());
                    ArtifactRepositoryLayout layout =
                        embedder.lookup( ArtifactRepositoryLayout.class,"default");
                    ArtifactRepositoryFactory factory =
                        (ArtifactRepositoryFactory) embedder.lookup(ArtifactRepositoryFactory.ROLE);

                    ArtifactRepository repository = factory.createDeploymentArtifactRepository(
                            id, repositoryUrl, layout, uniqueVersion);
                    WrappedArtifactRepository repo = new WrappedArtifactRepository(repository, uniqueVersion);
                    deploy(embedder,repo,listener);

                    record.result = Result.SUCCESS;
                } finally {
                    if(record.result==null)
                        record.result = Result.FAILURE;
                    // persist the record
                    getBuild().save();
                }
            }
        }.start();

        return HttpRedirect.DOT;
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479922079/fstmerge_var2_9149615884180914349

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/reporters/MavenAbstractArtifactRecord.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479922135/fstmerge_var1_5585576504921651650
@Override
    public void deploy(MavenEmbedder embedder, ArtifactRepository deploymentRepository, TaskListener listener) throws MavenEmbedderException, IOException, ComponentLookupException, ArtifactDeploymentException {
        ArtifactHandlerManager handlerManager = embedder.lookup(ArtifactHandlerManager.class);

        ArtifactFactory artifactFactory = embedder.lookup(ArtifactFactory.class);
        PrintStream logger = listener.getLogger();
        boolean maven3orLater = MavenUtil.maven3orLater(parent.getModuleSetBuild().getMavenVersionUsed());
        boolean uniqueVersion = true;
        if (!deploymentRepository.isUniqueVersion()) {
            if (maven3orLater) {
                logger.println("[ERROR] uniqueVersion == false is not anymore supported in maven 3");
            } else {
                ((WrappedArtifactRepository) deploymentRepository).setUniqueVersion(false);
                uniqueVersion = false;
            }
        } else {
            ((WrappedArtifactRepository) deploymentRepository).setUniqueVersion(true);
        }
        Artifact main = mainArtifact.toArtifact(handlerManager, artifactFactory, parent);
        File pomFile = null;
        if (!isPOM()) {
            pomFile = pomArtifact.getFile(parent);
            main.addMetadata(new ProjectArtifactMetadata(main, pomFile));
        }
        if (main.getType().equals("maven-plugin")) {
            GroupRepositoryMetadata metadata = new GroupRepositoryMetadata(main.getGroupId());
            String goalPrefix = PluginDescriptor.getGoalPrefixFromArtifactId(main.getArtifactId());
            metadata.addPluginMapping(goalPrefix, main.getArtifactId(), null);
            main.addMetadata(metadata);
        }

        ArtifactDeployer deployer = embedder.lookup(ArtifactDeployer.class, uniqueVersion ? "default" : "maven2");
        logger.println(
                "[INFO] Deployment in " + deploymentRepository.getUrl() + " (id=" + deploymentRepository.getId() + ",uniqueVersion=" + deploymentRepository.isUniqueVersion()+")");

        // deploy the main artifact. This also deploys the POM
        logger.println(Messages.MavenArtifact_DeployingMainArtifact(main.getFile().getName()));
        deployer.deploy(main.getFile(), main, deploymentRepository, embedder.getLocalRepository());
        main.getFile().delete();
        if (pomFile != null) {
            pomFile.delete();
        }

        for (MavenArtifact aa : attachedArtifacts) {
            Artifact a = aa.toArtifact(handlerManager, artifactFactory, parent);
            logger.println(Messages.MavenArtifact_DeployingMainArtifact(a.getFile().getName()));
            deployer.deploy(a.getFile(), a, deploymentRepository, embedder.getLocalRepository());
            a.getFile().delete();
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479922135/fstmerge_base_922061723301080956
@Override
    public void deploy(MavenEmbedder embedder, ArtifactRepository deploymentRepository, TaskListener listener) throws MavenEmbedderException, IOException, ComponentLookupException, ArtifactDeploymentException {
        ArtifactHandlerManager handlerManager = embedder.lookup(ArtifactHandlerManager.class);

        ArtifactFactory artifactFactory = embedder.lookup(ArtifactFactory.class);
        PrintStream logger = listener.getLogger();
        boolean maven3orLater = MavenUtil.maven3orLater(parent.getModuleSetBuild().getMavenVersionUsed());
        boolean uniqueVersion = true;
        if (!deploymentRepository.isUniqueVersion()) {
            if (maven3orLater) {
                logger.println("[ERROR] uniqueVersion == false is not anymore supported in maven 3");
            } else {
                ((WrappedArtifactRepository) deploymentRepository).setUniqueVersion(false);
                uniqueVersion = false;
            }
        } else {
            ((WrappedArtifactRepository) deploymentRepository).setUniqueVersion(true);
        }
        Artifact main = mainArtifact.toArtifact(handlerManager, artifactFactory, parent);
        if (!isPOM())
            main.addMetadata(new ProjectArtifactMetadata(main, pomArtifact.getFile(parent)));

        if (main.getType().equals("maven-plugin")) {
            GroupRepositoryMetadata metadata = new GroupRepositoryMetadata(main.getGroupId());
            String goalPrefix = PluginDescriptor.getGoalPrefixFromArtifactId(main.getArtifactId());
            metadata.addPluginMapping(goalPrefix, main.getArtifactId(), null);
            main.addMetadata(metadata);
        }

        ArtifactDeployer deployer = embedder.lookup(ArtifactDeployer.class, uniqueVersion ? "default" : "maven2");
        logger.println(
                "[INFO] Deployment in " + deploymentRepository.getUrl() + " (id=" + deploymentRepository.getId() + ",uniqueVersion=" + deploymentRepository.isUniqueVersion()+")");

        // deploy the main artifact. This also deploys the POM
        logger.println(Messages.MavenArtifact_DeployingMainArtifact(main.getFile().getName()));
        deployer.deploy(main.getFile(), main, deploymentRepository, embedder.getLocalRepository());

        for (MavenArtifact aa : attachedArtifacts) {
            Artifact a = aa.toArtifact(handlerManager, artifactFactory, parent);
            logger.println(Messages.MavenArtifact_DeployingMainArtifact(a.getFile().getName()));
            deployer.deploy(a.getFile(), a, deploymentRepository, embedder.getLocalRepository());
        }
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479922135/fstmerge_var2_2551956377836513275

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/main/java/hudson/maven/reporters/MavenArtifactRecord.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479922345/fstmerge_var1_3192668474989126959
@Test
    public void testArchiveResults() throws InterruptedException, IOException, URISyntaxException, ComponentConfigurationException {
        Assume.assumeFalse("TestResult.parse: Test reports were found but none of them are new. Did tests run?", "https://jenkins.ci.cloudbees.com/job/core/job/jenkins_main_trunk/".equals(System.getenv("JOB_URL")));
        URL resource = SurefireArchiverUnitTest.class.getResource("/surefire-archiver-test2");
        File reportsDir = new File(resource.toURI().getPath());
        
        doReturn(reportsDir).when(this.mojoInfo).getConfigurationValue("reportsDirectory", File.class);
        touchReportFiles(reportsDir);
        
        this.archiver.postExecute(buildProxy, null, this.mojoInfo, new NullBuildListener(), null);
        
        SurefireReport action = this.build.getAction(SurefireReport.class);
        Assert.assertNotNull(action);
        TestResult result = action.getResult();
        Assert.assertNotNull(result);
        Assert.assertEquals(2658, result.getTotalCount());
        
        
        resource = SurefireArchiverUnitTest.class.getResource("/surefire-archiver-test3");
        reportsDir = new File(resource.toURI().getPath());
        doReturn(reportsDir).when(this.mojoInfo).getConfigurationValue("reportsDirectory", File.class);
        touchReportFiles(reportsDir);
        
        this.archiver.postExecute(buildProxy, null, this.mojoInfo, new NullBuildListener(), null);
        
        action = this.build.getAction(SurefireReport.class);
        Assert.assertNotNull(action);
        result = action.getResult();
        Assert.assertNotNull(result);
        Assert.assertEquals(2670, result.getTotalCount());
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479922345/fstmerge_base_797747025778355805
@Test
    public void testArchiveResults() throws InterruptedException, IOException, URISyntaxException, ComponentConfigurationException {
        URL resource = SurefireArchiverUnitTest.class.getResource("/surefire-archiver-test2");
        File reportsDir = new File(resource.toURI().getPath());
        
        doReturn(reportsDir).when(this.mojoInfo).getConfigurationValue("reportsDirectory", File.class);
        touchReportFiles(reportsDir);
        
        this.archiver.postExecute(buildProxy, null, this.mojoInfo, new NullBuildListener(), null);
        
        SurefireReport action = this.build.getAction(SurefireReport.class);
        Assert.assertNotNull(action);
        TestResult result = action.getResult();
        Assert.assertNotNull(result);
        Assert.assertEquals(2658, result.getTotalCount());
        
        
        resource = SurefireArchiverUnitTest.class.getResource("/surefire-archiver-test3");
        reportsDir = new File(resource.toURI().getPath());
        doReturn(reportsDir).when(this.mojoInfo).getConfigurationValue("reportsDirectory", File.class);
        touchReportFiles(reportsDir);
        
        this.archiver.postExecute(buildProxy, null, this.mojoInfo, new NullBuildListener(), null);
        
        action = this.build.getAction(SurefireReport.class);
        Assert.assertNotNull(action);
        result = action.getResult();
        Assert.assertNotNull(result);
        Assert.assertEquals(2670, result.getTotalCount());
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479922345/fstmerge_var2_3890740383429939771

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/maven-plugin/src/test/java/hudson/maven/reporters/SurefireArchiverUnitTest.java
Conflict type: ImplementList
Conflict body: 
~~FSTMerge~~ implements ModelObjectWithContextMenu, ModelObjectWithChildren ##FSTMerge## implements ModelObjectWithContextMenu ##FSTMerge##
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/ui-samples-plugin/src/main/java/jenkins/plugins/ui_samples/NavigationContextMenu.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479922615/fstmerge_var1_5841477330812994306
public ContextMenu doContextMenu(StaplerRequest request, StaplerResponse response) throws Exception {
        if (false) {
            // this implementation is suffice for most ModelObjects. It uses sidepanel.jelly/.groovy to
            // generate the context menu
            return new ContextMenu().from(this,request,response);
        } else {
            // otherwise you can also programatically create them.
            // see the javadoc for various convenience methods to add items
            return new ContextMenu()
                    .add("http://jenkins-ci.org/","Jenkins project")
                    .add("http://www.cloudbees.com/","CloudBees")
                    .add(new MenuItem().withContextRelativeUrl("/").withStockIcon("gear.png").withDisplayName("top page"));
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479922615/fstmerge_base_356582026639787377
public ContextMenu doContextMenu(StaplerRequest request, StaplerResponse response) throws Exception {
        if (false) {
            // this implementation is suffice for most ModelObjects. It uses sidepanel.jelly/.groovy to
            // generate the context menu
            return new ContextMenu().from(this,request,response);
        } else {
            // otherwise you can also programatically create them.
            // see the javadoc for various convenience methods to add items
            return new ContextMenu()
                    .add("http://jenkins-ci.org/","Jenkins project")
                    .add("http://www.cloudbees.com/","CloudBees")
                    .add(request.getContextPath(),"/images/24x24/gear.png","top-page");
        }
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418479922615/fstmerge_var2_2659037343860708420

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1239e_f3bfc/rev_1239e-f3bfc/ui-samples-plugin/src/main/java/jenkins/plugins/ui_samples/NavigationContextMenu.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7bbf3_d61f7/rev_7bbf3-d61f7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4fd15_139c6/rev_4fd15-139c6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_adcd8_bcb49/rev_adcd8-bcb49.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a66bd_7cdb8/rev_a66bd-7cdb8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_80da8_01149/rev_80da8-01149.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e5cff_34ec6/rev_e5cff-34ec6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_04498_a1188/rev_04498-a1188.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418482362882/fstmerge_var1_7815975130612088326
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418482362882/fstmerge_base_1303165400670889889
private <U extends AbstractTestResultAction> U getPreviousResult(Class<U> type) {
        AbstractBuild<?,?> b = owner;
        while(true) {
            b = b.getPreviousBuild();
            if(b==null)
                return null;
            U r = b.getAction(type);
            if(r!=null)
                return r;
        }
    }
=======
private <U extends AbstractTestResultAction> U getPreviousResult(Class<U> type) {
        Run<?,?> b = run;
        while(true) {
            b = b.getPreviousBuild();
            if(b==null)
                return null;
            U r = b.getAction(type);
            if(r!=null)
                return r;
        }
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418482362882/fstmerge_var2_8777928933000372407

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_04498_a1188/rev_04498-a1188/core/src/main/java/hudson/tasks/test/AbstractTestResultAction.java
Conflict type: LineBasedMCFd
Conflict body: 
private CategoryDataset buildDataSet(StaplerRequest req) {
        boolean failureOnly = Boolean.valueOf(req.getParameter("failureOnly"));

        DataSetBuilder<String,NumberOnlyBuildLabel> dsb = new DataSetBuilder<String,NumberOnlyBuildLabel>();

<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418482362915/fstmerge_var1_5808908250330919399
        for (AbstractTestResultAction<?> a = this; a != null; a = a.getPreviousResult(AbstractTestResultAction.class, false)) {
            dsb.add( a.getFailCount(), "failed", new NumberOnlyBuildLabel(a.owner));
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418482362915/fstmerge_base_2343861555702499563
        for( AbstractTestResultAction<?> a=this; a!=null; a=a.getPreviousResult(AbstractTestResultAction.class) ) {
            dsb.add( a.getFailCount(), "failed", new NumberOnlyBuildLabel(a.owner));
=======
        for( AbstractTestResultAction<?> a=this; a!=null; a=a.getPreviousResult(AbstractTestResultAction.class) ) {
            dsb.add( a.getFailCount(), "failed", new NumberOnlyBuildLabel(a.run));
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418482362915/fstmerge_var2_4706917096338850206
            if(!failureOnly) {
                dsb.add( a.getSkipCount(), "skipped", new NumberOnlyBuildLabel(a.run));
                dsb.add( a.getTotalCount()-a.getFailCount()-a.getSkipCount(),"total", new NumberOnlyBuildLabel(a.run));
            }
        }
        return dsb.build();
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_04498_a1188/rev_04498-a1188/core/src/main/java/hudson/tasks/test/AbstractTestResultAction.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6f87e_11ab9/rev_6f87e-11ab9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_823a8_c5776/rev_823a8-c5776.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_90c6c_70667/rev_90c6c-70667.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_37538_51af7/rev_37538-51af7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_16197_986a7/rev_16197-986a7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_16e20_7a43f/rev_16e20-7a43f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_554e0_4d906/rev_554e0-4d906.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d51ab_554e0/rev_d51ab-554e0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9fcaa_6d73a/rev_9fcaa-6d73a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ca3b5_6d73a/rev_ca3b5-6d73a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_debc5_39c12/rev_debc5-39c12.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_978d1_936fb/rev_978d1-936fb.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6fc11_fd772/rev_6fc11-fd772.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_233f5_af5e0/rev_233f5-af5e0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_44532_233f5/rev_44532-233f5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8c038_a9224/rev_8c038-a9224.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418487782938/fstmerge_var1_6027343135190610037
@WithBridgeMethods(value=AbstractProject.class, castRequired=true)
        public Job<?,?> getJob() {
            return Jenkins.getInstance().getItemByFullName(name, Job.class);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418487782938/fstmerge_base_6394964797125990603
public AbstractProject getJob() {
            return Jenkins.getInstance().getItemByFullName(name,AbstractProject.class);
=======
public AbstractProject getJob() { // TODO add variant returning Job
            return Jenkins.getInstance().getItemByFullName(name,AbstractProject.class);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418487782938/fstmerge_var2_411154336645554304
        }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8c038_a9224/rev_8c038-a9224/core/src/main/java/hudson/model/Fingerprint.java
Conflict type: LineBasedMCFd
Conflict body: 
public boolean perform(AbstractBuild<?,?> build, Launcher launcher, BuildListener listener) throws InterruptedException, IOException {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418487799854/fstmerge_var1_1325401022824509695
        if (this instanceof SimpleBuildStep) {
            FilePath workspace = build.getWorkspace();
            if (workspace == null) {
                throw new AbortException("no workspace for " + build);
            }
            ((SimpleBuildStep) this).perform(build, workspace, launcher, listener);
            return true;
        } else if (build instanceof Build) {
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418487799854/fstmerge_base_4499679298778387943
        if (build instanceof Build)
=======
        if (this instanceof SimpleBuildStep) {
            // delegate to the overloaded version defined in SimpleBuildStep
            FilePath workspace = build.getWorkspace();
            if (workspace == null) {
                throw new AbortException("no workspace for " + build);
            }
            ((SimpleBuildStep) this).perform(build, workspace, launcher, listener);
            return true;
        } else if (build instanceof Build) {
            // delegate to the legacy signature deprecated in 1.312
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418487799854/fstmerge_var2_9184879529612071663
            return perform((Build)build,launcher,listener);
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418487799854/fstmerge_base_4499679298778387943
        else
=======
        } else {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418487799854/fstmerge_var2_9184879529612071663
            return true;
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418487799854/fstmerge_base_4499679298778387943
=======
        }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418487799854/fstmerge_var2_9184879529612071663
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8c038_a9224/rev_8c038-a9224/core/src/main/java/hudson/tasks/BuildStepCompatibilityLayer.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418487800816/fstmerge_var1_1185254789741632335
@Override
    public void perform(Run<?,?> build, FilePath ws, Launcher launcher, TaskListener listener) throws InterruptedException {
        if(artifacts.length()==0) {
            listener.error(Messages.ArtifactArchiver_NoIncludes());
            build.setResult(Result.FAILURE);
            return;
        }

        if (onlyIfSuccessful && build.getResult() != null && build.getResult().isWorseThan(Result.UNSTABLE)) {
            listener.getLogger().println(Messages.ArtifactArchiver_SkipBecauseOnlyIfSuccessful());
            return;
        }

        listener.getLogger().println(Messages.ArtifactArchiver_ARCHIVING_ARTIFACTS());
        try {
            String artifacts = build.getEnvironment(listener).expand(this.artifacts);

            Map<String,String> files = ws.act(new ListFiles(artifacts, excludes, defaultExcludes));
            if (!files.isEmpty()) {
                build.pickArtifactManager().archive(ws, launcher, new BuildListenerAdapter(listener), files);
                if (fingerprint) {
                    new Fingerprinter(artifacts).perform(build, ws, launcher, listener);
                }
            } else {
                Result result = build.getResult();
                if (result != null && result.isBetterOrEqualTo(Result.UNSTABLE)) {
                    // If the build failed, don't complain that there was no matching artifact.
                    // The build probably didn't even get to the point where it produces artifacts. 
                    listenerWarnOrError(listener, Messages.ArtifactArchiver_NoMatchFound(artifacts));
                    String msg = null;
                    try {
                    	msg = ws.validateAntFileMask(artifacts);
                    } catch (Exception e) {
                    	listenerWarnOrError(listener, e.getMessage());
                    }
                    if(msg!=null)
                        listenerWarnOrError(listener, msg);
                }
                if (!allowEmptyArchive) {
                	build.setResult(Result.FAILURE);
                }
                return;
            }
        } catch (IOException e) {
            Util.displayIOException(e,listener);
            e.printStackTrace(listener.error(
                    Messages.ArtifactArchiver_FailedToArchive(artifacts)));
            build.setResult(Result.FAILURE);
            return;
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418487800816/fstmerge_base_2501443226166087450
=======
@Override
    public void perform(Run<?,?> build, FilePath ws, Launcher launcher, TaskListener listener) throws InterruptedException {
        if(artifacts.length()==0) {
            listener.error(Messages.ArtifactArchiver_NoIncludes());
            build.setResult(Result.FAILURE);
            return;
        }

        if (onlyIfSuccessful && build.getResult() != null && build.getResult().isWorseThan(Result.UNSTABLE)) {
            listener.getLogger().println(Messages.ArtifactArchiver_SkipBecauseOnlyIfSuccessful());
            return;
        }

        listener.getLogger().println(Messages.ArtifactArchiver_ARCHIVING_ARTIFACTS());
        try {
            String artifacts = build.getEnvironment(listener).expand(this.artifacts);

            Map<String,String> files = ws.act(new ListFiles(artifacts, excludes, defaultExcludes));
            if (!files.isEmpty()) {
                build.pickArtifactManager().archive(ws, launcher, BuildListenerAdapter.wrap(listener), files);
                if (fingerprint) {
                    new Fingerprinter(artifacts).perform(build, ws, launcher, listener);
                }
            } else {
                Result result = build.getResult();
                if (result != null && result.isBetterOrEqualTo(Result.UNSTABLE)) {
                    // If the build failed, don't complain that there was no matching artifact.
                    // The build probably didn't even get to the point where it produces artifacts. 
                    listenerWarnOrError(listener, Messages.ArtifactArchiver_NoMatchFound(artifacts));
                    String msg = null;
                    try {
                    	msg = ws.validateAntFileMask(artifacts);
                    } catch (Exception e) {
                    	listenerWarnOrError(listener, e.getMessage());
                    }
                    if(msg!=null)
                        listenerWarnOrError(listener, msg);
                }
                if (!allowEmptyArchive) {
                	build.setResult(Result.FAILURE);
                }
                return;
            }
        } catch (IOException e) {
            Util.displayIOException(e,listener);
            e.printStackTrace(listener.error(
                    Messages.ArtifactArchiver_FailedToArchive(artifacts)));
            build.setResult(Result.FAILURE);
            return;
        }
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418487800816/fstmerge_var2_6626431733995831666

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8c038_a9224/rev_8c038-a9224/core/src/main/java/hudson/tasks/ArtifactArchiver.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0d825_84231/rev_0d825-84231.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_be852_96d09/rev_be852-96d09.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d8489_1cf73/rev_d8489-1cf73.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_56338_c869c/rev_56338-c869c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_05a26_2ea7e/rev_05a26-2ea7e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_12834_cd33c/rev_12834-cd33c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_15c74_cbae9/rev_15c74-cbae9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b18d1_f2661/rev_b18d1-f2661.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_71a28_de1b3/rev_71a28-de1b3.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418490938937/fstmerge_var1_6342007675360186145
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418490938937/fstmerge_base_5854329549573698120
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418490938937/fstmerge_var2_64603671252318104

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_71a28_de1b3/rev_71a28-de1b3/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418490939393/fstmerge_var1_3412916167333096233
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418490939393/fstmerge_base_7276489714616962851
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418490939393/fstmerge_var2_7335178493990543174

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_71a28_de1b3/rev_71a28-de1b3/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c45d6_1b9cc/rev_c45d6-1b9cc.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f0a29_a623c/rev_f0a29-a623c.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418491655657/fstmerge_var1_7309545815296192983
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418491655657/fstmerge_base_416168117814923970
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418491655657/fstmerge_var2_3551185750457390718

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f0a29_a623c/rev_f0a29-a623c/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418491656123/fstmerge_var1_5390744597729312541
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418491656123/fstmerge_base_1867935928441224396
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418491656123/fstmerge_var2_5432150297447323822

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f0a29_a623c/rev_f0a29-a623c/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5b805_2852a/rev_5b805-2852a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4d104_aa7f0/rev_4d104-aa7f0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9379d_17478/rev_9379d-17478.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_97366_fe3b3/rev_97366-fe3b3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_52c28_c0746/rev_52c28-c0746.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_33b01_3f4eb/rev_33b01-3f4eb.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8b234_9dec8/rev_8b234-9dec8.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418494131570/fstmerge_var1_3829625610265546907
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418494131570/fstmerge_base_3990829206338248019
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418494131570/fstmerge_var2_3726185235886880672

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8b234_9dec8/rev_8b234-9dec8/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418494132003/fstmerge_var1_9086269153448887154
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418494132003/fstmerge_base_9127658821491152011
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418494132003/fstmerge_var2_7716487105028704371

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8b234_9dec8/rev_8b234-9dec8/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e9235_a1979/rev_e9235-a1979.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_78d4b_990a8/rev_78d4b-990a8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7f401_4bc10/rev_7f401-4bc10.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f8638_c4964/rev_f8638-c4964.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3b9ac_2c590/rev_3b9ac-2c590.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c86e1_f5a24/rev_c86e1-f5a24.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3b556_598ae/rev_3b556-598ae.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_14358_8cbd2/rev_14358-8cbd2.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_bf759_9caf1/rev_bf759-9caf1.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a74fb_8fc60/rev_a74fb-8fc60.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_680c5_f715f/rev_680c5-f715f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_67ac4_8bb88/rev_67ac4-8bb88.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5e649_71600/rev_5e649-71600.revisions

=========================================================
=========================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2b589_67b3e/rev_2b589-67b3e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_db8cd_c7cf2/rev_db8cd-c7cf2.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c9363_74723/rev_c9363-74723.revisions
Conflict type: LineBasedMCFd
Conflict body: 
public void updateByXml(Source source) throws IOException {
        checkPermission(CONFIGURE);
        XmlFile configXmlFile = getConfigFile();
        AtomicFileWriter out = new AtomicFileWriter(configXmlFile.getFile());
        try {
            try {
                // this allows us to use UTF-8 for storing data,
                // plus it checks any well-formedness issue in the submitted
                // data
                Transformer t = TransformerFactory.newInstance()
                        .newTransformer();
                t.transform(source,
                        new StreamResult(out));
                out.close();
            } catch (TransformerException e) {
                throw new IOException("Failed to persist config.xml", e);
            }

            // try to reflect the changes by reloading
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418511226788/fstmerge_var1_4390651999623222797
            Object o = new XmlFile(Items.XSTREAM, out.getTemporaryFile()).unmarshal(this);
            if (o!=this) {
                // ensure that we've got the same job type. extending this code to support updating
                // to different job type requires destroying & creating a new job type
                throw new IOException("Expecting "+this.getClass()+" but got "+o.getClass()+" instead");
            }

            Items.updatingByXml.set(true);
            try {
                onLoad(getParent(), getRootDir().getName());
            } finally {
                Items.updatingByXml.set(false);
            }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418511226788/fstmerge_base_2532067583779441054
            new XmlFile(Items.XSTREAM, out.getTemporaryFile()).unmarshal(this);
            Items.updatingByXml.set(true);
            try {
                onLoad(getParent(), getRootDir().getName());
            } finally {
                Items.updatingByXml.set(false);
            }
=======
            new XmlFile(Items.XSTREAM, out.getTemporaryFile()).unmarshal(this);
            Items.whileUpdatingByXml(new Callable<Void,IOException>() {
                @Override public Void call() throws IOException {
                    onLoad(getParent(), getRootDir().getName());
                    return null;
                }
            });
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418511226788/fstmerge_var2_6138410090666848382
            Jenkins.getInstance().rebuildDependencyGraphAsync();

            // if everything went well, commit this new version
            out.commit();
            SaveableListener.fireOnChange(this, getConfigFile());
        } finally {
            out.abort(); // don't leave anything behind
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c9363_74723/rev_c9363-74723/core/src/main/java/hudson/model/AbstractItem.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418511248490/fstmerge_var1_1317339444280245919
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418511248490/fstmerge_base_4018115083938089896
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418511248490/fstmerge_var2_8726827583211298033

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c9363_74723/rev_c9363-74723/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418511248956/fstmerge_var1_5501913339635475907
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418511248956/fstmerge_base_9090439347364220354
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418511248956/fstmerge_var2_7048908818245700634

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c9363_74723/rev_c9363-74723/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e1d23_148ad/rev_e1d23-148ad.revisions
Conflict type: ModifierList
Conflict body: 
~~FSTMerge~~ ##FSTMerge## protected static final ##FSTMerge## @MasterToSlave
    protected static final
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e1d23_148ad/rev_e1d23-148ad/maven-plugin/src/main/java/hudson/maven/Maven3ProcessFactory.java
Conflict type: ModifierList
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public abstract ##FSTMerge## @MasterToSlave
public abstract
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e1d23_148ad/rev_e1d23-148ad/maven-plugin/src/main/java/hudson/maven/AbstractMavenBuilder.java
Conflict type: ModifierList
Conflict body: 
~~FSTMerge~~ ##FSTMerge## protected static final ##FSTMerge## @SlaveToMaster
        protected static final
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e1d23_148ad/rev_e1d23-148ad/maven-plugin/src/main/java/hudson/maven/MavenBuildProxy.java
Conflict type: ModifierList
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## @MasterToSlave
public
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e1d23_148ad/rev_e1d23-148ad/maven-plugin/src/main/java/hudson/maven/MavenVersionCallable.java
Conflict type: ModifierList
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final ##FSTMerge## @MasterToSlave
    private static final
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e1d23_148ad/rev_e1d23-148ad/maven-plugin/src/main/java/hudson/maven/RedeployPublisher.java
Conflict type: ModifierList
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final ##FSTMerge## @MasterToSlave
    private static final
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e1d23_148ad/rev_e1d23-148ad/maven-plugin/src/main/java/hudson/maven/MavenProcessFactory.java
Conflict type: ModifierList
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final ##FSTMerge## @MasterToSlave
    private static final
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e1d23_148ad/rev_e1d23-148ad/maven-plugin/src/main/java/hudson/maven/MavenProcessFactory.java
Conflict type: ModifierList
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static ##FSTMerge## @MasterToSlave
    private static
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e1d23_148ad/rev_e1d23-148ad/maven-plugin/src/main/java/hudson/maven/ProcessCache.java
Conflict type: ModifierList
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static ##FSTMerge## @MasterToSlave
    private static
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e1d23_148ad/rev_e1d23-148ad/maven-plugin/src/main/java/hudson/maven/ProcessCache.java
Conflict type: ModifierList
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final ##FSTMerge## @MasterToSlave
    private static final
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e1d23_148ad/rev_e1d23-148ad/maven-plugin/src/main/java/hudson/maven/Maven31ProcessFactory.java
Conflict type: ModifierList
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static ##FSTMerge## @MasterToSlave
    private static
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e1d23_148ad/rev_e1d23-148ad/maven-plugin/src/main/java/hudson/maven/SplittableBuildListener.java
Conflict type: ModifierList
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final ##FSTMerge## @MasterToSlave
    private static final
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e1d23_148ad/rev_e1d23-148ad/maven-plugin/src/main/java/hudson/maven/AbstractMavenProcessFactory.java
Conflict type: ModifierList
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final ##FSTMerge## @MasterToSlave
    private static final
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e1d23_148ad/rev_e1d23-148ad/maven-plugin/src/main/java/hudson/maven/AbstractMavenProcessFactory.java
Conflict type: ModifierList
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final ##FSTMerge## @MasterToSlave
    private static final
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e1d23_148ad/rev_e1d23-148ad/maven-plugin/src/main/java/hudson/maven/AbstractMavenProcessFactory.java
Conflict type: ModifierList
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final ##FSTMerge## @MasterToSlave @SlaveToMaster
    private static final
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e1d23_148ad/rev_e1d23-148ad/maven-plugin/src/main/java/hudson/maven/AbstractMavenProcessFactory.java
Conflict type: ModifierList
Conflict body: 
~~FSTMerge~~ ##FSTMerge## protected static final ##FSTMerge## @MasterToSlave @SlaveToMaster
    protected static final
File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e1d23_148ad/rev_e1d23-148ad/maven-plugin/src/main/java/hudson/maven/AbstractMavenProcessFactory.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e1d23_8aafc/rev_e1d23-8aafc.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418511891717/fstmerge_var1_4850995954232447735
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418511891717/fstmerge_base_2485411207220478637
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418511891717/fstmerge_var2_7992307352662682420

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e1d23_8aafc/rev_e1d23-8aafc/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418511892208/fstmerge_var1_5920899341379342748
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418511892208/fstmerge_base_4861564712066327090
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418511892208/fstmerge_var2_5525481735941910657

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e1d23_8aafc/rev_e1d23-8aafc/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_38563_ee941/rev_38563-ee941.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418512212158/fstmerge_var1_1127903654045189612
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418512212158/fstmerge_base_8936808205614802276
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418512212158/fstmerge_var2_4078895751753356521

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_38563_ee941/rev_38563-ee941/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418512212606/fstmerge_var1_3005113754883364287
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418512212606/fstmerge_base_5006300424401754699
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418512212606/fstmerge_var2_5140254886942783974

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_38563_ee941/rev_38563-ee941/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_38563_7211c/rev_38563-7211c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c0445_30f37/rev_c0445-30f37.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418512849812/fstmerge_var1_5791660308868451490
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418512849812/fstmerge_base_6347968767567702826
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418512849812/fstmerge_var2_5890788595840797682

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c0445_30f37/rev_c0445-30f37/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418512850263/fstmerge_var1_3377878652437570768
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418512850263/fstmerge_base_7424853992917826326
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418512850263/fstmerge_var2_3239824140623325760

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c0445_30f37/rev_c0445-30f37/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c0445_ed624/rev_c0445-ed624.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ae839_09083/rev_ae839-09083.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_47c25_c8074/rev_47c25-c8074.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6e1de_678e8/rev_6e1de-678e8.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418514091480/fstmerge_var1_6519767877436297098
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418514091480/fstmerge_base_7340224949854669821
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418514091480/fstmerge_var2_7033999827356538629

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6e1de_678e8/rev_6e1de-678e8/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418514091852/fstmerge_var1_7685881213462722979
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418514091852/fstmerge_base_3047356452643734659
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418514091852/fstmerge_var2_8231836268486285063

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6e1de_678e8/rev_6e1de-678e8/core/src/main/java/hudson/matrix/Axis.java
Conflict type: LineBasedMCFd
Conflict body: 
public Page goTo(String relative, String expectedContentType) throws IOException, SAXException {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418514098554/fstmerge_var1_5153860101765588734
            Page p;
            try {
                p = super.getPage(getContextPath() + relative);
            } catch (IOException x) {
                if (x.getCause() != null) {
                    x.getCause().printStackTrace();
                }
                throw x;
            }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418514098554/fstmerge_base_8631572405116506904
            Page p = super.getPage(getContextPath() + relative);
=======
            while (relative.startsWith("/")) relative = relative.substring(1);
            Page p;
            try {
                p = super.getPage(getContextPath() + relative);
            } catch (IOException x) {
                if (x.getCause() != null) {
                    x.getCause().printStackTrace();
                }
                throw x;
            }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418514098554/fstmerge_var2_1745231397941956877
            assertEquals(expectedContentType,p.getWebResponse().getContentType());
            return p;
        }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6e1de_678e8/rev_6e1de-678e8/test/src/main/java/org/jvnet/hudson/test/HudsonTestCase.java
Conflict type: LineBasedMCFd
Conflict body: 
public Page goTo(String relative, @CheckForNull String expectedContentType) throws IOException, SAXException {
            assert !relative.startsWith("/");
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418514099935/fstmerge_var1_3944096632865105025
            Page p;
            try {
                p = super.getPage(getContextPath() + relative);
            } catch (IOException x) {
                Throwable cause = x.getCause();
                if (cause instanceof SocketTimeoutException) {
                    throw new AssumptionViolatedException("failed to get " + relative + " due to read timeout", cause);
                } else if (cause != null) {
                    cause.printStackTrace(); // SUREFIRE-1067 workaround
                }
                throw x;
            }
            assertThat(p.getWebResponse().getContentType(), is(expectedContentType));
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418514099935/fstmerge_base_8632445931699790917
            Page p = super.getPage(getContextPath() + relative);
            assertThat(p.getWebResponse().getContentType(), is(expectedContentType));
=======
            Page p;
            try {
                p = super.getPage(getContextPath() + relative);
            } catch (IOException x) {
                Throwable cause = x.getCause();
                if (cause instanceof SocketTimeoutException) {
                    throw new AssumptionViolatedException("failed to get " + relative + " due to read timeout", cause);
                } else if (cause != null) {
                    cause.printStackTrace(); // SUREFIRE-1067 workaround
                }
                throw x;
            }
            if (expectedContentType != null) {
                assertThat(p.getWebResponse().getContentType(), is(expectedContentType));
            }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418514099935/fstmerge_var2_4369638956834056346
            return p;
        }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6e1de_678e8/rev_6e1de-678e8/test/src/main/java/org/jvnet/hudson/test/JenkinsRule.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_6e1de_f7840/rev_6e1de-f7840.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4a328_cd8c8/rev_4a328-cd8c8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cb9d2_9d4d0/rev_cb9d2-9d4d0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_eb191_041f9/rev_eb191-041f9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_be76d_c121e/rev_be76d-c121e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1d290_53958/rev_1d290-53958.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418515924830/fstmerge_var1_4173439196622027650
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418515924830/fstmerge_base_7079310897308072135
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418515924830/fstmerge_var2_977083112286335553

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1d290_53958/rev_1d290-53958/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418515925300/fstmerge_var1_3912544796016973020
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418515925300/fstmerge_base_2114610333135660223
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418515925300/fstmerge_var2_4484172228575681620

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1d290_53958/rev_1d290-53958/core/src/main/java/hudson/matrix/Axis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418515935041/fstmerge_var1_8751987597741582985
@Test public void updateDirectlyWithHtml() throws Exception {
        UpdateSite us = new UpdateSite("default", new URL(baseUrl, "update-center.json.html").toExternalForm());
        assertNull(us.getPlugin("AdaptivePlugin"));
        assertEquals(FormValidation.ok(), us.updateDirectly(false).get());
        assertNotNull(us.getPlugin("AdaptivePlugin"));
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418515935041/fstmerge_base_8351919151461467918
@Test public void updateDirectlyWithHtml() throws Exception {
        UpdateSite us = new UpdateSite("default", new URL(baseUrl, "update-center.json.html").toExternalForm());
        assertNull(us.getPlugin("AdaptivePlugin"));
        assertEquals(FormValidation.ok(), us.updateDirectly(true).get());
        assertNotNull(us.getPlugin("AdaptivePlugin"));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418515935041/fstmerge_var2_3568933633074812233

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1d290_53958/rev_1d290-53958/test/src/test/java/hudson/model/UpdateSiteTest.java
Conflict type: LineBasedMCFd
Conflict body: 
@SuppressWarnings("unchecked")
    @RandomlyFails("for p3.upstreamProjects expected:<[hudson.model.FreeStyleProject@590e5b8[test0]]> but was:<[]>")
    @Bug(18417)
    @Test
    public void fingerprintCleanup() throws Exception {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418515936366/fstmerge_var1_5117073936061010186
        Assume.assumeFalse("for p3.upstreamProjects expected:<[hudson.model.FreeStyleProject@590e5b8[test0]]> but was:<[]>", System.getenv("JOB_URL") != null);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418515936366/fstmerge_base_2294822513640043200
        Assume.assumeFalse("for p3.upstreamProjects expected:<[hudson.model.FreeStyleProject@590e5b8[test0]]> but was:<[]>", "https://jenkins.ci.cloudbees.com/job/core/job/jenkins_main_trunk/".equals(System.getenv("JOB_URL")));
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418515936366/fstmerge_var2_1593804581836184892
        // file names shouldn't matter
        FreeStyleProject p1 = createFreeStyleProjectWithFingerprints(singleContents, singleFiles);
        FreeStyleProject p2 = createFreeStyleProjectWithFingerprints(singleContents, singleFiles2);
        FreeStyleProject p3 = createFreeStyleProjectWithFingerprints(singleContents, singleFiles);

        j.assertBuildStatusSuccess(p1.scheduleBuild2(0));
        j.assertBuildStatusSuccess(p2.scheduleBuild2(0));
        j.assertBuildStatusSuccess(p3.scheduleBuild2(0));

        Fingerprint f = j.jenkins._getFingerprint(Util.getDigestOf(singleContents[0]+"\n"));
        assertEquals(3,f.getUsages().size());

        j.jenkins.rebuildDependencyGraph();

        assertEquals(Arrays.asList(p1), p2.getUpstreamProjects());
        assertEquals(Arrays.asList(p1), p3.getUpstreamProjects());
        assertEquals(new HashSet(Arrays.asList(p2,p3)), new HashSet(p1.getDownstreamProjects()));

        // discard the p3 records
        p3.delete();
        new FingerprintCleanupThread().execute(StreamTaskListener.fromStdout());

        j.jenkins.rebuildDependencyGraph();

        // records for p3 should have been deleted now
        assertEquals(2,f.getUsages().size());
        assertEquals(Arrays.asList(p1), p2.getUpstreamProjects());
        assertEquals(Arrays.asList(p2), p1.getDownstreamProjects());


        // do a new build in p2 #2 that points to a separate fingerprints
        p2.getBuildersList().clear();
        p2.getPublishersList().clear();
        addFingerprinterToProject(p2,singleContents2,singleFiles2);
        j.assertBuildStatusSuccess(p2.scheduleBuild2(0));

        // another garbage collection that gets rid of p2 records from the fingerprint
        p2.getBuildByNumber(1).delete();
        new FingerprintCleanupThread().execute(StreamTaskListener.fromStdout());

        assertEquals(1,f.getUsages().size());
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1d290_53958/rev_1d290-53958/test/src/test/java/hudson/tasks/FingerprinterTest.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418515936727/fstmerge_var1_7130949796651093747
@LocalData
   @Test public void slave() throws Exception {
        Assume.assumeFalse("TimeoutException from basic", System.getenv("JOB_URL") != null);
        DumbSlave s = j.createOnlineSlave();
        project.setAssignedLabel(s.getSelfLabel());

        FilePath src = new FilePath(j.jenkins.getRootPath(), "jobs/junit/workspace/");
        assertNotNull(src);
        FilePath dest = s.getWorkspaceFor(project);
        assertNotNull(dest);
        src.copyRecursiveTo("*.xml", dest);
        
        basic();
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418515936727/fstmerge_base_715131506022846903
@LocalData
   @Test public void slave() throws Exception {
        Assume.assumeFalse("TimeoutException from basic", "https://jenkins.ci.cloudbees.com/job/core/job/jenkins_main_trunk/".equals(System.getenv("JOB_URL")));
        DumbSlave s = j.createOnlineSlave();
        project.setAssignedLabel(s.getSelfLabel());

        FilePath src = new FilePath(j.jenkins.getRootPath(), "jobs/junit/workspace/");
        assertNotNull(src);
        FilePath dest = s.getWorkspaceFor(project);
        assertNotNull(dest);
        src.copyRecursiveTo("*.xml", dest);
        
        basic();
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418515936727/fstmerge_var2_6977221907011374149

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1d290_53958/rev_1d290-53958/test/src/test/java/hudson/tasks/junit/JUnitResultArchiverTest.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1d290_735ba/rev_1d290-735ba.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_14b89_d000c/rev_14b89-d000c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8975b_b2bb5/rev_8975b-b2bb5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_5612b_801b8/rev_5612b-801b8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3ba17_7af7f/rev_3ba17-7af7f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_19da0_c1e8b/rev_19da0-c1e8b.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f96f4_e1c3d/rev_f96f4-e1c3d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0a760_99020/rev_0a760-99020.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4f736_23f3e/rev_4f736-23f3e.revisions
Conflict type: LineBasedMCFd
Conflict body: 
private void unzip(File dir, File zipFile) throws IOException {
        dir = dir.getAbsoluteFile();    // without absolutization, getParentFile below seems to fail
        ZipFile zip = new ZipFile(zipFile);
        @SuppressWarnings("unchecked")
        Enumeration<ZipEntry> entries = zip.getEntries();

        try {
            while (entries.hasMoreElements()) {
                ZipEntry e = entries.nextElement();
                File f = new File(dir, e.getName());
                if (e.isDirectory()) {
                    mkdirs(f);
                } else {
                    File p = f.getParentFile();
                    if (p != null) {
                        mkdirs(p);
                    }
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518651939/fstmerge_var1_366612921777217002
                    IOUtils.copy(zip.getInputStream(e), writing(f));
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518651939/fstmerge_base_1658343397464821997
                    IOUtils.copy(zip.getInputStream(e), f);
=======
                    InputStream input = zip.getInputStream(e);
                    try {
                        IOUtils.copy(input, f);
                    } finally {
                        input.close();
                    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518651939/fstmerge_var2_8217040781840414544
                    try {
                        FilePath target = new FilePath(f);
                        int mode = e.getUnixMode();
                        if (mode!=0)    // Ant returns 0 if the archive doesn't record the access mode
                            target.chmod(mode);
                    } catch (InterruptedException ex) {
                        LOGGER.log(Level.WARNING, "unable to set permissions", ex);
                    }
                    f.setLastModified(e.getTime());
                }
            }
        } finally {
            zip.close();
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4f736_23f3e/rev_4f736-23f3e/core/src/main/java/hudson/FilePath.java
Conflict type: LineBasedMCFd
Conflict body: 
public void moveAllChildrenTo(final FilePath target) throws IOException, InterruptedException {
        if(this.channel != target.channel) {
            throw new IOException("pullUpTo target must be on the same host");
        }
        act(new SecureFileCallable<Void>() {
            private static final long serialVersionUID = 1L;
            public Void invoke(File f, VirtualChannel channel) throws IOException {
                // JENKINS-16846: if f.getName() is the same as one of the files/directories in f,
                // then the rename op will fail
                File tmp = new File(f.getAbsolutePath()+".__rename");
                if (!f.renameTo(tmp))
                    throw new IOException("Failed to rename "+f+" to "+tmp);

                File t = new File(target.getRemote());
                
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518652239/fstmerge_var1_7749174294517659964
                for(File child : reading(f).listFiles()) {
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518652239/fstmerge_base_1954299500567399886
                for(File child : f.listFiles()) {
=======
                for(File child : tmp.listFiles()) {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518652239/fstmerge_var2_3100203264281032990
                    File target = new File(t, child.getName());
                    if(!stating(child).renameTo(creating(target)))
                        throw new IOException("Failed to rename "+child+" to "+target);
                }
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518652239/fstmerge_var1_7749174294517659964
                deleting(f).delete();
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518652239/fstmerge_base_1954299500567399886
                f.delete();
=======
                tmp.delete();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518652239/fstmerge_var2_3100203264281032990
                return null;
            }
        });
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4f736_23f3e/rev_4f736-23f3e/core/src/main/java/hudson/FilePath.java
Conflict type: LineBasedMCFd
Conflict body: 
public int copyRecursiveTo(final DirScanner scanner, final FilePath target, final String description) throws IOException, InterruptedException {
        if(this.channel==target.channel) {
            // local to local copy.
            return act(new SecureFileCallable<Integer>() {
                private static final long serialVersionUID = 1L;
                public Integer invoke(File base, VirtualChannel channel) throws IOException {
                    if(!base.exists())  return 0;
                    assert target.channel==null;
                    final File dest = new File(target.remote);
                    final AtomicInteger count = new AtomicInteger();
                    scanner.scan(base, reading(new FileVisitor() {
                        @Override
                        public void visit(File f, String relativePath) throws IOException {
                            if (f.isFile()) {
                                File target = new File(dest, relativePath);
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518652291/fstmerge_var1_9045044161783798666
                                mkdirs(target.getParentFile());
                                Util.copyFile(f, writing(target));
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518652291/fstmerge_base_1144054303754831976
                                target.getParentFile().mkdirs();
                                Util.copyFile(f, target);
=======
                                IOUtils.mkdirs(target.getParentFile());
                                Util.copyFile(f, target);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518652291/fstmerge_var2_3832685053121329299
                                count.incrementAndGet();
                            }
                        }

                        @Override
                        public boolean understandsSymlink() {
                            return true;
                        }

                        @Override
                        public void visitSymlink(File link, String target, String relativePath) throws IOException {
                            try {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518652291/fstmerge_var1_9045044161783798666
                                writing(new File(dest, target));
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518652291/fstmerge_base_1144054303754831976
=======
                                IOUtils.mkdirs(new File(dest, relativePath).getParentFile());
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518652291/fstmerge_var2_3832685053121329299
                                Util.createSymlink(dest, target, relativePath, TaskListener.NULL);
                            } catch (InterruptedException x) {
                                throw (IOException) new IOException(x.toString()).initCause(x);
                            }
                            count.incrementAndGet();
                        }
                    }));
                    return count.get();
                }
            });
        } else
        if(this.channel==null) {
            // local -> remote copy
            final Pipe pipe = Pipe.createLocalToRemote();

            Future<Void> future = target.actAsync(new SecureFileCallable<Void>() {
                private static final long serialVersionUID = 1L;
                public Void invoke(File f, VirtualChannel channel) throws IOException {
                    try {
                        readFromTar(remote + '/' + description, f,TarCompression.GZIP.extract(pipe.getIn()));
                        return null;
                    } finally {
                        pipe.getIn().close();
                    }
                }
            });
            Future<Integer> future2 = actAsync(new SecureFileCallable<Integer>() {
                private static final long serialVersionUID = 1L;
                @Override public Integer invoke(File f, VirtualChannel channel) throws IOException, InterruptedException {
                    return writeToTar(new File(remote), scanner, TarCompression.GZIP.compress(pipe.getOut()));
                }
            });
            try {
                // JENKINS-9540 in case the reading side failed, report that error first
                future.get();
                return future2.get();
            } catch (ExecutionException e) {
                throw new IOException(e);
            }
        } else {
            // remote -> local copy
            final Pipe pipe = Pipe.createRemoteToLocal();

            Future<Integer> future = actAsync(new SecureFileCallable<Integer>() {
                private static final long serialVersionUID = 1L;
                public Integer invoke(File f, VirtualChannel channel) throws IOException {
                    try {
                        return writeToTar(f, scanner, TarCompression.GZIP.compress(pipe.getOut()));
                    } finally {
                        pipe.getOut().close();
                    }
                }
            });
            try {
                readFromTar(remote + '/' + description,new File(target.remote),TarCompression.GZIP.extract(pipe.getIn()));
            } catch (IOException e) {// BuildException or IOException
                try {
                    future.get(3,TimeUnit.SECONDS);
                    throw e;    // the remote side completed successfully, so the error must be local
                } catch (ExecutionException x) {
                    // report both errors
                    throw new IOException(Functions.printThrowable(e),x);
                } catch (TimeoutException _) {
                    // remote is hanging
                    throw e;
                }
            }
            try {
                return future.get();
            } catch (ExecutionException e) {
                throw new IOException(e);
            }
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4f736_23f3e/rev_4f736-23f3e/core/src/main/java/hudson/FilePath.java
Conflict type: LineBasedMCFd
Conflict body: 
public ClientAuthenticationCache(Channel channel) throws IOException, InterruptedException {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518657169/fstmerge_var1_3813652778669726272
        store = (channel==null ? MasterComputer.localChannel :  channel).call(new MasterToSlaveCallable<FilePath, IOException>() {
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518657169/fstmerge_base_471516622384735325
        store = (channel==null ? MasterComputer.localChannel :  channel).call(new Callable<FilePath, IOException>() {
=======
        store = (channel==null ? FilePath.localChannel :  channel).call(new Callable<FilePath, IOException>() {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518657169/fstmerge_var2_1426578209176740288
            public FilePath call() throws IOException {
                File home = new File(System.getProperty("user.home"));
                File hudsonHome = new File(home, ".hudson");
                if (hudsonHome.exists()) {
                    return new FilePath(new File(hudsonHome, "cli-credentials"));
                }
                return new FilePath(new File(home, ".jenkins/cli-credentials"));
            }
        });
        if (store.exists()) {
            props.load(store.read());
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4f736_23f3e/rev_4f736-23f3e/core/src/main/java/hudson/cli/ClientAuthenticationCache.java
Conflict type: LineBasedMCFd
Conflict body: 
public static FilePath getHeapDump(VirtualChannel channel) throws IOException, InterruptedException {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518673908/fstmerge_var1_2712313184079832574
        return channel.call(new GetHeapDump());
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518673908/fstmerge_base_2274619228766766251
        return channel.call(new Callable<FilePath, IOException>() {
            public FilePath call() throws IOException {
                final File hprof = File.createTempFile("hudson-heapdump", "hprof");
                hprof.delete();
                try {
                    MBeanServer server = ManagementFactory.getPlatformMBeanServer();
                    server.invoke(new ObjectName("com.sun.management:type=HotSpotDiagnostic"), "dumpHeap",
                            new Object[]{hprof.getAbsolutePath(), true}, new String[]{String.class.getName(), boolean.class.getName()});

                    return new FilePath(hprof);
                } catch (JMException e) {
                    throw new IOException2(e);
                }
            }

            private static final long serialVersionUID = 1L;
        });
=======
        return channel.call(new Callable<FilePath, IOException>() {
            public FilePath call() throws IOException {
                final File hprof = File.createTempFile("hudson-heapdump", "hprof");
                hprof.delete();
                try {
                    MBeanServer server = ManagementFactory.getPlatformMBeanServer();
                    server.invoke(new ObjectName("com.sun.management:type=HotSpotDiagnostic"), "dumpHeap",
                            new Object[]{hprof.getAbsolutePath(), true}, new String[]{String.class.getName(), boolean.class.getName()});

                    return new FilePath(hprof);
                } catch (JMException e) {
                    throw new IOException(e);
                }
            }

            private static final long serialVersionUID = 1L;
        });
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518673908/fstmerge_var2_6412243145328363794
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4f736_23f3e/rev_4f736-23f3e/core/src/main/java/hudson/util/RemotingDiagnostics.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518678415/fstmerge_var1_5634515439154525173
private void record(AbstractBuild<?,?> build, BuildListener listener, Map<String,String> record, final String targets) throws IOException, InterruptedException {
        final class Record implements Serializable {
            final boolean produced;
            final String relativePath;
            final String fileName;
            final String md5sum;

            public Record(boolean produced, String relativePath, String fileName, String md5sum) {
                this.produced = produced;
                this.relativePath = relativePath;
                this.fileName = fileName;
                this.md5sum = md5sum;
            }

            Fingerprint addRecord(AbstractBuild build) throws IOException {
                FingerprintMap map = Jenkins.getInstance().getFingerprintMap();
                return map.getOrCreate(produced?build:null, fileName, md5sum);
            }

            private static final long serialVersionUID = 1L;
        }

        final long buildTimestamp = build.getTimeInMillis();

        FilePath ws = build.getWorkspace();
        if(ws==null) {
            listener.error(Messages.Fingerprinter_NoWorkspace());
            build.setResult(Result.FAILURE);
            return;
        }

        List<Record> records = ws.act(new MasterToSlaveFileCallable<List<Record>>() {
            public List<Record> invoke(File baseDir, VirtualChannel channel) throws IOException {
                List<Record> results = new ArrayList<Record>();

                FileSet src = Util.createFileSet(baseDir,targets);

                DirectoryScanner ds = src.getDirectoryScanner();
                for( String f : ds.getIncludedFiles() ) {
                    File file = new File(baseDir,f);

                    // consider the file to be produced by this build only if the timestamp
                    // is newer than when the build has started.
                    // 2000ms is an error margin since since VFAT only retains timestamp at 2sec precision
                    boolean produced = buildTimestamp <= file.lastModified()+2000;

                    try {
                        results.add(new Record(produced,f,file.getName(),new FilePath(file).digest()));
                    } catch (IOException e) {
                        throw new IOException2(Messages.Fingerprinter_DigestFailed(file),e);
                    } catch (InterruptedException e) {
                        throw new IOException2(Messages.Fingerprinter_Aborted(),e);
                    }
                }

                return results;
            }
        });

        for (Record r : records) {
            Fingerprint fp = r.addRecord(build);
            if(fp==null) {
                listener.error(Messages.Fingerprinter_FailedFor(r.relativePath));
                continue;
            }
            fp.add(build);
            record.put(r.relativePath,fp.getHashString());
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518678415/fstmerge_base_8325905166047652316
private void record(AbstractBuild<?,?> build, BuildListener listener, Map<String,String> record, final String targets) throws IOException, InterruptedException {
        final class Record implements Serializable {
            final boolean produced;
            final String relativePath;
            final String fileName;
            final String md5sum;

            public Record(boolean produced, String relativePath, String fileName, String md5sum) {
                this.produced = produced;
                this.relativePath = relativePath;
                this.fileName = fileName;
                this.md5sum = md5sum;
            }

            Fingerprint addRecord(AbstractBuild build) throws IOException {
                FingerprintMap map = Jenkins.getInstance().getFingerprintMap();
                return map.getOrCreate(produced?build:null, fileName, md5sum);
            }

            private static final long serialVersionUID = 1L;
        }

        final long buildTimestamp = build.getTimeInMillis();

        FilePath ws = build.getWorkspace();
        if(ws==null) {
            listener.error(Messages.Fingerprinter_NoWorkspace());
            build.setResult(Result.FAILURE);
            return;
        }

        List<Record> records = ws.act(new FileCallable<List<Record>>() {
            public List<Record> invoke(File baseDir, VirtualChannel channel) throws IOException {
                List<Record> results = new ArrayList<Record>();

                FileSet src = Util.createFileSet(baseDir,targets);

                DirectoryScanner ds = src.getDirectoryScanner();
                for( String f : ds.getIncludedFiles() ) {
                    File file = new File(baseDir,f);

                    // consider the file to be produced by this build only if the timestamp
                    // is newer than when the build has started.
                    // 2000ms is an error margin since since VFAT only retains timestamp at 2sec precision
                    boolean produced = buildTimestamp <= file.lastModified()+2000;

                    try {
                        results.add(new Record(produced,f,file.getName(),new FilePath(file).digest()));
                    } catch (IOException e) {
                        throw new IOException2(Messages.Fingerprinter_DigestFailed(file),e);
                    } catch (InterruptedException e) {
                        throw new IOException2(Messages.Fingerprinter_Aborted(),e);
                    }
                }

                return results;
            }
        });

        for (Record r : records) {
            Fingerprint fp = r.addRecord(build);
            if(fp==null) {
                listener.error(Messages.Fingerprinter_FailedFor(r.relativePath));
                continue;
            }
            fp.add(build);
            record.put(r.relativePath,fp.getHashString());
        }
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518678415/fstmerge_var2_9119729213635440862

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4f736_23f3e/rev_4f736-23f3e/core/src/main/java/hudson/tasks/Fingerprinter.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518680746/fstmerge_var1_1064384529836922230
@Override
    public TestResult parse(final String testResultLocations, final AbstractBuild build, final Launcher launcher, final TaskListener listener) throws InterruptedException, IOException {
        return build.getWorkspace().act(new MasterToSlaveFileCallable<TestResult>() {
            final boolean ignoreTimestampCheck = IGNORE_TIMESTAMP_CHECK; // so that the property can be set on the master
            final long buildTime = build.getTimestamp().getTimeInMillis();
            final long nowMaster = System.currentTimeMillis();

            public TestResult invoke(File dir, VirtualChannel channel) throws IOException, InterruptedException {
                final long nowSlave = System.currentTimeMillis();

                // files older than this timestamp is considered stale
                long localBuildTime = buildTime + (nowSlave - nowMaster);

                FilePath[] paths = new FilePath(dir).list(testResultLocations);
                if (paths.length==0)
                    throw new AbortException("No test reports that matches "+testResultLocations+" found. Configuration error?");

                // since dir is local, paths all point to the local files
                List<File> files = new ArrayList<File>(paths.length);
                for (FilePath path : paths) {
                    File report = new File(path.getRemote());
                    if (ignoreTimestampCheck || localBuildTime - 3000 /*error margin*/ < report.lastModified()) {
                        // this file is created during this build
                        files.add(report);
                    }
                }

                if (files.isEmpty()) {
                    // none of the files were new
                    throw new AbortException(
                        String.format(
                        "Test reports were found but none of them are new. Did tests run? %n"+
                        "For example, %s is %s old%n", paths[0].getRemote(),
                        Util.getTimeSpanString(localBuildTime-paths[0].lastModified())));
                }

                return parse(files,launcher,listener);
            }
        });
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518680746/fstmerge_base_6793002759388614054
@Override
    public TestResult parse(final String testResultLocations, final AbstractBuild build, final Launcher launcher, final TaskListener listener) throws InterruptedException, IOException {
        return build.getWorkspace().act(new FileCallable<TestResult>() {
            final boolean ignoreTimestampCheck = IGNORE_TIMESTAMP_CHECK; // so that the property can be set on the master
            final long buildTime = build.getTimestamp().getTimeInMillis();
            final long nowMaster = System.currentTimeMillis();

            public TestResult invoke(File dir, VirtualChannel channel) throws IOException, InterruptedException {
                final long nowSlave = System.currentTimeMillis();

                // files older than this timestamp is considered stale
                long localBuildTime = buildTime + (nowSlave - nowMaster);

                FilePath[] paths = new FilePath(dir).list(testResultLocations);
                if (paths.length==0)
                    throw new AbortException("No test reports that matches "+testResultLocations+" found. Configuration error?");

                // since dir is local, paths all point to the local files
                List<File> files = new ArrayList<File>(paths.length);
                for (FilePath path : paths) {
                    File report = new File(path.getRemote());
                    if (ignoreTimestampCheck || localBuildTime - 3000 /*error margin*/ < report.lastModified()) {
                        // this file is created during this build
                        files.add(report);
                    }
                }

                if (files.isEmpty()) {
                    // none of the files were new
                    throw new AbortException(
                        String.format(
                        "Test reports were found but none of them are new. Did tests run? %n"+
                        "For example, %s is %s old%n", paths[0].getRemote(),
                        Util.getTimeSpanString(localBuildTime-paths[0].lastModified())));
                }

                return parse(files,launcher,listener);
            }
        });
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518680746/fstmerge_var2_4619227581810989170

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4f736_23f3e/rev_4f736-23f3e/core/src/main/java/hudson/tasks/test/DefaultTestResultParserImpl.java
Conflict type: LineBasedMCFd
Conflict body: 
public static Channel forProcess(String name, ExecutorService execService, InputStream in, OutputStream out, OutputStream header, final Proc proc) throws IOException {
        ChannelBuilder cb = new ChannelBuilder(name,execService) {
            @Override
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518681744/fstmerge_var1_3895357521143819352
            public Channel build(CommandTransport transport) throws IOException {
                return new Channel(this,transport) {
                    /**
                     * Kill the process when the channel is severed.
                     */
                    @Override
                    public synchronized void terminate(IOException e) {
                        super.terminate(e);
                        try {
                            proc.kill();
                        } catch (IOException x) {
                            // we are already in the error recovery mode, so just record it and move on
                            LOGGER.log(Level.INFO, "Failed to terminate the severed connection",x);
                        } catch (InterruptedException x) {
                            // process the interrupt later
                            Thread.currentThread().interrupt();
                        }
                    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518681744/fstmerge_base_7864709013176349760
            protected synchronized void terminate(IOException e) {
                super.terminate(e);
                try {
                    proc.kill();
                } catch (IOException x) {
                    // we are already in the error recovery mode, so just record it and move on
                    LOGGER.log(Level.INFO, "Failed to terminate the severed connection",x);
                } catch (InterruptedException x) {
                    // process the interrupt later
                    Thread.currentThread().interrupt();
                }
            }
=======
            public synchronized void terminate(IOException e) {
                super.terminate(e);
                try {
                    proc.kill();
                } catch (IOException x) {
                    // we are already in the error recovery mode, so just record it and move on
                    LOGGER.log(Level.INFO, "Failed to terminate the severed connection",x);
                } catch (InterruptedException x) {
                    // process the interrupt later
                    Thread.currentThread().interrupt();
                }
            }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518681744/fstmerge_var2_1800202898220590653

                    @Override
                    public synchronized void join() throws InterruptedException {
                        super.join();
                        // wait for the child process to complete, too
                        try {
                            proc.join();
                        } catch (IOException e) {
                            throw new IOError(e);
                        }
                    }
                };
            }
        };
        cb.withHeaderStream(header);

        for (ChannelConfigurator cc : ChannelConfigurator.all()) {
            cc.onChannelBuilding(cb,null);  // TODO: what to pass as a context?
        }

        return cb.build(in,out);
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4f736_23f3e/rev_4f736-23f3e/core/src/main/java/hudson/slaves/Channels.java
Conflict type: LineBasedMCFd
Conflict body: 
public static Channel forProcess(String name, ExecutorService execService, final Process proc, OutputStream header) throws IOException {
        final Thread thread = new StreamCopyThread(name + " stderr", proc.getErrorStream(), header);
        thread.start();

        ChannelBuilder cb = new ChannelBuilder(name,execService) {
            @Override
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518681749/fstmerge_var1_5251844308959468948
            public Channel build(CommandTransport transport) throws IOException {
                return new Channel(this,transport) {
                    /**
                     * Kill the process when the channel is severed.
                     */
                    @Override
                    public synchronized void terminate(IOException e) {
                        super.terminate(e);
                        proc.destroy();
                        // the stderr copier should exit by itself
                    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518681749/fstmerge_base_7337991454743820836
            protected synchronized void terminate(IOException e) {
                super.terminate(e);
                proc.destroy();
                // the stderr copier should exit by itself
            }
=======
            public synchronized void terminate(IOException e) {
                super.terminate(e);
                proc.destroy();
                // the stderr copier should exit by itself
            }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518681749/fstmerge_var2_8692148177366931546

                    @Override
                    public synchronized void join() throws InterruptedException {
                        super.join();
                        // wait for the child process to complete, too
                        proc.waitFor();
                        thread.join();
                    }
                };
            }
        };
        cb.withHeaderStream(header);

        for (ChannelConfigurator cc : ChannelConfigurator.all()) {
            cc.onChannelBuilding(cb,null);  // TODO: what to pass as a context?
        }

        return cb.build(proc.getInputStream(),proc.getOutputStream());
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4f736_23f3e/rev_4f736-23f3e/core/src/main/java/hudson/slaves/Channels.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518685765/fstmerge_var1_968543979316986195
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518685765/fstmerge_base_8716056511136154902
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518685765/fstmerge_var2_3314599299142059435

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4f736_23f3e/rev_4f736-23f3e/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518686138/fstmerge_var1_6773052188502387923
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518686138/fstmerge_base_1379899882730981749
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518686138/fstmerge_var2_4149910408876858601

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4f736_23f3e/rev_4f736-23f3e/core/src/main/java/hudson/matrix/Axis.java
Conflict type: LineBasedMCFd
Conflict body: 
public static VirtualFile forFilePath(final FilePath f) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518688184/fstmerge_var1_1656748528968018998
        return new VirtualFile() {
            @Override public String getName() {
                return f.getName();
            }
            @Override public URI toURI() {
                try {
                    return f.toURI();
                } catch (Exception x) {
                    return URI.create(f.getRemote());
                }
            }
            @Override public VirtualFile getParent() {
                return f.getParent().toVirtualFile();
            }
            @Override public boolean isDirectory() throws IOException {
                try {
                    return f.isDirectory();
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
            @Override public boolean isFile() throws IOException {
                // TODO should probably introduce a method for this purpose
                return exists() && !isDirectory();
            }
            @Override public boolean exists() throws IOException {
                try {
                    return f.exists();
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
            @Override public VirtualFile[] list() throws IOException {
                try {
                    List<FilePath> kids = f.list();
                    if (kids == null) {
                        return new VirtualFile[0];
                    }
                    VirtualFile[] vfs = new VirtualFile[kids.size()];
                    for (int i = 0; i < vfs.length; i++) {
                        vfs[i] = forFilePath(kids.get(i));
                    }
                    return vfs;
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
            @Override public String[] list(String glob) throws IOException {
                try {
                    return f.act(new Scanner(glob));
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
            @Override public VirtualFile child(String name) {
                return forFilePath(f.child(name));
            }
            @Override public long length() throws IOException {
                try {
                    return f.length();
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
            @Override public long lastModified() throws IOException {
                try {
                    return f.lastModified();
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
            @Override public boolean canRead() throws IOException {
                try {
                    return f.act(new Readable());
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
            @Override public InputStream open() throws IOException {
                try {
                    return f.read();
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
        };
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518688184/fstmerge_base_5120212167381184214
        return new VirtualFile() {
            @Override public String getName() {
                return f.getName();
            }
            @Override public URI toURI() {
                try {
                    return f.toURI();
                } catch (Exception x) {
                    return URI.create(f.getRemote());
                }
            }
            @Override public VirtualFile getParent() {
                return f.getParent().toVirtualFile();
            }
            @Override public boolean isDirectory() throws IOException {
                try {
                    return f.isDirectory();
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
            @Override public boolean isFile() throws IOException {
                // TODO should probably introduce a method for this purpose
                return exists() && !isDirectory();
            }
            @Override public boolean exists() throws IOException {
                try {
                    return f.exists();
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
            @Override public VirtualFile[] list() throws IOException {
                try {
                    List<FilePath> kids = f.list();
                    if (kids == null) {
                        return new VirtualFile[0];
                    }
                    VirtualFile[] vfs = new VirtualFile[kids.size()];
                    for (int i = 0; i < vfs.length; i++) {
                        vfs[i] = forFilePath(kids.get(i));
                    }
                    return vfs;
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
            @Override public String[] list(String glob) throws IOException {
                try {
                    return f.act(new Scanner(glob));
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
            @Override public VirtualFile child(String name) {
                return forFilePath(f.child(name));
            }
            @Override public long length() throws IOException {
                try {
                    return f.length();
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
            @Override public long lastModified() throws IOException {
                try {
                    return f.lastModified();
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
            @Override public boolean canRead() throws IOException {
                try {
                    return f.act(new Readable());
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
            @Override public InputStream open() throws IOException {
                return f.read();
            }
        };
=======
        return new FilePathVF(f);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418518688184/fstmerge_var2_698743309597748660
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4f736_23f3e/rev_4f736-23f3e/core/src/main/java/jenkins/util/VirtualFile.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_1c1a4_1759f/rev_1c1a4-1759f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_45ff0_e53fd/rev_45ff0-e53fd.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_23f3e_45ff0/rev_23f3e-45ff0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_be195_481f2/rev_be195-481f2.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418519924653/fstmerge_var1_4005698049981786700
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418519924653/fstmerge_base_7360130502396861910
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418519924653/fstmerge_var2_5813566525129958259

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_be195_481f2/rev_be195-481f2/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418519925130/fstmerge_var1_5821440458346571340
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418519925130/fstmerge_base_2697235421667494159
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418519925130/fstmerge_var2_244347626815608168

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_be195_481f2/rev_be195-481f2/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b875d_09c59/rev_b875d-09c59.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_597cb_2b6c0/rev_597cb-2b6c0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_383b9_fda84/rev_383b9-fda84.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_fda84_c4c55/rev_fda84-c4c55.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_14cd5_70f84/rev_14cd5-70f84.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_02302_68251/rev_02302-68251.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_eec43_0adf9/rev_eec43-0adf9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_f9869_e72c1/rev_f9869-e72c1.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_daacb_aac8c/rev_daacb-aac8c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_adf83_657d7/rev_adf83-657d7.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8bece_3addb/rev_8bece-3addb.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d6b4a_a8262/rev_d6b4a-a8262.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_10e42_aeec1/rev_10e42-aeec1.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0f0c2_e518f/rev_0f0c2-e518f.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a78f1_afdbe/rev_a78f1-afdbe.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_245a7_70f59/rev_245a7-70f59.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9c521_1cba6/rev_9c521-1cba6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d6f75_190f0/rev_d6f75-190f0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d5d47_d6f75/rev_d5d47-d6f75.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_57ee1_c7e98/rev_57ee1-c7e98.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c3b40_7230a/rev_c3b40-7230a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_52941_f4231/rev_52941-f4231.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e168f_6e552/rev_e168f-6e552.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_04b8e_cafe5/rev_04b8e-cafe5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_be195_547cc/rev_be195-547cc.revisions
Conflict type: LineBasedMCFd
Conflict body: 
public static Channel forProcess(String name, ExecutorService execService, InputStream in, OutputStream out, OutputStream header, final Proc proc) throws IOException {
        ChannelBuilder cb = new ChannelBuilder(name,execService) {
            @Override
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418527722974/fstmerge_var1_4225963439471914347
            public synchronized void terminate(IOException e) {
                super.terminate(e);
                try {
                    proc.kill();
                } catch (IOException x) {
                    // we are already in the error recovery mode, so just record it and move on
                    LOGGER.log(Level.INFO, "Failed to terminate the severed connection",x);
                } catch (InterruptedException x) {
                    // process the interrupt later
                    Thread.currentThread().interrupt();
                }
            }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418527722974/fstmerge_base_4427464290474042201
            protected synchronized void terminate(IOException e) {
                super.terminate(e);
                try {
                    proc.kill();
                } catch (IOException x) {
                    // we are already in the error recovery mode, so just record it and move on
                    LOGGER.log(Level.INFO, "Failed to terminate the severed connection",x);
                } catch (InterruptedException x) {
                    // process the interrupt later
                    Thread.currentThread().interrupt();
                }
            }
=======
            public Channel build(CommandTransport transport) throws IOException {
                return new Channel(this,transport) {
                    /**
                     * Kill the process when the channel is severed.
                     */
                    @Override
                    public synchronized void terminate(IOException e) {
                        super.terminate(e);
                        try {
                            proc.kill();
                        } catch (IOException x) {
                            // we are already in the error recovery mode, so just record it and move on
                            LOGGER.log(Level.INFO, "Failed to terminate the severed connection",x);
                        } catch (InterruptedException x) {
                            // process the interrupt later
                            Thread.currentThread().interrupt();
                        }
                    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418527722974/fstmerge_var2_84537320162927715

                    @Override
                    public synchronized void join() throws InterruptedException {
                        super.join();
                        // wait for the child process to complete, too
                        try {
                            proc.join();
                        } catch (IOException e) {
                            throw new IOError(e);
                        }
                    }
                };
            }
        };
        cb.withHeaderStream(header);

        for (ChannelConfigurator cc : ChannelConfigurator.all()) {
            cc.onChannelBuilding(cb,null);  // TODO: what to pass as a context?
        }

        return cb.build(in,out);
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_be195_547cc/rev_be195-547cc/core/src/main/java/hudson/slaves/Channels.java
Conflict type: LineBasedMCFd
Conflict body: 
public static Channel forProcess(String name, ExecutorService execService, final Process proc, OutputStream header) throws IOException {
        final Thread thread = new StreamCopyThread(name + " stderr", proc.getErrorStream(), header);
        thread.start();

        ChannelBuilder cb = new ChannelBuilder(name,execService) {
            @Override
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418527722979/fstmerge_var1_6153440725979751116
            public synchronized void terminate(IOException e) {
                super.terminate(e);
                proc.destroy();
                // the stderr copier should exit by itself
            }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418527722979/fstmerge_base_465393354684282778
            protected synchronized void terminate(IOException e) {
                super.terminate(e);
                proc.destroy();
                // the stderr copier should exit by itself
            }
=======
            public Channel build(CommandTransport transport) throws IOException {
                return new Channel(this,transport) {
                    /**
                     * Kill the process when the channel is severed.
                     */
                    @Override
                    public synchronized void terminate(IOException e) {
                        super.terminate(e);
                        proc.destroy();
                        // the stderr copier should exit by itself
                    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418527722979/fstmerge_var2_5750614581324048484

                    @Override
                    public synchronized void join() throws InterruptedException {
                        super.join();
                        // wait for the child process to complete, too
                        proc.waitFor();
                        thread.join();
                    }
                };
            }
        };
        cb.withHeaderStream(header);

        for (ChannelConfigurator cc : ChannelConfigurator.all()) {
            cc.onChannelBuilding(cb,null);  // TODO: what to pass as a context?
        }

        return cb.build(proc.getInputStream(),proc.getOutputStream());
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_be195_547cc/rev_be195-547cc/core/src/main/java/hudson/slaves/Channels.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35.revisions
Conflict type: LineBasedMCFd
Conflict body: 
private void unzip(File dir, File zipFile) throws IOException {
        dir = dir.getAbsoluteFile();    // without absolutization, getParentFile below seems to fail
        ZipFile zip = new ZipFile(zipFile);
        @SuppressWarnings("unchecked")
        Enumeration<ZipEntry> entries = zip.getEntries();

        try {
            while (entries.hasMoreElements()) {
                ZipEntry e = entries.nextElement();
                File f = new File(dir, e.getName());
                if (e.isDirectory()) {
                    mkdirs(f);
                } else {
                    File p = f.getParentFile();
                    if (p != null) {
                        mkdirs(p);
                    }
                    InputStream input = zip.getInputStream(e);
                    try {
                        IOUtils.copy(input, writing(f));
                    } finally {
                        input.close();
                    }
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528000918/fstmerge_var1_6050900865686837085
                    InputStream input = zip.getInputStream(e);
                    try {
                        IOUtils.copy(input, f);
                    } finally {
                        input.close();
                    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528000918/fstmerge_base_7276353596367172701
                    IOUtils.copy(zip.getInputStream(e), f);
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528000918/fstmerge_var2_3474651550669275079
                    try {
                        FilePath target = new FilePath(f);
                        int mode = e.getUnixMode();
                        if (mode!=0)    // Ant returns 0 if the archive doesn't record the access mode
                            target.chmod(mode);
                    } catch (InterruptedException ex) {
                        LOGGER.log(Level.WARNING, "unable to set permissions", ex);
                    }
                    f.setLastModified(e.getTime());
                }
            }
        } finally {
            zip.close();
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35/core/src/main/java/hudson/FilePath.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528001140/fstmerge_var1_3382027576999397760
public long getFreeDiskSpace() throws IOException, InterruptedException {
        return act(new FileCallable<Long>() {
            private static final long serialVersionUID = 1L;
            @Override public Long invoke(File f, VirtualChannel channel) throws IOException {
                return f.getFreeSpace();
            }
        });
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528001140/fstmerge_base_804860360769707585
=======
public long getFreeDiskSpace() throws IOException, InterruptedException {
        return act(new SecureFileCallable<Long>() {
            private static final long serialVersionUID = 1L;
            @Override public Long invoke(File f, VirtualChannel channel) throws IOException {
                return f.getFreeSpace();
            }
        });
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528001140/fstmerge_var2_1154525288195599813

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35/core/src/main/java/hudson/FilePath.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528001185/fstmerge_var1_8969917252216444518
public long getTotalDiskSpace() throws IOException, InterruptedException {
        return act(new FileCallable<Long>() {
            private static final long serialVersionUID = 1L;
            @Override public Long invoke(File f, VirtualChannel channel) throws IOException {
                return f.getTotalSpace();
            }
        });
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528001185/fstmerge_base_6129866728405006460
=======
public long getTotalDiskSpace() throws IOException, InterruptedException {
        return act(new SecureFileCallable<Long>() {
            private static final long serialVersionUID = 1L;
            @Override public Long invoke(File f, VirtualChannel channel) throws IOException {
                return f.getTotalSpace();
            }
        });
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528001185/fstmerge_var2_2682161559496935717

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35/core/src/main/java/hudson/FilePath.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528001190/fstmerge_var1_3826013309729668487
public long getUsableDiskSpace() throws IOException, InterruptedException {
        return act(new FileCallable<Long>() {
            private static final long serialVersionUID = 1L;
            @Override public Long invoke(File f, VirtualChannel channel) throws IOException {
                return f.getUsableSpace();
            }
        });
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528001190/fstmerge_base_6133794098215206185
=======
public long getUsableDiskSpace() throws IOException, InterruptedException {
        return act(new SecureFileCallable<Long>() {
            private static final long serialVersionUID = 1L;
            @Override public Long invoke(File f, VirtualChannel channel) throws IOException {
                return f.getUsableSpace();
            }
        });
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528001190/fstmerge_var2_117346536059541792

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35/core/src/main/java/hudson/FilePath.java
Conflict type: LineBasedMCFd
Conflict body: 
public void moveAllChildrenTo(final FilePath target) throws IOException, InterruptedException {
        if(this.channel != target.channel) {
            throw new IOException("pullUpTo target must be on the same host");
        }
        act(new SecureFileCallable<Void>() {
            private static final long serialVersionUID = 1L;
            public Void invoke(File f, VirtualChannel channel) throws IOException {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528001274/fstmerge_base_648070398092748021
=======
                // JENKINS-16846: if f.getName() is the same as one of the files/directories in f,
                // then the rename op will fail
                File tmp = new File(f.getAbsolutePath()+".__rename");
                if (!f.renameTo(tmp))
                    throw new IOException("Failed to rename "+f+" to "+tmp);

>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528001274/fstmerge_var2_6101683696951438770
                File t = new File(target.getRemote());
                
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528001274/fstmerge_var1_9193051238168011895
                for(File child : tmp.listFiles()) {
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528001274/fstmerge_base_648070398092748021
                for(File child : f.listFiles()) {
=======
                for(File child : reading(tmp).listFiles()) {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528001274/fstmerge_var2_6101683696951438770
                    File target = new File(t, child.getName());
                    if(!stating(child).renameTo(creating(target)))
                        throw new IOException("Failed to rename "+child+" to "+target);
                }
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528001274/fstmerge_var1_9193051238168011895
                tmp.delete();
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528001274/fstmerge_base_648070398092748021
                f.delete();
=======
                deleting(tmp).delete();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528001274/fstmerge_var2_6101683696951438770
                return null;
            }
        });
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35/core/src/main/java/hudson/FilePath.java
Conflict type: LineBasedMCFd
Conflict body: 
public int copyRecursiveTo(final DirScanner scanner, final FilePath target, final String description) throws IOException, InterruptedException {
        if(this.channel==target.channel) {
            // local to local copy.
            return act(new SecureFileCallable<Integer>() {
                private static final long serialVersionUID = 1L;
                public Integer invoke(File base, VirtualChannel channel) throws IOException {
                    if(!base.exists())  return 0;
                    assert target.channel==null;
                    final File dest = new File(target.remote);
                    final AtomicInteger count = new AtomicInteger();
                    scanner.scan(base, reading(new FileVisitor() {
                        @Override
                        public void visit(File f, String relativePath) throws IOException {
                            if (f.isFile()) {
                                File target = new File(dest, relativePath);
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528001316/fstmerge_var1_4932573182531383032
                                IOUtils.mkdirs(target.getParentFile());
                                Util.copyFile(f, target);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528001316/fstmerge_base_7504283823055284884
                                target.getParentFile().mkdirs();
                                Util.copyFile(f, target);
=======
                                mkdirsE(target.getParentFile());
                                Util.copyFile(f, writing(target));
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528001316/fstmerge_var2_5123314783694658709
                                count.incrementAndGet();
                            }
                        }

                        @Override
                        public boolean understandsSymlink() {
                            return true;
                        }

                        @Override
                        public void visitSymlink(File link, String target, String relativePath) throws IOException {
                            try {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528001316/fstmerge_var1_4932573182531383032
                                IOUtils.mkdirs(new File(dest, relativePath).getParentFile());
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528001316/fstmerge_base_7504283823055284884
=======
                                mkdirsE(new File(dest, relativePath).getParentFile());
                                writing(new File(dest, target));
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528001316/fstmerge_var2_5123314783694658709
                                Util.createSymlink(dest, target, relativePath, TaskListener.NULL);
                            } catch (InterruptedException x) {
                                throw (IOException) new IOException(x.toString()).initCause(x);
                            }
                            count.incrementAndGet();
                        }
                    }));
                    return count.get();
                }
            });
        } else
        if(this.channel==null) {
            // local -> remote copy
            final Pipe pipe = Pipe.createLocalToRemote();

            Future<Void> future = target.actAsync(new SecureFileCallable<Void>() {
                private static final long serialVersionUID = 1L;
                public Void invoke(File f, VirtualChannel channel) throws IOException {
                    try {
                        readFromTar(remote + '/' + description, f,TarCompression.GZIP.extract(pipe.getIn()));
                        return null;
                    } finally {
                        pipe.getIn().close();
                    }
                }
            });
            Future<Integer> future2 = actAsync(new SecureFileCallable<Integer>() {
                private static final long serialVersionUID = 1L;
                @Override public Integer invoke(File f, VirtualChannel channel) throws IOException, InterruptedException {
                    return writeToTar(new File(remote), scanner, TarCompression.GZIP.compress(pipe.getOut()));
                }
            });
            try {
                // JENKINS-9540 in case the reading side failed, report that error first
                future.get();
                return future2.get();
            } catch (ExecutionException e) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528001316/fstmerge_base_7504283823055284884
                throw new IOException2(e);
=======
                throw new IOException(e);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528001316/fstmerge_var2_5123314783694658709
            }
        } else {
            // remote -> local copy
            final Pipe pipe = Pipe.createRemoteToLocal();

            Future<Integer> future = actAsync(new SecureFileCallable<Integer>() {
                private static final long serialVersionUID = 1L;
                public Integer invoke(File f, VirtualChannel channel) throws IOException {
                    try {
                        return writeToTar(f, scanner, TarCompression.GZIP.compress(pipe.getOut()));
                    } finally {
                        pipe.getOut().close();
                    }
                }
            });
            try {
                readFromTar(remote + '/' + description,new File(target.remote),TarCompression.GZIP.extract(pipe.getIn()));
            } catch (IOException e) {// BuildException or IOException
                try {
                    future.get(3,TimeUnit.SECONDS);
                    throw e;    // the remote side completed successfully, so the error must be local
                } catch (ExecutionException x) {
                    // report both errors
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528001316/fstmerge_base_7504283823055284884
                    throw new IOException2(Functions.printThrowable(e),x);
=======
                    throw new IOException(Functions.printThrowable(e),x);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528001316/fstmerge_var2_5123314783694658709
                } catch (TimeoutException _) {
                    // remote is hanging
                    throw e;
                }
            }
            try {
                return future.get();
            } catch (ExecutionException e) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528001316/fstmerge_base_7504283823055284884
                throw new IOException2(e);
=======
                throw new IOException(e);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528001316/fstmerge_var2_5123314783694658709
            }
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35/core/src/main/java/hudson/FilePath.java
Conflict type: LineBasedMCFd
Conflict body: 
public ClientAuthenticationCache(Channel channel) throws IOException, InterruptedException {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528006585/fstmerge_var1_3508432890387449550
        store = (channel==null ? FilePath.localChannel :  channel).call(new Callable<FilePath, IOException>() {
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528006585/fstmerge_base_481570914726896712
        store = (channel==null ? MasterComputer.localChannel :  channel).call(new Callable<FilePath, IOException>() {
=======
        store = (channel==null ? FilePath.localChannel :  channel).call(new MasterToSlaveCallable<FilePath, IOException>() {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528006585/fstmerge_var2_1503474643977926418
            public FilePath call() throws IOException {
                File home = new File(System.getProperty("user.home"));
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528006585/fstmerge_base_481570914726896712
                return new FilePath(new File(home, ".hudson/cli-credentials"));
=======
                File hudsonHome = new File(home, ".hudson");
                if (hudsonHome.exists()) {
                    return new FilePath(new File(hudsonHome, "cli-credentials"));
                }
                return new FilePath(new File(home, ".jenkins/cli-credentials"));
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528006585/fstmerge_var2_1503474643977926418
            }
        });
        if (store.exists()) {
            props.load(store.read());
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35/core/src/main/java/hudson/cli/ClientAuthenticationCache.java
Conflict type: LineBasedMCFd
Conflict body: 
private static void remove(Saveable obj, boolean isDelete) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528007106/fstmerge_base_7932832331231246112
        OldDataMonitor odm = (OldDataMonitor) Jenkins.getInstance().getAdministrativeMonitor("OldData");
=======
        OldDataMonitor odm = get(Jenkins.getInstance());
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528007106/fstmerge_var2_3871738737480027932
        synchronized (odm) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528007106/fstmerge_var1_7287314547619524983
            odm.data.remove(referTo(obj));
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528007106/fstmerge_base_7932832331231246112
            if (odm.updating) return; // Skip during doUpgrade or doDiscard
            odm.data.remove(obj);
=======
            if (odm.updating) return; // Skip during doUpgrade or doDiscard
            odm.data.remove(referTo(obj));
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528007106/fstmerge_var2_3871738737480027932
            if (isDelete && obj instanceof Job<?,?>)
                for (Run r : ((Job<?,?>)obj).getBuilds())
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528007106/fstmerge_base_7932832331231246112
                    odm.data.remove(r);
=======
                    odm.data.remove(referTo(r));
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528007106/fstmerge_var2_3871738737480027932
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35/core/src/main/java/hudson/diagnosis/OldDataMonitor.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528007152/fstmerge_var1_7289987377198116537
@RequirePOST
    public HttpResponse doUpgrade(StaplerRequest req, StaplerResponse rsp) {
        final String thruVerParam = req.getParameter("thruVer");
        final VersionNumber thruVer = thruVerParam.equals("all") ? null : new VersionNumber(thruVerParam);

        saveAndRemoveEntries( new Predicate<Map.Entry<SaveableReference,VersionRange>>() {
            @Override
            public boolean apply(Map.Entry<SaveableReference, VersionRange> entry) {
                VersionNumber version = entry.getValue().max;
                return version != null && (thruVer == null || !version.isNewerThan(thruVer));
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528007152/fstmerge_base_8345529229191420012
public synchronized HttpResponse doUpgrade(StaplerRequest req, StaplerResponse rsp) throws IOException {
        String thruVerParam = req.getParameter("thruVer");
        VersionNumber thruVer = thruVerParam.equals("all") ? null : new VersionNumber(thruVerParam);
        updating = true;
        for (Iterator<Map.Entry<Saveable,VersionRange>> it = data.entrySet().iterator(); it.hasNext();) {
            Map.Entry<Saveable,VersionRange> entry = it.next();
            VersionNumber version = entry.getValue().max;
            if (version != null && (thruVer == null || !version.isNewerThan(thruVer))) {
                entry.getKey().save();
                it.remove();
=======
@RequirePOST
    public synchronized HttpResponse doUpgrade(StaplerRequest req, StaplerResponse rsp) {
        String thruVerParam = req.getParameter("thruVer");
        VersionNumber thruVer = thruVerParam.equals("all") ? null : new VersionNumber(thruVerParam);
        updating = true;
        for (Iterator<Map.Entry<SaveableReference,VersionRange>> it = data.entrySet().iterator(); it.hasNext();) {
            Map.Entry<SaveableReference,VersionRange> entry = it.next();
            VersionNumber version = entry.getValue().max;
            if (version != null && (thruVer == null || !version.isNewerThan(thruVer))) {
                it.remove();
                tryToSave(entry.getKey());
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528007152/fstmerge_var2_6777248295229926940
            }
        });

        return HttpResponses.forwardToPreviousPage();
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35/core/src/main/java/hudson/diagnosis/OldDataMonitor.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528007156/fstmerge_var1_2216854317106332207
@RequirePOST
    public HttpResponse doDiscard(StaplerRequest req, StaplerResponse rsp) {
        saveAndRemoveEntries( new Predicate<Map.Entry<SaveableReference,VersionRange>>() {
            @Override
            public boolean apply(Map.Entry<SaveableReference, VersionRange> entry) {
                return entry.getValue().max == null;
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528007156/fstmerge_base_2479928042192548280
public synchronized HttpResponse doDiscard(StaplerRequest req, StaplerResponse rsp) throws IOException {
        updating = true;
        for (Iterator<Map.Entry<Saveable,VersionRange>> it = data.entrySet().iterator(); it.hasNext();) {
            Map.Entry<Saveable,VersionRange> entry = it.next();
            if (entry.getValue().max == null) {
                entry.getKey().save();
                it.remove();
=======
@RequirePOST
    public synchronized HttpResponse doDiscard(StaplerRequest req, StaplerResponse rsp) {
        updating = true;
        for (Iterator<Map.Entry<SaveableReference,VersionRange>> it = data.entrySet().iterator(); it.hasNext();) {
            Map.Entry<SaveableReference,VersionRange> entry = it.next();
            if (entry.getValue().max == null) {
                it.remove();
                tryToSave(entry.getKey());
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528007156/fstmerge_var2_2648030163274323649
            }
        });

        return HttpResponses.forwardToPreviousPage();
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35/core/src/main/java/hudson/diagnosis/OldDataMonitor.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528007567/fstmerge_var1_2425968379905312215
@Nonnull
    public static IdStrategy idStrategy() {
        Jenkins j = Jenkins.getInstance();
        if (j == null) {
            return IdStrategy.CASE_INSENSITIVE;
        }
        SecurityRealm realm = j.getSecurityRealm();
        if (realm == null) {
            return IdStrategy.CASE_INSENSITIVE;
        }
        return realm.getUserIdStrategy();
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528007567/fstmerge_base_1725551109785674090
=======
@Nonnull
    public static IdStrategy idStrategy() {
        SecurityRealm realm = Jenkins.getInstance().getSecurityRealm();
        return realm == null ? IdStrategy.CASE_INSENSITIVE : realm.getUserIdStrategy();
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528007567/fstmerge_var2_5999551876606303337

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35/core/src/main/java/hudson/model/User.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528011958/fstmerge_var1_9173148032426069034
public void setResult(@Nonnull Result r) {
        if (state != State.BUILDING) {
            throw new IllegalStateException("cannot change build result while in " + state);
        }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528011958/fstmerge_base_8840666458718158457
public void setResult(Result r) {
        // state can change only when we are building
        assert state==State.BUILDING;
=======
public void setResult(@Nonnull Result r) {
        // state can change only when we are building
        assert state==State.BUILDING : state;
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528011958/fstmerge_var2_7533835172134255883

        // result can only get worse
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528011958/fstmerge_base_8840666458718158457
        if(result==null) {
=======
        if (result==null || r.isWorseThan(result)) {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528011958/fstmerge_var2_7533835172134255883
            result = r;
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528011958/fstmerge_base_8840666458718158457
            LOGGER.log(FINE, toString()+" : result is set to "+r,new Exception());
        } else {
            if(r.isWorseThan(result)) {
                LOGGER.log(FINE, toString()+" : result is set to "+r,new Exception());
                result = r;
            }
=======
            LOGGER.log(FINE, this + " in " + getRootDir() + ": result is set to " + r, LOGGER.isLoggable(Level.FINER) ? new Exception() : null);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528011958/fstmerge_var2_7533835172134255883
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35/core/src/main/java/hudson/model/Run.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528013449/fstmerge_base_1938981427173202010
public synchronized void delete() throws IOException, InterruptedException {
=======
public void delete() throws IOException, InterruptedException {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528013449/fstmerge_var2_7586423188581395519
        checkPermission(DELETE);
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528013449/fstmerge_var1_1873655847019009080
        synchronized (this) { // could just make performDelete synchronized but overriders might not honor that
            performDelete();
        } // JENKINS-19446: leave synch block, but JENKINS-22001: still notify synchronously
        getParent().onDeleted(AbstractItem.this);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528013449/fstmerge_base_1938981427173202010
        performDelete();

        try {
            invokeOnDeleted();
        } catch (AbstractMethodError e) {
            // ignore
        }

=======
        synchronized (this) { // could just make performDelete synchronized but overriders might not honor that
            performDelete();
        } // JENKINS-19446: leave synch block, but JENKINS-22001: still notify synchronously
        invokeOnDeleted();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528013449/fstmerge_var2_7586423188581395519
        Jenkins.getInstance().rebuildDependencyGraphAsync();
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35/core/src/main/java/hudson/model/AbstractItem.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528013454/fstmerge_var1_1538305781546129543
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528013454/fstmerge_base_5018208830743068525
private void invokeOnDeleted() throws IOException {
        getParent().onDeleted(this);
    }
=======
private void invokeOnDeleted() throws IOException {
        getParent().onDeleted(AbstractItem.this);
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528013454/fstmerge_var2_3261466123635292800

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35/core/src/main/java/hudson/model/AbstractItem.java
Conflict type: LineBasedMCFd
Conflict body: 
public void updateByXml(Source source) throws IOException {
        checkPermission(CONFIGURE);
        XmlFile configXmlFile = getConfigFile();
        AtomicFileWriter out = new AtomicFileWriter(configXmlFile.getFile());
        try {
            try {
                // this allows us to use UTF-8 for storing data,
                // plus it checks any well-formedness issue in the submitted
                // data
                Transformer t = TransformerFactory.newInstance()
                        .newTransformer();
                t.transform(source,
                        new StreamResult(out));
                out.close();
            } catch (TransformerException e) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528013470/fstmerge_base_2509063824960575621
                throw new IOException2("Failed to persist configuration.xml", e);
=======
                throw new IOException("Failed to persist config.xml", e);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528013470/fstmerge_var2_4787979135899382050
            }

            // try to reflect the changes by reloading
            Object o = new XmlFile(Items.XSTREAM, out.getTemporaryFile()).unmarshal(this);
            if (o!=this) {
                // ensure that we've got the same job type. extending this code to support updating
                // to different job type requires destroying & creating a new job type
                throw new IOException("Expecting "+this.getClass()+" but got "+o.getClass()+" instead");
            }

<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528013470/fstmerge_var1_3747937616303274541
            Items.whileUpdatingByXml(new Callable<Void,IOException>() {
                @Override public Void call() throws IOException {
                    onLoad(getParent(), getRootDir().getName());
                    return null;
                }
            });
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528013470/fstmerge_base_2509063824960575621
            Items.updatingByXml.set(true);
            try {
                onLoad(getParent(), getRootDir().getName());
            } finally {
                Items.updatingByXml.set(false);
            }
=======
            Items.whileUpdatingByXml(new NotReallyRoleSensitiveCallable<Void,IOException>() {
                @Override public Void call() throws IOException {
                    onLoad(getParent(), getRootDir().getName());
                    return null;
                }
            });
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528013470/fstmerge_var2_4787979135899382050
            Jenkins.getInstance().rebuildDependencyGraphAsync();

            // if everything went well, commit this new version
            out.commit();
            SaveableListener.fireOnChange(this, getConfigFile());
        } finally {
            out.abort(); // don't leave anything behind
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35/core/src/main/java/hudson/model/AbstractItem.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528013475/fstmerge_var1_3771525317647793428
@CLIMethod(name="reload-job")
    @RequirePOST
    public void doReload() throws IOException {
        checkPermission(CONFIGURE);

        // try to reflect the changes by reloading
        getConfigFile().unmarshal(this);
        Items.whileUpdatingByXml(new Callable<Void, IOException>() {
            @Override
            public Void call() throws IOException {
                onLoad(getParent(), getRootDir().getName());
                return null;
            }
        });
        Jenkins.getInstance().rebuildDependencyGraphAsync();

        SaveableListener.fireOnChange(this, getConfigFile());
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528013475/fstmerge_base_724065192844727889
=======
@CLIMethod(name="reload-job")
    @RequirePOST
    public void doReload() throws IOException {
        checkPermission(CONFIGURE);

        // try to reflect the changes by reloading
        getConfigFile().unmarshal(this);
        Items.whileUpdatingByXml(new NotReallyRoleSensitiveCallable<Void, IOException>() {
            @Override
            public Void call() throws IOException {
                onLoad(getParent(), getRootDir().getName());
                return null;
            }
        });
        Jenkins.getInstance().rebuildDependencyGraphAsync();

        SaveableListener.fireOnChange(this, getConfigFile());
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528013475/fstmerge_var2_1643780261352054317

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35/core/src/main/java/hudson/model/AbstractItem.java
Conflict type: LineBasedMCFd
Conflict body: 
@SuppressWarnings({"unchecked"})
    public synchronized <T extends TopLevelItem> T copy(T src, String name) throws IOException {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528015673/fstmerge_base_5256465689567618281
        acl.checkPermission(Job.CREATE);
=======
        acl.checkPermission(Item.CREATE);
        src.checkPermission(Item.EXTENDED_READ);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528015673/fstmerge_var2_1168074458100827320

        T result = (T)createProject(src.getDescriptor(),name,false);

        // copy config
        Util.copyFile(Items.getConfigFile(src).getFile(),Items.getConfigFile(result).getFile());

        // reload from the new config
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528015673/fstmerge_var1_7489605006899036014
        final File rootDir = result.getRootDir();
        result = Items.whileUpdatingByXml(new Callable<T,IOException>() {
            @Override public T call() throws IOException {
                return (T) Items.load(parent, rootDir);
            }
        });
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528015673/fstmerge_base_5256465689567618281
        Items.updatingByXml.set(true);
        try {
            result = (T)Items.load(parent,result.getRootDir());
        } finally {
            Items.updatingByXml.set(false);
        }
=======
        final File rootDir = result.getRootDir();
        result = Items.whileUpdatingByXml(new NotReallyRoleSensitiveCallable<T,IOException>() {
            @Override public T call() throws IOException {
                return (T) Items.load(parent, rootDir);
            }
        });
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528015673/fstmerge_var2_1168074458100827320
        result.onCopiedFrom(src);

        add(result);
        ItemListener.fireOnCopied(src,result);
        Jenkins.getInstance().rebuildDependencyGraphAsync();

        return result;
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35/core/src/main/java/hudson/model/ItemGroupMixIn.java
Conflict type: LineBasedMCFd
Conflict body: 
public synchronized TopLevelItem createProjectFromXML(String name, InputStream xml) throws IOException {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528015676/fstmerge_base_8126921284002138011
        acl.checkPermission(Job.CREATE);
=======
        acl.checkPermission(Item.CREATE);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528015676/fstmerge_var2_5850514764690794577

        Jenkins.getInstance().getProjectNamingStrategy().checkName(name);
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528015676/fstmerge_base_8126921284002138011
=======
        if (parent.getItem(name) != null) {
            throw new IllegalArgumentException(parent.getDisplayName() + " already contains an item '" + name + "'");
        }
        // TODO what if we have no DISCOVER permission on the existing job?

>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528015676/fstmerge_var2_5850514764690794577
        // place it as config.xml
        File configXml = Items.getConfigFile(getRootDirFor(name)).getFile();
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528015676/fstmerge_base_8126921284002138011
        configXml.getParentFile().mkdirs();
=======
        final File dir = configXml.getParentFile();
        dir.mkdirs();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528015676/fstmerge_var2_5850514764690794577
        try {
            IOUtils.copy(xml,configXml);

            // load it
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528015676/fstmerge_var1_5488398738881404534
            TopLevelItem result = Items.whileUpdatingByXml(new Callable<TopLevelItem,IOException>() {
                @Override public TopLevelItem call() throws IOException {
                    return (TopLevelItem) Items.load(parent, dir);
                }
            });
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528015676/fstmerge_base_8126921284002138011
            TopLevelItem result;
            Items.updatingByXml.set(true);
            try {
                result = (TopLevelItem)Items.load(parent,configXml.getParentFile());
            } finally {
                Items.updatingByXml.set(false);
            }
=======
            TopLevelItem result = Items.whileUpdatingByXml(new NotReallyRoleSensitiveCallable<TopLevelItem,IOException>() {
                @Override public TopLevelItem call() throws IOException {
                    return (TopLevelItem) Items.load(parent, dir);
                }
            });
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528015676/fstmerge_var2_5850514764690794577
            add(result);

            ItemListener.fireOnCreated(result);
            Jenkins.getInstance().rebuildDependencyGraphAsync();

            return result;
        } catch (IOException e) {
            // if anything fails, delete the config file to avoid further confusion
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528015676/fstmerge_base_8126921284002138011
            Util.deleteRecursive(configXml.getParentFile());
=======
            Util.deleteRecursive(dir);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528015676/fstmerge_var2_5850514764690794577
            throw e;
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35/core/src/main/java/hudson/model/ItemGroupMixIn.java
Conflict type: LineBasedMCFd
Conflict body: 
@Override
    protected void submit(StaplerRequest req, StaplerResponse rsp) throws IOException, ServletException, FormException {
        super.submit(req,rsp);
        JSONObject json = req.getSubmittedForm();

        makeDisabled(json.optBoolean("disable"));

        jdk = json.optString("jdk", null);

        if(json.optBoolean("hasCustomQuietPeriod", json.has("quiet_period"))) {
            quietPeriod = json.optInt("quiet_period");
        } else {
            quietPeriod = null;
        }

        if(json.optBoolean("hasCustomScmCheckoutRetryCount", json.has("scmCheckoutRetryCount"))) {
            scmCheckoutRetryCount = json.optInt("scmCheckoutRetryCount");
        } else {
            scmCheckoutRetryCount = null;
        }

        blockBuildWhenDownstreamBuilding = json.optBoolean("blockBuildWhenDownstreamBuilding");
        blockBuildWhenUpstreamBuilding = json.optBoolean("blockBuildWhenUpstreamBuilding");

        if(json.optBoolean("hasCustomWorkspace", json.has("customWorkspace"))) {
            customWorkspace = Util.fixEmptyAndTrim(json.optString("customWorkspace"));
        } else {
            customWorkspace = null;
        }

        if (json.has("scmCheckoutStrategy"))
            scmCheckoutStrategy = req.bindJSON(SCMCheckoutStrategy.class,
                json.getJSONObject("scmCheckoutStrategy"));
        else
            scmCheckoutStrategy = null;

        if(json.optBoolean("hasSlaveAffinity", json.has("label"))) {
            assignedNode = Util.fixEmptyAndTrim(json.optString("label"));
        } else {
            assignedNode = null;
        }
        canRoam = assignedNode==null;

<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528016451/fstmerge_var1_4005929564028865951
        keepDependencies = json.has("keepDependencies");

        concurrentBuild = json.optBoolean("concurrentBuild");
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528016451/fstmerge_base_1309953585025711508
        concurrentBuild = req.getSubmittedForm().has("concurrentBuild");
=======
        keepDependencies = req.getParameter("keepDependencies") != null;

        concurrentBuild = req.getSubmittedForm().has("concurrentBuild");
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528016451/fstmerge_var2_8765250392057270632

        authToken = BuildAuthorizationToken.create(req);

        setScm(SCMS.parseSCM(req,this));

        for (Trigger t : triggers())
            t.stop();
        triggers.replaceBy(buildDescribable(req, Trigger.for_(this)));
        for (Trigger t : triggers())
            t.start(this,true);
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528016451/fstmerge_base_1309953585025711508

        for (Publisher _t : Descriptor.newInstancesFromHeteroList(req, json, "publisher", Jenkins.getInstance().getExtensionList(BuildTrigger.DescriptorImpl.class))) {
            BuildTrigger t = (BuildTrigger) _t;
            List<AbstractProject> childProjects;
            SecurityContext orig = ACL.impersonate(ACL.SYSTEM);
            try {
                childProjects = t.getChildProjects(this);
            } finally {
                SecurityContextHolder.setContext(orig);
            }
            for (AbstractProject downstream : childProjects) {
                downstream.checkPermission(BUILD);
            }
        }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528016451/fstmerge_var2_8765250392057270632
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35/core/src/main/java/hudson/model/AbstractProject.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528016856/fstmerge_var1_1762860375895748324
public static <I extends AbstractItem & TopLevelItem> I move(I item, DirectlyModifiableTopLevelItemGroup destination) throws IOException, IllegalArgumentException {
        DirectlyModifiableTopLevelItemGroup oldParent = (DirectlyModifiableTopLevelItemGroup) item.getParent();
        if (oldParent == destination) {
            throw new IllegalArgumentException();
        }
        // TODO verify that destination is to not equal to, or inside, item
        if (!destination.canAdd(item)) {
            throw new IllegalArgumentException();
        }
        String name = item.getName();
        if (destination.getItem(name) != null) {
            throw new IllegalArgumentException(name + " already exists");
        }
        String oldFullName = item.getFullName();
        // TODO AbstractItem.renameTo has a more baroque implementation; factor it out into a utility method perhaps?
        File destDir = destination.getRootDirFor(item);
        FileUtils.forceMkdir(destDir.getParentFile());
        FileUtils.moveDirectory(item.getRootDir(), destDir);
        oldParent.remove(item);
        I newItem = destination.add(item, name);
        item.movedTo(destination, newItem, destDir);
        ItemListener.fireLocationChange(newItem, oldFullName);
        return newItem;
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528016856/fstmerge_base_2367667571774344273
=======
public static <I extends AbstractItem & TopLevelItem> I move(I item, DirectlyModifiableTopLevelItemGroup destination) throws IOException, IllegalArgumentException {
        DirectlyModifiableTopLevelItemGroup oldParent = (DirectlyModifiableTopLevelItemGroup) item.getParent();
        if (oldParent == destination) {
            throw new IllegalArgumentException();
        }
        // TODO verify that destination is to not equal to, or inside, item
        if (!destination.canAdd(item)) {
            throw new IllegalArgumentException();
        }
        String name = item.getName();
        if (destination.getItem(name) != null) {
            throw new IllegalArgumentException(name + " already exists");
        }
        String oldFullName = item.getFullName();
        // TODO AbstractItem.renameTo has a more baroque implementation; factor it out into a utility method perhaps?
        File destDir = destination.getRootDirFor(item);
        FileUtils.forceMkdir(destDir.getParentFile());
        FileUtils.moveDirectory(item.getRootDir(), destDir);
        oldParent.remove(item);
        I newItem = destination.add(item, name);
        newItem.onLoad(destination, name);
        ItemListener.fireLocationChange(newItem, oldFullName);
        return newItem;
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528016856/fstmerge_var2_5131187340714979583

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35/core/src/main/java/hudson/model/Items.java
Conflict type: LineBasedMCFd
Conflict body: 
@RequirePOST
    public synchronized void doConfigSubmit(StaplerRequest req,
            StaplerResponse rsp) throws IOException, ServletException, FormException {
        checkPermission(CONFIGURE);

        description = req.getParameter("description");

<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528017238/fstmerge_var1_2403475743885427378
        JSONObject json = req.getSubmittedForm();

||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528017238/fstmerge_base_470104936800351390
        keepDependencies = req.getParameter("keepDependencies") != null;

=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528017238/fstmerge_var2_1659164435188321175
        try {
            setDisplayName(json.optString("displayNameOrNull"));

            if (json.optBoolean("logrotate"))
                logRotator = req.bindJSON(BuildDiscarder.class, json.optJSONObject("buildDiscarder"));
            else
                logRotator = null;

            DescribableList<JobProperty<?>, JobPropertyDescriptor> t = new DescribableList<JobProperty<?>, JobPropertyDescriptor>(NOOP,getAllProperties());
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528017238/fstmerge_base_470104936800351390
            t.rebuild(req,json.optJSONObject("properties"),JobPropertyDescriptor.getPropertyDescriptors(Job.this.getClass()));
=======
            JSONObject jsonProperties = json.optJSONObject("properties");
            if (jsonProperties != null) {
              t.rebuild(req,jsonProperties,JobPropertyDescriptor.getPropertyDescriptors(Job.this.getClass()));
            } else {
              t.clear();
            }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528017238/fstmerge_var2_1659164435188321175
            properties.clear();
            for (JobProperty p : t) {
                p.setOwner(this);
                properties.add(p);
            }

            submit(req, rsp);

            save();
            ItemListener.fireOnUpdated(this);

            String newName = req.getParameter("name");
            final ProjectNamingStrategy namingStrategy = Jenkins.getInstance().getProjectNamingStrategy();
            if (newName != null && !newName.equals(name)) {
                // check this error early to avoid HTTP response splitting.
                Jenkins.checkGoodName(newName);
                namingStrategy.checkName(newName);
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528017238/fstmerge_base_470104936800351390
                rsp.sendRedirect("rename?newName=" + URLEncoder.encode(newName, "UTF-8"));
=======
                if (FormApply.isApply(req)) {
                    FormApply.applyResponse("notificationBar.show(" + QuotedStringTokenizer.quote(Messages.Job_you_must_use_the_save_button_if_you_wish()) + ",notificationBar.WARNING)").generateResponse(req, rsp, null);
                } else {
                    rsp.sendRedirect("rename?newName=" + URLEncoder.encode(newName, "UTF-8"));
                }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528017238/fstmerge_var2_1659164435188321175
            } else {
                if(namingStrategy.isForceExistingJobs()){
                    namingStrategy.checkName(name);
                }
                FormApply.success(".").generateResponse(req, rsp, null);
            }
        } catch (JSONException e) {
            Logger.getLogger(Job.class.getName()).log(Level.WARNING, "failed to parse " + json, e);
            sendError(e, req, rsp);
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35/core/src/main/java/hudson/model/Job.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528019595/fstmerge_var1_7893668867798516992
public static void fireOnDeleted(final Item item) {
        forAll(new Function<ItemListener,Void>() {
            @Override public Void apply(ItemListener l) {
                l.onDeleted(item);
                return null;
            }
        }, true);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528019595/fstmerge_base_7729816564229554444
=======
public static void fireOnDeleted(Item item) {
        for (ItemListener l : all()) {
            l.onDeleted(item);
        }
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528019595/fstmerge_var2_5182705687499812383

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35/core/src/main/java/hudson/model/listeners/ItemListener.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528019598/fstmerge_var1_3770730865808153743
public static void fireLocationChange(final Item rootItem, final String oldFullName) {
        ACL.impersonate(ACL.SYSTEM, new Runnable() {
            @Override public void run() {
                doFireLocationChange(rootItem, oldFullName);
            }
        });
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528019598/fstmerge_base_4525249997037070593
=======
public static void fireLocationChange(Item rootItem, String oldFullName) {
        String prefix = rootItem.getParent().getFullName();
        if (!prefix.isEmpty()) {
            prefix += '/';
        }
        String newFullName = rootItem.getFullName();
        assert newFullName.startsWith(prefix);
        int prefixS = prefix.length();
        if (oldFullName.startsWith(prefix) && oldFullName.indexOf('/', prefixS) == -1) {
            String oldName = oldFullName.substring(prefixS);
            String newName = rootItem.getName();
            assert newName.equals(newFullName.substring(prefixS));
            for (ItemListener l : all()) {
                l.onRenamed(rootItem, oldName, newName);
            }
        }
        for (ItemListener l : all()) {
            l.onLocationChanged(rootItem, oldFullName, newFullName);
        }
        if (rootItem instanceof ItemGroup) {
            for (Item child : Items.getAllItems((ItemGroup) rootItem, Item.class)) {
                String childNew = child.getFullName();
                assert childNew.startsWith(newFullName);
                assert childNew.charAt(newFullName.length()) == '/';
                String childOld = oldFullName + childNew.substring(newFullName.length());
                for (ItemListener l : all()) {
                    l.onLocationChanged(child, childOld, childNew);
                }
            }
        }
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528019598/fstmerge_var2_7497573540911524066

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35/core/src/main/java/hudson/model/listeners/ItemListener.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528027506/fstmerge_var1_859882469940234959
private void record(Run<?,?> build, FilePath ws, TaskListener listener, Map<String,String> record, final String targets) throws IOException, InterruptedException {
        final class Record implements Serializable {
            final boolean produced;
            final String relativePath;
            final String fileName;
            final String md5sum;

            public Record(boolean produced, String relativePath, String fileName, String md5sum) {
                this.produced = produced;
                this.relativePath = relativePath;
                this.fileName = fileName;
                this.md5sum = md5sum;
            }

            Fingerprint addRecord(Run build) throws IOException {
                FingerprintMap map = Jenkins.getInstance().getFingerprintMap();
                return map.getOrCreate(produced?build:null, fileName, md5sum);
            }

            private static final long serialVersionUID = 1L;
        }

        final long buildTimestamp = build.getTimeInMillis();

        List<Record> records = ws.act(new FileCallable<List<Record>>() {
            public List<Record> invoke(File baseDir, VirtualChannel channel) throws IOException {
                List<Record> results = new ArrayList<Record>();

                FileSet src = Util.createFileSet(baseDir,targets);

                DirectoryScanner ds = src.getDirectoryScanner();
                for( String f : ds.getIncludedFiles() ) {
                    File file = new File(baseDir,f);

                    // consider the file to be produced by this build only if the timestamp
                    // is newer than when the build has started.
                    // 2000ms is an error margin since since VFAT only retains timestamp at 2sec precision
                    boolean produced = buildTimestamp <= file.lastModified()+2000;

                    try {
                        results.add(new Record(produced,f,file.getName(),new FilePath(file).digest()));
                    } catch (IOException e) {
                        throw new IOException(Messages.Fingerprinter_DigestFailed(file),e);
                    } catch (InterruptedException e) {
                        throw new IOException(Messages.Fingerprinter_Aborted(),e);
                    }
                }

                return results;
            }
        });

        for (Record r : records) {
            Fingerprint fp = r.addRecord(build);
            if(fp==null) {
                listener.error(Messages.Fingerprinter_FailedFor(r.relativePath));
                continue;
            }
            fp.addFor(build);
            record.put(r.relativePath,fp.getHashString());
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528027506/fstmerge_base_6151368761201238768
=======
private void record(Run<?,?> build, FilePath ws, TaskListener listener, Map<String,String> record, final String targets) throws IOException, InterruptedException {
        final class Record implements Serializable {
            final boolean produced;
            final String relativePath;
            final String fileName;
            final String md5sum;

            public Record(boolean produced, String relativePath, String fileName, String md5sum) {
                this.produced = produced;
                this.relativePath = relativePath;
                this.fileName = fileName;
                this.md5sum = md5sum;
            }

            Fingerprint addRecord(Run build) throws IOException {
                FingerprintMap map = Jenkins.getInstance().getFingerprintMap();
                return map.getOrCreate(produced?build:null, fileName, md5sum);
            }

            private static final long serialVersionUID = 1L;
        }

        final long buildTimestamp = build.getTimeInMillis();

        List<Record> records = ws.act(new MasterToSlaveFileCallable<List<Record>>() {
            public List<Record> invoke(File baseDir, VirtualChannel channel) throws IOException {
                List<Record> results = new ArrayList<Record>();

                FileSet src = Util.createFileSet(baseDir,targets);

                DirectoryScanner ds = src.getDirectoryScanner();
                for( String f : ds.getIncludedFiles() ) {
                    File file = new File(baseDir,f);

                    // consider the file to be produced by this build only if the timestamp
                    // is newer than when the build has started.
                    // 2000ms is an error margin since since VFAT only retains timestamp at 2sec precision
                    boolean produced = buildTimestamp <= file.lastModified()+2000;

                    try {
                        results.add(new Record(produced,f,file.getName(),new FilePath(file).digest()));
                    } catch (IOException e) {
                        throw new IOException(Messages.Fingerprinter_DigestFailed(file),e);
                    } catch (InterruptedException e) {
                        throw new IOException(Messages.Fingerprinter_Aborted(),e);
                    }
                }

                return results;
            }
        });

        for (Record r : records) {
            Fingerprint fp = r.addRecord(build);
            if(fp==null) {
                listener.error(Messages.Fingerprinter_FailedFor(r.relativePath));
                continue;
            }
            fp.addFor(build);
            record.put(r.relativePath,fp.getHashString());
        }
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528027506/fstmerge_var2_1956159252050736062

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35/core/src/main/java/hudson/tasks/Fingerprinter.java
Conflict type: LineBasedMCFd
Conflict body: 
public static Channel forProcess(String name, ExecutorService execService, InputStream in, OutputStream out, OutputStream header, final Proc proc) throws IOException {
        ChannelBuilder cb = new ChannelBuilder(name,execService) {
            @Override
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528029120/fstmerge_var1_2554822819964937391
            public synchronized void terminate(IOException e) {
                super.terminate(e);
                try {
                    proc.kill();
                } catch (IOException x) {
                    // we are already in the error recovery mode, so just record it and move on
                    LOGGER.log(Level.INFO, "Failed to terminate the severed connection",x);
                } catch (InterruptedException x) {
                    // process the interrupt later
                    Thread.currentThread().interrupt();
                }
            }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528029120/fstmerge_base_6540126668623477633
            protected synchronized void terminate(IOException e) {
                super.terminate(e);
                try {
                    proc.kill();
                } catch (IOException x) {
                    // we are already in the error recovery mode, so just record it and move on
                    LOGGER.log(Level.INFO, "Failed to terminate the severed connection",x);
                } catch (InterruptedException x) {
                    // process the interrupt later
                    Thread.currentThread().interrupt();
                }
            }
=======
            public Channel build(CommandTransport transport) throws IOException {
                return new Channel(this,transport) {
                    /**
                     * Kill the process when the channel is severed.
                     */
                    @Override
                    public synchronized void terminate(IOException e) {
                        super.terminate(e);
                        try {
                            proc.kill();
                        } catch (IOException x) {
                            // we are already in the error recovery mode, so just record it and move on
                            LOGGER.log(Level.INFO, "Failed to terminate the severed connection",x);
                        } catch (InterruptedException x) {
                            // process the interrupt later
                            Thread.currentThread().interrupt();
                        }
                    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528029120/fstmerge_var2_8796628434109311289

                    @Override
                    public synchronized void join() throws InterruptedException {
                        super.join();
                        // wait for the child process to complete, too
                        try {
                            proc.join();
                        } catch (IOException e) {
                            throw new IOError(e);
                        }
                    }
                };
            }
        };
        cb.withHeaderStream(header);

        for (ChannelConfigurator cc : ChannelConfigurator.all()) {
            cc.onChannelBuilding(cb,null);  // TODO: what to pass as a context?
        }

        return cb.build(in,out);
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35/core/src/main/java/hudson/slaves/Channels.java
Conflict type: LineBasedMCFd
Conflict body: 
public static Channel forProcess(String name, ExecutorService execService, final Process proc, OutputStream header) throws IOException {
        final Thread thread = new StreamCopyThread(name + " stderr", proc.getErrorStream(), header);
        thread.start();

        ChannelBuilder cb = new ChannelBuilder(name,execService) {
            @Override
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528029124/fstmerge_var1_4689200526780911648
            public synchronized void terminate(IOException e) {
                super.terminate(e);
                proc.destroy();
                // the stderr copier should exit by itself
            }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528029124/fstmerge_base_1719432649434648187
            protected synchronized void terminate(IOException e) {
                super.terminate(e);
                proc.destroy();
                // the stderr copier should exit by itself
            }
=======
            public Channel build(CommandTransport transport) throws IOException {
                return new Channel(this,transport) {
                    /**
                     * Kill the process when the channel is severed.
                     */
                    @Override
                    public synchronized void terminate(IOException e) {
                        super.terminate(e);
                        proc.destroy();
                        // the stderr copier should exit by itself
                    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528029124/fstmerge_var2_5752377842844232333

                    @Override
                    public synchronized void join() throws InterruptedException {
                        super.join();
                        // wait for the child process to complete, too
                        proc.waitFor();
                        thread.join();
                    }
                };
            }
        };
        cb.withHeaderStream(header);

        for (ChannelConfigurator cc : ChannelConfigurator.all()) {
            cc.onChannelBuilding(cb,null);  // TODO: what to pass as a context?
        }

        return cb.build(proc.getInputStream(),proc.getOutputStream());
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35/core/src/main/java/hudson/slaves/Channels.java
Conflict type: LineBasedMCFd
Conflict body: 
protected ProgressiveRendering() {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528034718/fstmerge_var1_855102671208595095
        securityContext = SecurityContextHolder.getContext();
        request = createMockRequest();
        uri = request.getRequestURI();
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528034718/fstmerge_base_3880001454763940384
        StaplerRequest currentRequest = Stapler.getCurrentRequest();
        uri = currentRequest != null ? currentRequest.getRequestURI() : "?";
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528034718/fstmerge_var2_691504792718698486
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35/core/src/main/java/jenkins/util/ProgressiveRendering.java
Conflict type: LineBasedMCFd
Conflict body: 
@SuppressWarnings("RV_RETURN_VALUE_IGNORED_BAD_PRACTICE")
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528034726/fstmerge_var1_5684417891409331381
    @JavaScriptMethod public final void start() {
        Ancestor ancestor = Stapler.getCurrentRequest().findAncestor(BoundObjectTable.class);
        if (ancestor == null) {
            throw new IllegalStateException("no BoundObjectTable");
        }
        boundObjectTable = ((BoundObjectTable) ancestor.getObject()).getTable();
        boundId = ancestor.getNextToken(0);
        LOG.log(Level.FINE, "starting rendering {0} at {1}", new Object[] {uri, boundId});
        final ExecutorService executorService = executorService();
        executorService.submit(new Runnable() {
            @Override public void run() {
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528034726/fstmerge_base_7250731104035920240
    public final void start() {
        final SecurityContext securityContext = SecurityContextHolder.getContext();
        executorService().submit(new Runnable() {
            public void run() {
=======
    public final void start() {
        final SecurityContext securityContext = SecurityContextHolder.getContext();
        final RequestImpl request = createMockRequest();
        uri = request.getRequestURI();
        executorService().submit(new Runnable() {
            @Override public void run() {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528034726/fstmerge_var2_5259165078479725646
                lastNewsTime = start = System.currentTimeMillis();
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528034726/fstmerge_base_7250731104035920240
=======
                setCurrentRequest(request);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528034726/fstmerge_var2_5259165078479725646
                SecurityContext orig = SecurityContextHolder.getContext();
                try {
                    SecurityContextHolder.setContext(securityContext);
                    compute();
                    if (status != CANCELED && status != ERROR) {
                        status = 1;
                    }
                } catch (Exception x) {
                    LOG.log(Level.WARNING, "failed to compute " + uri, x);
                    status = ERROR;
                } finally {
                    SecurityContextHolder.setContext(orig);
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528034726/fstmerge_base_7250731104035920240
=======
                    setCurrentRequest(null);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528034726/fstmerge_var2_5259165078479725646
                    LOG.log(Level.FINE, "{0} finished in {1}msec with status {2}", new Object[] {uri, System.currentTimeMillis() - start, status});
                }
                if (executorService instanceof ScheduledExecutorService) {
                    ((ScheduledExecutorService) executorService).schedule(new Runnable() {
                        @Override public void run() {
                            LOG.log(Level.FINE, "some time has elapsed since {0} finished, so releasing", boundId);
                            release();
                        }
                    }, timeout() /* add some grace period for browser/network overhead */ * 2, TimeUnit.MILLISECONDS);
                }
            }
        });
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35/core/src/main/java/jenkins/util/ProgressiveRendering.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528034730/fstmerge_var1_6213146337172878730
@java.lang.SuppressWarnings({"rawtypes", "unchecked"}) // public RequestImpl ctor requires List<AncestorImpl> yet AncestorImpl is not public! API design flaw
    private static RequestImpl createMockRequest() {
        RequestImpl currentRequest = (RequestImpl) Stapler.getCurrentRequest();
        HttpServletRequest original = (HttpServletRequest) currentRequest.getRequest();
        final Map<String,Object> getters = new HashMap<String,Object>();
        for (Method method : HttpServletRequest.class.getMethods()) {
            String m = method.getName();
            if ((m.startsWith("get") || m.startsWith("is")) && method.getParameterTypes().length == 0) {
                Class<?> type = method.getReturnType();
                // TODO could add other types which are known to be safe to copy: Cookie[], Principal, HttpSession, etc.
                if (type.isPrimitive() || type == String.class || type == Locale.class) {
                    try {
                        getters.put(m, method.invoke(original));
                    } catch (Exception x) {
                        LOG.log(Level.WARNING, "cannot mock Stapler request " + method, x);
                    }
                }
            }
        }
        List/*<AncestorImpl>*/ ancestors = currentRequest.ancestors;
        LOG.log(Level.FINER, "mocking ancestors {0} using {1}", new Object[] {ancestors, getters});
        TokenList tokens = currentRequest.tokens;
        return new RequestImpl(Stapler.getCurrent(), (HttpServletRequest) Proxy.newProxyInstance(ProgressiveRendering.class.getClassLoader(), new Class<?>[] {HttpServletRequest.class}, new InvocationHandler() {
            @Override public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {
                String m = method.getName();
                if (getters.containsKey(m)) {
                    return getters.get(m);
                } else { // TODO implement other methods as needed
                    throw new UnsupportedOperationException(m);
                }
            }
        }), ancestors, tokens);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528034730/fstmerge_base_8899147884341138079
=======
@java.lang.SuppressWarnings({"rawtypes", "unchecked"}) // public RequestImpl ctor requires List<AncestorImpl> yet AncestorImpl is not public! API design flaw
    private static RequestImpl createMockRequest() {
        RequestImpl currentRequest = (RequestImpl) Stapler.getCurrentRequest();
        HttpServletRequest original = (HttpServletRequest) currentRequest.getRequest();
        final Map<String,Object> getters = new HashMap<String,Object>();
        for (Method method : HttpServletRequest.class.getMethods()) {
            String m = method.getName();
            if ((m.startsWith("get") || m.startsWith("is")) && method.getParameterTypes().length == 0) {
                Class<?> type = method.getReturnType();
                // TODO could add other types which are known to be safe to copy: Cookie[], Principal, HttpSession, etc.
                if (type.isPrimitive() || type == String.class || type == Locale.class) {
                    try {
                        getters.put(m, method.invoke(original));
                    } catch (Exception x) {
                        LOG.log(Level.WARNING, "cannot mock Stapler request " + method, x);
                    }
                }
            }
        }
        List/*<AncestorImpl>*/ ancestors = currentRequest.ancestors;
        LOG.log(Level.FINE, "mocking ancestors {0} using {1}", new Object[] {ancestors, getters});
        TokenList tokens = currentRequest.tokens;
        return new RequestImpl(Stapler.getCurrent(), (HttpServletRequest) Proxy.newProxyInstance(ProgressiveRendering.class.getClassLoader(), new Class<?>[] {HttpServletRequest.class}, new InvocationHandler() {
            @Override public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {
                String m = method.getName();
                if (getters.containsKey(m)) {
                    return getters.get(m);
                } else { // TODO implement other methods as needed
                    throw new UnsupportedOperationException(m);
                }
            }
        }), ancestors, tokens);
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528034730/fstmerge_var2_2625713289705052577

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35/core/src/main/java/jenkins/util/ProgressiveRendering.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528035470/fstmerge_var1_7887889666345673204
@Override public InputStream open() throws IOException {
                return f.read();
            }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528035470/fstmerge_base_7801397755884389839
=======
@Override public InputStream open() throws IOException {
                try {
                    return f.read();
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528035470/fstmerge_var2_2262314233196947355

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35/core/src/main/java/jenkins/util/VirtualFile.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528036790/fstmerge_var1_3171308144356676582
private void install(Computer c, TaskListener listener) {
        try {
            final List<SlaveRestarter> restarters = new ArrayList<SlaveRestarter>(SlaveRestarter.all());

            VirtualChannel ch = c.getChannel();
            if (ch==null) return;  // defensive check

            List<SlaveRestarter> effective = ch.call(new Callable<List<SlaveRestarter>, IOException>() {
                public List<SlaveRestarter> call() throws IOException {
                    Engine e = Engine.current();
                    if (e == null) return null;    // not running under Engine

                    try {
                        Engine.class.getMethod("addListener", EngineListener.class);
                    } catch (NoSuchMethodException _) {
                        return null;    // running with older version of remoting that doesn't support adding listener
                    }

                    // filter out ones that doesn't apply
                    for (Iterator<SlaveRestarter> itr = restarters.iterator(); itr.hasNext(); ) {
                        SlaveRestarter r =  itr.next();
                        if (!r.canWork())
                            itr.remove();
                    }

                    e.addListener(new EngineListenerAdapter() {
                        @Override
                        public void onDisconnect() {
                            try {
                                for (SlaveRestarter r : restarters) {
                                    try {
                                        LOGGER.info("Restarting slave via "+r);
                                        r.restart();
                                    } catch (Exception x) {
                                        LOGGER.log(SEVERE, "Failed to restart slave with "+r, x);
                                    }
                                }
                            } finally {
                                // if we move on to the reconnection without restart,
                                // don't let the current implementations kick in when the slave loses connection again
                                restarters.clear();
                            }
                        }
                    });

                    return restarters;
                }
            });

            LOGGER.log(FINE, "Effective SlaveRestarter on {0}: {1}", new Object[] {c.getName(), effective});
        } catch (Throwable e) {
            e.printStackTrace(listener.error("Failed to install restarter"));
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528036790/fstmerge_base_1783620410602914003
=======
private void install(Computer c, TaskListener listener) {
        try {
            final List<SlaveRestarter> restarters = new ArrayList<SlaveRestarter>(SlaveRestarter.all());

            VirtualChannel ch = c.getChannel();
            if (ch==null) return;  // defensive check

            List<SlaveRestarter> effective = ch.call(new MasterToSlaveCallable<List<SlaveRestarter>, IOException>() {
                public List<SlaveRestarter> call() throws IOException {
                    Engine e = Engine.current();
                    if (e == null) return null;    // not running under Engine

                    try {
                        Engine.class.getMethod("addListener", EngineListener.class);
                    } catch (NoSuchMethodException _) {
                        return null;    // running with older version of remoting that doesn't support adding listener
                    }

                    // filter out ones that doesn't apply
                    for (Iterator<SlaveRestarter> itr = restarters.iterator(); itr.hasNext(); ) {
                        SlaveRestarter r =  itr.next();
                        if (!r.canWork())
                            itr.remove();
                    }

                    e.addListener(new EngineListenerAdapter() {
                        @Override
                        public void onDisconnect() {
                            try {
                                for (SlaveRestarter r : restarters) {
                                    try {
                                        LOGGER.info("Restarting slave via "+r);
                                        r.restart();
                                    } catch (Exception x) {
                                        LOGGER.log(SEVERE, "Failed to restart slave with "+r, x);
                                    }
                                }
                            } finally {
                                // if we move on to the reconnection without restart,
                                // don't let the current implementations kick in when the slave loses connection again
                                restarters.clear();
                            }
                        }
                    });

                    return restarters;
                }
            });

            LOGGER.log(FINE, "Effective SlaveRestarter on {0}: {1}", new Object[] {c.getName(), effective});
        } catch (Throwable e) {
            e.printStackTrace(listener.error("Failed to install restarter"));
        }
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528036790/fstmerge_var2_8236164069778167558

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35/core/src/main/java/jenkins/slaves/restarter/JnlpSlaveRestarterInstaller.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528037626/fstmerge_var1_2374671587146125894
@Bug(20800)
    @Test public void printLogRecordHtml() throws Exception {
        LogRecord lr = new LogRecord(Level.INFO, "Bad input <xml/>");
        lr.setLoggerName("test");
        assertEquals("Bad input &lt;xml/&gt;\n", Functions.printLogRecordHtml(lr, null)[3]);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528037626/fstmerge_base_3091416463057906619
=======
@Bug(20800)
    @Test public void printLogRecordHtml() throws Exception {
        LogRecord lr = new LogRecord(Level.INFO, "Bad input <xml/>");
        lr.setLoggerName("test");
        assertEquals("Bad input &lt;xml/>\n", Functions.printLogRecordHtml(lr, null)[3]);
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528037626/fstmerge_var2_4839748296880669969

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35/core/src/test/java/hudson/FunctionsTest.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528039333/fstmerge_var1_5973046402023810564
@Test
    public void testAnnotate() {
        assertEquals("Hello &lt;foo&gt;<a href='http://foo/'>http://foo/</a>&lt;/foo&gt; Bye",
                     annotate("Hello <foo>http://foo/</foo> Bye"));

||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528039333/fstmerge_base_5288057921962207883
public void testAnnotate() {
        ConsoleAnnotator ca = new UrlAnnotator().newInstance(null);
        MarkupText text = new MarkupText("Hello <foo>http://foo/</foo> Bye");
        ca.annotate(null, text);
        assertEquals("Hello &lt;foo><a href='http://foo/'>http://foo/</a>&lt;/foo> Bye",
                     text.toString(true));
        text = new MarkupText("Hello [foo]http://foo/bar.txt[/foo] Bye");
        ca.annotate(null, text);
=======
@Test
    public void testAnnotate() {
        assertEquals("Hello &lt;foo><a href='http://foo/'>http://foo/</a>&lt;/foo> Bye",
                     annotate("Hello <foo>http://foo/</foo> Bye"));

>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528039333/fstmerge_var2_6267229452775835862
        assertEquals("Hello [foo]<a href='http://foo/bar.txt'>http://foo/bar.txt</a>[/foo] Bye",
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528039333/fstmerge_base_5288057921962207883
                     text.toString(true));
        text = new MarkupText(
                "Hello 'http://foo' or \"ftp://bar\" or <https://baz/> or (http://a.b.c/x.y) Bye");
        ca.annotate(null, text);
=======
                     annotate("Hello [foo]http://foo/bar.txt[/foo] Bye"));

>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528039333/fstmerge_var2_6267229452775835862
        assertEquals("Hello '<a href='http://foo'>http://foo</a>' or \"<a href='ftp://bar'>"
                + "ftp://bar</a>\" or &lt;<a href='https://baz/'>https://baz/</a>&gt; or (<a "
                + "href='http://a.b.c/x.y'>http://a.b.c/x.y</a>) Bye",
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528039333/fstmerge_base_5288057921962207883
                text.toString(true));
        text = new MarkupText("Fake 'http://foo or \"ftp://bar or <https://baz/ or (http://a.b.c/x.y Bye");
        ca.annotate(null, text);
=======
                annotate("Hello 'http://foo' or \"ftp://bar\" or <https://baz/> or (http://a.b.c/x.y) Bye"));

>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528039333/fstmerge_var2_6267229452775835862
        assertEquals("Fake '<a href='http://foo'>http://foo</a> or \"<a href='ftp://bar'>"
                + "ftp://bar</a> or &lt;<a href='https://baz/'>https://baz/</a> or (<a "
                + "href='http://a.b.c/x.y'>http://a.b.c/x.y</a> Bye",
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528039333/fstmerge_base_5288057921962207883
                text.toString(true));
        text = new MarkupText("Punctuation: http://foo/.");
        ca.annotate(null, text);
        assertEquals("Punctuation: <a href='http://foo/'>http://foo/</a>.", text.toString(true));
=======
                annotate("Fake 'http://foo or \"ftp://bar or <https://baz/ or (http://a.b.c/x.y Bye"));

        assertEquals("Punctuation: <a href='http://foo/'>http://foo/</a>.", annotate("Punctuation: http://foo/."));
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528039333/fstmerge_var2_6267229452775835862
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35/core/src/test/java/hudson/console/UrlAnnotatorTest.java
Conflict type: LineBasedMCFd
Conflict body: 
protected void setUpTimeout() {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528041666/fstmerge_base_4880255633538235850
        if (timeout<=0)     return; // no timeout

=======
        if (timeout <= 0) {
            System.out.println("Test timeout disabled.");
            return;
        }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528041666/fstmerge_var2_8184200236264572403
        final Thread testThread = Thread.currentThread();
        timeoutTimer = new Timer();
        timeoutTimer.schedule(new TimerTask() {
            @Override
            public void run() {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528041666/fstmerge_var1_7336798117714719776
                if (timeoutTimer!=null) {
                    LOGGER.warning(String.format("Test timed out (after %d seconds).", timeout));
                    dumpThreads();
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528041666/fstmerge_base_4880255633538235850
                if (timeoutTimer!=null)
=======
                if (timeoutTimer!=null) {
                    LOGGER.warning(String.format("Test timed out (after %d seconds).", timeout));
                    // dump threads
                    ThreadInfo[] threadInfos = Functions.getThreadInfos();
                    Functions.ThreadGroupMap m = Functions.sortThreadsAndGetGroupMap(threadInfos);
                    for (ThreadInfo ti : threadInfos) {
                        System.err.println(Functions.dumpThreadInfo(ti, m));
                    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528041666/fstmerge_var2_8184200236264572403
                    testThread.interrupt();
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528041666/fstmerge_base_4880255633538235850
=======
                }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528041666/fstmerge_var2_8184200236264572403
            }
        }, TimeUnit.SECONDS.toMillis(timeout));
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35/test/src/main/java/org/jvnet/hudson/test/JenkinsRule.java
Conflict type: LineBasedMCFd
Conflict body: 
public void testFormValidation() throws Exception {
        executeOnServer(new Callable<Object>() {
            public Object call() throws Exception {
                DescriptorImpl d = jenkins.getDescriptorByType(DescriptorImpl.class);

                Label l = jenkins.getLabel("foo");
                DumbSlave s = createSlave(l);
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528045230/fstmerge_var1_6981460515943177654
                String msg = d.doCheckLabel(null, "goo").renderHtml();
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528045230/fstmerge_base_2993942328251068515
                String msg = d.doCheckAssignedLabelString("goo").renderHtml();
=======
                String msg = d.doCheckAssignedLabelString(null, "goo").renderHtml();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528045230/fstmerge_var2_5316284623026248786
                assertTrue(msg.contains("foo"));
                assertTrue(msg.contains("goo"));

<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528045230/fstmerge_var1_6981460515943177654
                msg = d.doCheckLabel(null, "master && goo").renderHtml();
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528045230/fstmerge_base_2993942328251068515
                msg = d.doCheckAssignedLabelString("master && goo").renderHtml();
=======
                msg = d.doCheckAssignedLabelString(null, "master && goo").renderHtml();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528045230/fstmerge_var2_5316284623026248786
                assertTrue(msg.contains("foo"));
                assertTrue(msg.contains("goo"));
                return null;
            }
        });
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_7c225_85f35/rev_7c225-85f35/test/src/test/java/hudson/model/labels/LabelExpressionTest.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_11b24_ccbe9/rev_11b24-ccbe9.revisions
Conflict type: LineBasedMCFd
Conflict body: 
public void unzip(final FilePath target) throws IOException, InterruptedException {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335498/fstmerge_var1_8621101888878666877
        // TODO: post release, re-unite two branches by introducing FileStreamCallable that resolves InputStream
        if (this.channel!=target.channel) {// local -> remote or remote->local
            final RemoteInputStream in = new RemoteInputStream(read(), Flag.GREEDY);
            target.act(new SecureFileCallable<Void>() {
                public Void invoke(File dir, VirtualChannel channel) throws IOException, InterruptedException {
                    unzip(dir, in);
                    return null;
                }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335498/fstmerge_base_1013772785544303026
        target.act(new FileCallable<Void>() {
=======
        target.act(new SecureFileCallable<Void>() {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335498/fstmerge_var2_2547212128428230994

<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335498/fstmerge_var1_8621101888878666877
                private static final long serialVersionUID = 1L;
            });
        } else {// local -> local or remote->remote
            target.act(new SecureFileCallable<Void>() {

                public Void invoke(File dir, VirtualChannel channel) throws IOException, InterruptedException {
                    assert !FilePath.this.isRemote();       // this.channel==target.channel above
                    unzip(dir, reading(new File(FilePath.this.getRemote()))); // shortcut to local file
                    return null;
                }

                private static final long serialVersionUID = 1L;
            });
        }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335498/fstmerge_base_1013772785544303026
            public Void invoke(File dir, VirtualChannel channel) throws IOException {
                if (FilePath.this.isRemote())
                    unzip(dir, FilePath.this.read()); // use streams
                else
                    unzip(dir, new File(FilePath.this.getRemote())); // shortcut to local file
                return null;
            }
            private static final long serialVersionUID = 1L;
        });
=======
            public Void invoke(File dir, VirtualChannel channel) throws IOException, InterruptedException {
                if (FilePath.this.isRemote())
                    unzip(dir, FilePath.this.read()); // use streams
                else
                    unzip(dir, reading(new File(FilePath.this.getRemote()))); // shortcut to local file
                return null;
            }
            private static final long serialVersionUID = 1L;
        });
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335498/fstmerge_var2_2547212128428230994
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_11b24_ccbe9/rev_11b24-ccbe9/core/src/main/java/hudson/FilePath.java
Conflict type: LineBasedMCFd
Conflict body: 
public void untar(final FilePath target, final TarCompression compression) throws IOException, InterruptedException {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335503/fstmerge_var1_4438125228388240437
        // TODO: post release, re-unite two branches by introducing FileStreamCallable that resolves InputStream
        if (this.channel!=target.channel) {// local -> remote or remote->local
            final RemoteInputStream in = new RemoteInputStream(read(), Flag.GREEDY);
            target.act(new SecureFileCallable<Void>() {
                public Void invoke(File dir, VirtualChannel channel) throws IOException, InterruptedException {
                    readFromTar(FilePath.this.getName(),dir,compression.extract(in));
                    return null;
                }

                private static final long serialVersionUID = 1L;
            });
        } else {// local -> local or remote->remote
            target.act(new SecureFileCallable<Void>() {
                public Void invoke(File dir, VirtualChannel channel) throws IOException, InterruptedException {
                    readFromTar(FilePath.this.getName(),dir,compression.extract(FilePath.this.read()));
                    return null;
                }
                private static final long serialVersionUID = 1L;
            });
        }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335503/fstmerge_base_8041693833262046417
        target.act(new FileCallable<Void>() {
            public Void invoke(File dir, VirtualChannel channel) throws IOException {
                readFromTar(FilePath.this.getName(),dir,compression.extract(FilePath.this.read()));
                return null;
            }
            private static final long serialVersionUID = 1L;
        });
=======
        target.act(new SecureFileCallable<Void>() {
            public Void invoke(File dir, VirtualChannel channel) throws IOException, InterruptedException {
                readFromTar(FilePath.this.getName(),dir,compression.extract(FilePath.this.read()));
                return null;
            }
            private static final long serialVersionUID = 1L;
        });
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335503/fstmerge_var2_6587597128180654566
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_11b24_ccbe9/rev_11b24-ccbe9/core/src/main/java/hudson/FilePath.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335517/fstmerge_base_472987351999759743
static private void unzip(File dir, File zipFile) throws IOException {
=======
private void unzip(File dir, File zipFile) throws IOException {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335517/fstmerge_var2_5709430591025455628
        dir = dir.getAbsoluteFile();    // without absolutization, getParentFile below seems to fail
        ZipFile zip = new ZipFile(zipFile);
        @SuppressWarnings("unchecked")
        Enumeration<ZipEntry> entries = zip.getEntries();

        try {
            while (entries.hasMoreElements()) {
                ZipEntry e = entries.nextElement();
                File f = new File(dir, e.getName());
                if (e.isDirectory()) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335517/fstmerge_base_472987351999759743
                    f.mkdirs();
=======
                    mkdirs(f);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335517/fstmerge_var2_5709430591025455628
                } else {
                    File p = f.getParentFile();
                    if (p != null) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335517/fstmerge_var1_7309685050869776408
                        mkdirs(p);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335517/fstmerge_base_472987351999759743
                        p.mkdirs();
=======
                        mkdirs(p);
                    }
                    InputStream input = zip.getInputStream(e);
                    try {
                        IOUtils.copy(input, writing(f));
                    } finally {
                        input.close();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335517/fstmerge_var2_5709430591025455628
                    }
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335517/fstmerge_var1_7309685050869776408
                    IOUtils.copy(zip.getInputStream(e), writing(f));
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335517/fstmerge_base_472987351999759743
                    IOUtils.copy(zip.getInputStream(e), f);
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335517/fstmerge_var2_5709430591025455628
                    try {
                        FilePath target = new FilePath(f);
                        int mode = e.getUnixMode();
                        if (mode!=0)    // Ant returns 0 if the archive doesn't record the access mode
                            target.chmod(mode);
                    } catch (InterruptedException ex) {
                        LOGGER.log(Level.WARNING, "unable to set permissions", ex);
                    }
                    f.setLastModified(e.getTime());
                }
            }
        } finally {
            zip.close();
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_11b24_ccbe9/rev_11b24-ccbe9/core/src/main/java/hudson/FilePath.java
Conflict type: LineBasedMCFd
Conflict body: 
private <T> T act(final FileCallable<T> callable, ClassLoader cl) throws IOException, InterruptedException {
        if(channel!=null) {
            // run this on a remote system
            try {
                DelegatingCallable<T,IOException> wrapper = new FileCallableWrapper<T>(callable, cl);
                for (FileCallableWrapperFactory factory : ExtensionList.lookup(FileCallableWrapperFactory.class)) {
                    wrapper = factory.wrap(wrapper);
                }
                return channel.call(wrapper);
            } catch (TunneledInterruptedException e) {
                throw (InterruptedException)new InterruptedException(e.getMessage()).initCause(e);
            } catch (AbortException e) {
                throw e;    // pass through so that the caller can catch it as AbortException
            } catch (IOException e) {
                // wrap it into a new IOException so that we get the caller's stack trace as well.
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335600/fstmerge_var1_4618067195022726370
                throw new IOException("remote file operation failed: " + remote + " at " + channel + ": " + e, e);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335600/fstmerge_base_3199392160880373966
                throw new IOException2("remote file operation failed: "+remote+" at "+channel,e);
=======
                throw new IOException("remote file operation failed: "+remote+" at "+channel,e);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335600/fstmerge_var2_2793607433381495669
            }
        } else {
            // the file is on the local machine.
            return callable.invoke(new File(remote), localChannel);
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_11b24_ccbe9/rev_11b24-ccbe9/core/src/main/java/hudson/FilePath.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335800/fstmerge_base_7206392233592378362
public InputStream read() throws IOException {
=======
public InputStream read() throws IOException, InterruptedException {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335800/fstmerge_var2_4843836547682482282
        if(channel==null)
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335800/fstmerge_base_7206392233592378362
            return new FileInputStream(new File(remote));
=======
            return new FileInputStream(reading(new File(remote)));
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335800/fstmerge_var2_4843836547682482282

        final Pipe p = Pipe.createRemoteToLocal();
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335800/fstmerge_base_7206392233592378362
        channel.callAsync(new Callable<Void,IOException>() {
=======
        actAsync(new SecureFileCallable<Void>() {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335800/fstmerge_var2_4843836547682482282
            private static final long serialVersionUID = 1L;
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335800/fstmerge_base_7206392233592378362
            public Void call() throws IOException {
                FileInputStream fis=null;
=======

            @Override
            public Void invoke(File f, VirtualChannel channel) throws IOException, InterruptedException {
                FileInputStream fis = null;
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335800/fstmerge_var2_4843836547682482282
                try {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335800/fstmerge_var1_6774226953628751501
                    fis = new FileInputStream(reading(f));
                    Util.copyStream(fis, p.getOut());
                } catch (Exception x) {
                    p.error(x);
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335800/fstmerge_base_7206392233592378362
                    fis = new FileInputStream(new File(remote));
                    Util.copyStream(fis,p.getOut());
                    return null;
=======
                    fis = new FileInputStream(reading(f));
                    Util.copyStream(fis, p.getOut());
                    return null;
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335800/fstmerge_var2_4843836547682482282
                } finally {
                    org.apache.commons.io.IOUtils.closeQuietly(fis);
                    org.apache.commons.io.IOUtils.closeQuietly(p.getOut());
                }
                return null;
            }
        });

        return p.getIn();
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_11b24_ccbe9/rev_11b24-ccbe9/core/src/main/java/hudson/FilePath.java
Conflict type: LineBasedMCFd
Conflict body: 
public void moveAllChildrenTo(final FilePath target) throws IOException, InterruptedException {
        if(this.channel != target.channel) {
            throw new IOException("pullUpTo target must be on the same host");
        }
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335827/fstmerge_base_6466909054699166177
        act(new FileCallable<Void>() {
=======
        act(new SecureFileCallable<Void>() {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335827/fstmerge_var2_5760667540856242256
            private static final long serialVersionUID = 1L;
            public Void invoke(File f, VirtualChannel channel) throws IOException {
                // JENKINS-16846: if f.getName() is the same as one of the files/directories in f,
                // then the rename op will fail
                File tmp = new File(f.getAbsolutePath()+".__rename");
                if (!f.renameTo(tmp))
                    throw new IOException("Failed to rename "+f+" to "+tmp);

                File t = new File(target.getRemote());
                
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335827/fstmerge_var1_7918073703537601741
                for(File child : reading(f).listFiles()) {
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335827/fstmerge_base_6466909054699166177
                for(File child : f.listFiles()) {
=======
                for(File child : reading(tmp).listFiles()) {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335827/fstmerge_var2_5760667540856242256
                    File target = new File(t, child.getName());
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335827/fstmerge_base_6466909054699166177
                    if(!child.renameTo(target))
=======
                    if(!stating(child).renameTo(creating(target)))
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335827/fstmerge_var2_5760667540856242256
                        throw new IOException("Failed to rename "+child+" to "+target);
                }
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335827/fstmerge_var1_7918073703537601741
                deleting(f).delete();
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335827/fstmerge_base_6466909054699166177
                f.delete();
=======
                deleting(tmp).delete();
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335827/fstmerge_var2_5760667540856242256
                return null;
            }
        });
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_11b24_ccbe9/rev_11b24-ccbe9/core/src/main/java/hudson/FilePath.java
Conflict type: LineBasedMCFd
Conflict body: 
public int copyRecursiveTo(final DirScanner scanner, final FilePath target, final String description) throws IOException, InterruptedException {
        if(this.channel==target.channel) {
            // local to local copy.
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335888/fstmerge_base_4785943533978566510
            return act(new FileCallable<Integer>() {
=======
            return act(new SecureFileCallable<Integer>() {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335888/fstmerge_var2_4168984877492420779
                private static final long serialVersionUID = 1L;
                public Integer invoke(File base, VirtualChannel channel) throws IOException {
                    if(!base.exists())  return 0;
                    assert target.channel==null;
                    final File dest = new File(target.remote);
                    final AtomicInteger count = new AtomicInteger();
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335888/fstmerge_base_4785943533978566510
                    scanner.scan(base, new FileVisitor() {
                        @Override public void visit(File f, String relativePath) throws IOException {
=======
                    scanner.scan(base, reading(new FileVisitor() {
                        @Override
                        public void visit(File f, String relativePath) throws IOException {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335888/fstmerge_var2_4168984877492420779
                            if (f.isFile()) {
                                File target = new File(dest, relativePath);
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335888/fstmerge_var1_3011770930190309331
                                mkdirs(target.getParentFile());
                                Util.copyFile(f, writing(target));
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335888/fstmerge_base_4785943533978566510
                                target.getParentFile().mkdirs();
                                Util.copyFile(f, target);
=======
                                mkdirsE(target.getParentFile());
                                Util.copyFile(f, writing(target));
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335888/fstmerge_var2_4168984877492420779
                                count.incrementAndGet();
                            }
                        }
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335888/fstmerge_base_4785943533978566510
                        @Override public boolean understandsSymlink() {
=======

                        @Override
                        public boolean understandsSymlink() {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335888/fstmerge_var2_4168984877492420779
                            return true;
                        }
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335888/fstmerge_base_4785943533978566510
                        @Override public void visitSymlink(File link, String target, String relativePath) throws IOException {
=======

                        @Override
                        public void visitSymlink(File link, String target, String relativePath) throws IOException {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335888/fstmerge_var2_4168984877492420779
                            try {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335888/fstmerge_var1_3011770930190309331
                                writing(new File(dest, target));
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335888/fstmerge_base_4785943533978566510
=======
                                mkdirsE(new File(dest, relativePath).getParentFile());
                                writing(new File(dest, target));
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335888/fstmerge_var2_4168984877492420779
                                Util.createSymlink(dest, target, relativePath, TaskListener.NULL);
                            } catch (InterruptedException x) {
                                throw (IOException) new IOException(x.toString()).initCause(x);
                            }
                            count.incrementAndGet();
                        }
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335888/fstmerge_base_4785943533978566510
                    });
=======
                    }));
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335888/fstmerge_var2_4168984877492420779
                    return count.get();
                }
            });
        } else
        if(this.channel==null) {
            // local -> remote copy
            final Pipe pipe = Pipe.createLocalToRemote();

<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335888/fstmerge_base_4785943533978566510
            Future<Void> future = target.actAsync(new FileCallable<Void>() {
=======
            Future<Void> future = target.actAsync(new SecureFileCallable<Void>() {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335888/fstmerge_var2_4168984877492420779
                private static final long serialVersionUID = 1L;
                public Void invoke(File f, VirtualChannel channel) throws IOException {
                    try {
                        readFromTar(remote + '/' + description, f,TarCompression.GZIP.extract(pipe.getIn()));
                        return null;
                    } finally {
                        pipe.getIn().close();
                    }
                }
            });
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335888/fstmerge_base_4785943533978566510
            Future<Integer> future2 = actAsync(new FileCallable<Integer>() {
=======
            Future<Integer> future2 = actAsync(new SecureFileCallable<Integer>() {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335888/fstmerge_var2_4168984877492420779
                private static final long serialVersionUID = 1L;
                @Override public Integer invoke(File f, VirtualChannel channel) throws IOException, InterruptedException {
                    return writeToTar(new File(remote), scanner, TarCompression.GZIP.compress(pipe.getOut()));
                }
            });
            try {
                // JENKINS-9540 in case the reading side failed, report that error first
                future.get();
                return future2.get();
            } catch (ExecutionException e) {
                throw new IOException(e);
            }
        } else {
            // remote -> local copy
            final Pipe pipe = Pipe.createRemoteToLocal();

<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335888/fstmerge_base_4785943533978566510
            Future<Integer> future = actAsync(new FileCallable<Integer>() {
=======
            Future<Integer> future = actAsync(new SecureFileCallable<Integer>() {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528335888/fstmerge_var2_4168984877492420779
                private static final long serialVersionUID = 1L;
                public Integer invoke(File f, VirtualChannel channel) throws IOException {
                    try {
                        return writeToTar(f, scanner, TarCompression.GZIP.compress(pipe.getOut()));
                    } finally {
                        pipe.getOut().close();
                    }
                }
            });
            try {
                readFromTar(remote + '/' + description,new File(target.remote),TarCompression.GZIP.extract(pipe.getIn()));
            } catch (IOException e) {// BuildException or IOException
                try {
                    future.get(3,TimeUnit.SECONDS);
                    throw e;    // the remote side completed successfully, so the error must be local
                } catch (ExecutionException x) {
                    // report both errors
                    throw new IOException(Functions.printThrowable(e),x);
                } catch (TimeoutException _) {
                    // remote is hanging
                    throw e;
                }
            }
            try {
                return future.get();
            } catch (ExecutionException e) {
                throw new IOException(e);
            }
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_11b24_ccbe9/rev_11b24-ccbe9/core/src/main/java/hudson/FilePath.java
Conflict type: LineBasedMCFd
Conflict body: 
public ClientAuthenticationCache(Channel channel) throws IOException, InterruptedException {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528340711/fstmerge_var1_2765072183652974429
        store = (channel==null ? MasterComputer.localChannel :  channel).call(new MasterToSlaveCallable<FilePath, IOException>() {
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528340711/fstmerge_base_4270339860728535117
        store = (channel==null ? MasterComputer.localChannel :  channel).call(new Callable<FilePath, IOException>() {
=======
        store = (channel==null ? FilePath.localChannel :  channel).call(new MasterToSlaveCallable<FilePath, IOException>() {
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528340711/fstmerge_var2_5638085238209015856
            public FilePath call() throws IOException {
                File home = new File(System.getProperty("user.home"));
                File hudsonHome = new File(home, ".hudson");
                if (hudsonHome.exists()) {
                    return new FilePath(new File(hudsonHome, "cli-credentials"));
                }
                return new FilePath(new File(home, ".jenkins/cli-credentials"));
            }
        });
        if (store.exists()) {
            props.load(store.read());
        }
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_11b24_ccbe9/rev_11b24-ccbe9/core/src/main/java/hudson/cli/ClientAuthenticationCache.java
Conflict type: LineBasedMCFd
Conflict body: 
public static FilePath getHeapDump(VirtualChannel channel) throws IOException, InterruptedException {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528356941/fstmerge_var1_7200983467065223025
        return channel.call(new GetHeapDump());
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528356941/fstmerge_base_4240778419942092567
        return channel.call(new Callable<FilePath, IOException>() {
            public FilePath call() throws IOException {
                final File hprof = File.createTempFile("hudson-heapdump", "hprof");
                hprof.delete();
                try {
                    MBeanServer server = ManagementFactory.getPlatformMBeanServer();
                    server.invoke(new ObjectName("com.sun.management:type=HotSpotDiagnostic"), "dumpHeap",
                            new Object[]{hprof.getAbsolutePath(), true}, new String[]{String.class.getName(), boolean.class.getName()});

                    return new FilePath(hprof);
                } catch (JMException e) {
                    throw new IOException2(e);
                }
            }

            private static final long serialVersionUID = 1L;
        });
=======
        return channel.call(new MasterToSlaveCallable<FilePath, IOException>() {
            public FilePath call() throws IOException {
                final File hprof = File.createTempFile("hudson-heapdump", "hprof");
                hprof.delete();
                try {
                    MBeanServer server = ManagementFactory.getPlatformMBeanServer();
                    server.invoke(new ObjectName("com.sun.management:type=HotSpotDiagnostic"), "dumpHeap",
                            new Object[]{hprof.getAbsolutePath(), true}, new String[]{String.class.getName(), boolean.class.getName()});

                    return new FilePath(hprof);
                } catch (JMException e) {
                    throw new IOException(e);
                }
            }

            private static final long serialVersionUID = 1L;
        });
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528356941/fstmerge_var2_5668457200936648783
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_11b24_ccbe9/rev_11b24-ccbe9/core/src/main/java/hudson/util/RemotingDiagnostics.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528361509/fstmerge_var1_1293189146780412327
private void record(AbstractBuild<?,?> build, BuildListener listener, Map<String,String> record, final String targets) throws IOException, InterruptedException {
        final class Record implements Serializable {
            final boolean produced;
            final String relativePath;
            final String fileName;
            final String md5sum;

            public Record(boolean produced, String relativePath, String fileName, String md5sum) {
                this.produced = produced;
                this.relativePath = relativePath;
                this.fileName = fileName;
                this.md5sum = md5sum;
            }

            Fingerprint addRecord(AbstractBuild build) throws IOException {
                FingerprintMap map = Jenkins.getInstance().getFingerprintMap();
                return map.getOrCreate(produced?build:null, fileName, md5sum);
            }

            private static final long serialVersionUID = 1L;
        }

        final long buildTimestamp = build.getTimeInMillis();

        FilePath ws = build.getWorkspace();
        if(ws==null) {
            listener.error(Messages.Fingerprinter_NoWorkspace());
            build.setResult(Result.FAILURE);
            return;
        }

        List<Record> records = ws.act(new MasterToSlaveFileCallable<List<Record>>() {
            public List<Record> invoke(File baseDir, VirtualChannel channel) throws IOException {
                List<Record> results = new ArrayList<Record>();

                FileSet src = Util.createFileSet(baseDir,targets);

                DirectoryScanner ds = src.getDirectoryScanner();
                for( String f : ds.getIncludedFiles() ) {
                    File file = new File(baseDir,f);

                    // consider the file to be produced by this build only if the timestamp
                    // is newer than when the build has started.
                    // 2000ms is an error margin since since VFAT only retains timestamp at 2sec precision
                    boolean produced = buildTimestamp <= file.lastModified()+2000;

                    try {
                        results.add(new Record(produced,f,file.getName(),new FilePath(file).digest()));
                    } catch (IOException e) {
                        throw new IOException2(Messages.Fingerprinter_DigestFailed(file),e);
                    } catch (InterruptedException e) {
                        throw new IOException2(Messages.Fingerprinter_Aborted(),e);
                    }
                }

                return results;
            }
        });

        for (Record r : records) {
            Fingerprint fp = r.addRecord(build);
            if(fp==null) {
                listener.error(Messages.Fingerprinter_FailedFor(r.relativePath));
                continue;
            }
            fp.add(build);
            record.put(r.relativePath,fp.getHashString());
        }
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528361509/fstmerge_base_3552496992772021720
private void record(AbstractBuild<?,?> build, BuildListener listener, Map<String,String> record, final String targets) throws IOException, InterruptedException {
        final class Record implements Serializable {
            final boolean produced;
            final String relativePath;
            final String fileName;
            final String md5sum;

            public Record(boolean produced, String relativePath, String fileName, String md5sum) {
                this.produced = produced;
                this.relativePath = relativePath;
                this.fileName = fileName;
                this.md5sum = md5sum;
            }

            Fingerprint addRecord(AbstractBuild build) throws IOException {
                FingerprintMap map = Jenkins.getInstance().getFingerprintMap();
                return map.getOrCreate(produced?build:null, fileName, md5sum);
            }

            private static final long serialVersionUID = 1L;
        }

        final long buildTimestamp = build.getTimeInMillis();

        FilePath ws = build.getWorkspace();
        if(ws==null) {
            listener.error(Messages.Fingerprinter_NoWorkspace());
            build.setResult(Result.FAILURE);
            return;
        }

        List<Record> records = ws.act(new FileCallable<List<Record>>() {
            public List<Record> invoke(File baseDir, VirtualChannel channel) throws IOException {
                List<Record> results = new ArrayList<Record>();

                FileSet src = Util.createFileSet(baseDir,targets);

                DirectoryScanner ds = src.getDirectoryScanner();
                for( String f : ds.getIncludedFiles() ) {
                    File file = new File(baseDir,f);

                    // consider the file to be produced by this build only if the timestamp
                    // is newer than when the build has started.
                    // 2000ms is an error margin since since VFAT only retains timestamp at 2sec precision
                    boolean produced = buildTimestamp <= file.lastModified()+2000;

                    try {
                        results.add(new Record(produced,f,file.getName(),new FilePath(file).digest()));
                    } catch (IOException e) {
                        throw new IOException2(Messages.Fingerprinter_DigestFailed(file),e);
                    } catch (InterruptedException e) {
                        throw new IOException2(Messages.Fingerprinter_Aborted(),e);
                    }
                }

                return results;
            }
        });

        for (Record r : records) {
            Fingerprint fp = r.addRecord(build);
            if(fp==null) {
                listener.error(Messages.Fingerprinter_FailedFor(r.relativePath));
                continue;
            }
            fp.add(build);
            record.put(r.relativePath,fp.getHashString());
        }
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528361509/fstmerge_var2_3192778762367508192

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_11b24_ccbe9/rev_11b24-ccbe9/core/src/main/java/hudson/tasks/Fingerprinter.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528363774/fstmerge_var1_2706813090127849921
@Override
    public TestResult parse(final String testResultLocations, final AbstractBuild build, final Launcher launcher, final TaskListener listener) throws InterruptedException, IOException {
        return build.getWorkspace().act(new MasterToSlaveFileCallable<TestResult>() {
            final boolean ignoreTimestampCheck = IGNORE_TIMESTAMP_CHECK; // so that the property can be set on the master
            final long buildTime = build.getTimestamp().getTimeInMillis();
            final long nowMaster = System.currentTimeMillis();

            public TestResult invoke(File dir, VirtualChannel channel) throws IOException, InterruptedException {
                final long nowSlave = System.currentTimeMillis();

                // files older than this timestamp is considered stale
                long localBuildTime = buildTime + (nowSlave - nowMaster);

                FilePath[] paths = new FilePath(dir).list(testResultLocations);
                if (paths.length==0)
                    throw new AbortException("No test reports that matches "+testResultLocations+" found. Configuration error?");

                // since dir is local, paths all point to the local files
                List<File> files = new ArrayList<File>(paths.length);
                for (FilePath path : paths) {
                    File report = new File(path.getRemote());
                    if (ignoreTimestampCheck || localBuildTime - 3000 /*error margin*/ < report.lastModified()) {
                        // this file is created during this build
                        files.add(report);
                    }
                }

                if (files.isEmpty()) {
                    // none of the files were new
                    throw new AbortException(
                        String.format(
                        "Test reports were found but none of them are new. Did tests run? %n"+
                        "For example, %s is %s old%n", paths[0].getRemote(),
                        Util.getTimeSpanString(localBuildTime-paths[0].lastModified())));
                }

                return parse(files,launcher,listener);
            }
        });
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528363774/fstmerge_base_6894618143383170100
@Override
    public TestResult parse(final String testResultLocations, final AbstractBuild build, final Launcher launcher, final TaskListener listener) throws InterruptedException, IOException {
        return build.getWorkspace().act(new FileCallable<TestResult>() {
            final boolean ignoreTimestampCheck = IGNORE_TIMESTAMP_CHECK; // so that the property can be set on the master
            final long buildTime = build.getTimestamp().getTimeInMillis();
            final long nowMaster = System.currentTimeMillis();

            public TestResult invoke(File dir, VirtualChannel channel) throws IOException, InterruptedException {
                final long nowSlave = System.currentTimeMillis();

                // files older than this timestamp is considered stale
                long localBuildTime = buildTime + (nowSlave - nowMaster);

                FilePath[] paths = new FilePath(dir).list(testResultLocations);
                if (paths.length==0)
                    throw new AbortException("No test reports that matches "+testResultLocations+" found. Configuration error?");

                // since dir is local, paths all point to the local files
                List<File> files = new ArrayList<File>(paths.length);
                for (FilePath path : paths) {
                    File report = new File(path.getRemote());
                    if (ignoreTimestampCheck || localBuildTime - 3000 /*error margin*/ < report.lastModified()) {
                        // this file is created during this build
                        files.add(report);
                    }
                }

                if (files.isEmpty()) {
                    // none of the files were new
                    throw new AbortException(
                        String.format(
                        "Test reports were found but none of them are new. Did tests run? %n"+
                        "For example, %s is %s old%n", paths[0].getRemote(),
                        Util.getTimeSpanString(localBuildTime-paths[0].lastModified())));
                }

                return parse(files,launcher,listener);
            }
        });
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528363774/fstmerge_var2_4989996864970725000

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_11b24_ccbe9/rev_11b24-ccbe9/core/src/main/java/hudson/tasks/test/DefaultTestResultParserImpl.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528368745/fstmerge_var1_3734065553376206154
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528368745/fstmerge_base_5996403301320972345
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528368745/fstmerge_var2_532039566091526104

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_11b24_ccbe9/rev_11b24-ccbe9/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528369201/fstmerge_var1_8656084333577628607
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528369201/fstmerge_base_5701119956445516187
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528369201/fstmerge_var2_5042275842774586219

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_11b24_ccbe9/rev_11b24-ccbe9/core/src/main/java/hudson/matrix/Axis.java
Conflict type: LineBasedMCFd
Conflict body: 
public static VirtualFile forFilePath(final FilePath f) {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528371308/fstmerge_var1_5634115644779773796
        return new VirtualFile() {
            @Override public String getName() {
                return f.getName();
            }
            @Override public URI toURI() {
                try {
                    return f.toURI();
                } catch (Exception x) {
                    return URI.create(f.getRemote());
                }
            }
            @Override public VirtualFile getParent() {
                return f.getParent().toVirtualFile();
            }
            @Override public boolean isDirectory() throws IOException {
                try {
                    return f.isDirectory();
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
            @Override public boolean isFile() throws IOException {
                // TODO should probably introduce a method for this purpose
                return exists() && !isDirectory();
            }
            @Override public boolean exists() throws IOException {
                try {
                    return f.exists();
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
            @Override public VirtualFile[] list() throws IOException {
                try {
                    List<FilePath> kids = f.list();
                    if (kids == null) {
                        return new VirtualFile[0];
                    }
                    VirtualFile[] vfs = new VirtualFile[kids.size()];
                    for (int i = 0; i < vfs.length; i++) {
                        vfs[i] = forFilePath(kids.get(i));
                    }
                    return vfs;
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
            @Override public String[] list(String glob) throws IOException {
                try {
                    return f.act(new Scanner(glob));
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
            @Override public VirtualFile child(String name) {
                return forFilePath(f.child(name));
            }
            @Override public long length() throws IOException {
                try {
                    return f.length();
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
            @Override public long lastModified() throws IOException {
                try {
                    return f.lastModified();
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
            @Override public boolean canRead() throws IOException {
                try {
                    return f.act(new Readable());
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
            @Override public InputStream open() throws IOException {
                try {
                    return f.read();
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
        };
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528371308/fstmerge_base_8521441476744760447
        return new VirtualFile() {
            @Override public String getName() {
                return f.getName();
            }
            @Override public URI toURI() {
                try {
                    return f.toURI();
                } catch (Exception x) {
                    return URI.create(f.getRemote());
                }
            }
            @Override public VirtualFile getParent() {
                return f.getParent().toVirtualFile();
            }
            @Override public boolean isDirectory() throws IOException {
                try {
                    return f.isDirectory();
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
            @Override public boolean isFile() throws IOException {
                // TODO should probably introduce a method for this purpose
                return exists() && !isDirectory();
            }
            @Override public boolean exists() throws IOException {
                try {
                    return f.exists();
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
            @Override public VirtualFile[] list() throws IOException {
                try {
                    List<FilePath> kids = f.list();
                    if (kids == null) {
                        return new VirtualFile[0];
                    }
                    VirtualFile[] vfs = new VirtualFile[kids.size()];
                    for (int i = 0; i < vfs.length; i++) {
                        vfs[i] = forFilePath(kids.get(i));
                    }
                    return vfs;
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
            @Override public String[] list(String glob) throws IOException {
                try {
                    return f.act(new Scanner(glob));
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
            @Override public VirtualFile child(String name) {
                return forFilePath(f.child(name));
            }
            @Override public long length() throws IOException {
                try {
                    return f.length();
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
            @Override public long lastModified() throws IOException {
                try {
                    return f.lastModified();
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
            @Override public boolean canRead() throws IOException {
                try {
                    return f.act(new Readable());
                } catch (InterruptedException x) {
                    throw (IOException) new IOException(x.toString()).initCause(x);
                }
            }
            @Override public InputStream open() throws IOException {
                return f.read();
            }
        };
=======
        return new FilePathVF(f);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528371308/fstmerge_var2_3262010817173856614
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_11b24_ccbe9/rev_11b24-ccbe9/core/src/main/java/jenkins/util/VirtualFile.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528372226/fstmerge_var1_4251409369669751741
@Override
    public void check(RoleSensitive subject, @Nonnull Collection<Role> expected) throws SecurityException {
        final String name = subject.getClass().getName();

        if (expected.contains(Roles.MASTER)) {
            if (BYPASS_LOG == null) {
                LOGGER.log(Level.FINE, "Executing {0} is allowed since it is targeted for the master role", name);
            }
            return;    // known to be safe
        }

        if (BYPASS_LOG != null) {
            BYPASS_LOG.println(name);
            return;
        }

        if (isWhitelisted(subject,expected)) {
            // this subject is dubious, but we are letting it through as per whitelisting
            LOGGER.log(Level.FINE, "Explicitly allowing {0} to be sent from slave to master", name);
            return;
        }

        throw new SecurityException("Sending " + name + " from slave to master is prohibited. See http://jenkins-ci.org/security-144 for more details");
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528372226/fstmerge_base_5167973591038617614
=======
@Override
    public void check(RoleSensitive subject, @Nonnull Collection<Role> expected) throws SecurityException {
        final String name = subject.getClass().getName();

        if (expected.contains(Roles.MASTER)) {
            if (BYPASS_LOG == null) {
                LOGGER.log(Level.FINE, "Executing {0} is allowed since it is targeted for the master role", name);
            }
            return;    // known to be safe
        }

        if (BYPASS_LOG != null) {
            BYPASS_LOG.println(name);
            return;
        }

        if (isWhitelisted(name)) {
            // this subject is dubious, but we are letting it through as per whitelisting
            LOGGER.log(Level.FINE, "Explicitly allowing {0} to be sent from slave to master", name);
            return;
        }

        throw new SecurityException("Sending " + name + " from slave to master is prohibited");
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528372226/fstmerge_var2_2688866570144819013

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_11b24_ccbe9/rev_11b24-ccbe9/core/src/main/java/jenkins/security/CallableDirectionChecker.java
Conflict type: SameSignatureCM
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528372230/fstmerge_var1_7806377234091993617
@Override
        public void onChannelBuilding(ChannelBuilder builder, Object context) {
            // if the big red emergency button is pressed, then we need to disable the defense mechanism,
            // including enabling classloading.
            if (!BYPASS && BYPASS_LOG == null) {
                builder.withRemoteClassLoadingAllowed(false);
            }
            // In either of the above cases, the check method will return normally, but may log things.
            builder.withRoleChecker(new CallableDirectionChecker(context));
        }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528372230/fstmerge_base_8431521945446222842
=======
@Override
        public void onChannelBuilding(ChannelBuilder builder, Object context) {
            // if the big red emergency button is pressed, then we need to disable the defense mechanism,
            // including enabling classloading.
            if (!BYPASS && BYPASS_LOG == null) {
                builder.withRemoteClassLoadingAllowed(false);
            }
            // In either of the above cases, the check method will return normally, but may log things.
            builder.withRoleChecker(new CallableDirectionChecker());
        }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528372230/fstmerge_var2_7245536106288169473

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_11b24_ccbe9/rev_11b24-ccbe9/core/src/main/java/jenkins/security/CallableDirectionChecker.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_38cb0_ef2a9/rev_38cb0-ef2a9.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528658548/fstmerge_var1_2203629921364518033
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528658548/fstmerge_base_7764604895860822419
private String computeShortName(Manifest manifest, File archive) {
        // use the name captured in the manifest, as often plugins
        // depend on the specific short name in its URLs.
        String n = manifest.getMainAttributes().getValue("Short-Name");
        if(n!=null)     return n;

        // maven seems to put this automatically, so good fallback to check.
        n = manifest.getMainAttributes().getValue("Extension-Name");
        if(n!=null)     return n;

        // otherwise infer from the file name, since older plugins don't have
        // this entry.
        return getBaseName(archive);
    }
=======
static String computeShortName(Manifest manifest, File archive) {
        // use the name captured in the manifest, as often plugins
        // depend on the specific short name in its URLs.
        String n = manifest.getMainAttributes().getValue("Short-Name");
        if(n!=null)     return n;

        // maven seems to put this automatically, so good fallback to check.
        n = manifest.getMainAttributes().getValue("Extension-Name");
        if(n!=null)     return n;

        // otherwise infer from the file name, since older plugins don't have
        // this entry.
        return getBaseName(archive);
    }
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528658548/fstmerge_var2_6113040547024576846

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_38cb0_ef2a9/rev_38cb0-ef2a9/core/src/main/java/hudson/PluginWrapper.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528690287/fstmerge_var1_4541419106424774479
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528690287/fstmerge_base_6995449084966073271
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528690287/fstmerge_var2_5934170912828801733

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_38cb0_ef2a9/rev_38cb0-ef2a9/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528690794/fstmerge_var1_8807743744016704737
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528690794/fstmerge_base_2408907419049493405
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418528690794/fstmerge_var2_6962174801506229702

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_38cb0_ef2a9/rev_38cb0-ef2a9/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c0444_c94c1/rev_c0444-c94c1.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418529007725/fstmerge_var1_2471206859555346519
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418529007725/fstmerge_base_3880103320529176456
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418529007725/fstmerge_var2_3705005888428225485

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c0444_c94c1/rev_c0444-c94c1/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418529008179/fstmerge_var1_8863337272740199370
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418529008179/fstmerge_base_37745713194673677
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418529008179/fstmerge_var2_1779713545221127615

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c0444_c94c1/rev_c0444-c94c1/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b2fe5_6819a/rev_b2fe5-6819a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b2d5c_af6c5/rev_b2d5c-af6c5.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418529638267/fstmerge_var1_7181975905219424509
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418529638267/fstmerge_base_2965679181377559423
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418529638267/fstmerge_var2_2603624087769436950

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b2d5c_af6c5/rev_b2d5c-af6c5/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418529638734/fstmerge_var1_6937398142065979630
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418529638734/fstmerge_base_2566704211087914467
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418529638734/fstmerge_var2_2461501271791021330

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b2d5c_af6c5/rev_b2d5c-af6c5/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_94590_c7369/rev_94590-c7369.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418529949389/fstmerge_var1_6888900727652631974
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418529949389/fstmerge_base_5700206777616278928
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418529949389/fstmerge_var2_7824610602984371144

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_94590_c7369/rev_94590-c7369/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418529949887/fstmerge_var1_5032084422723315712
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418529949887/fstmerge_base_5642037689591632094
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418529949887/fstmerge_var2_8330918285203996660

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_94590_c7369/rev_94590-c7369/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_56b87_97b2f/rev_56b87-97b2f.revisions
Conflict type: LineBasedMCFd
Conflict body: 
public InputStream read() throws IOException, InterruptedException {
        if(channel==null)
            return new FileInputStream(reading(new File(remote)));

        final Pipe p = Pipe.createRemoteToLocal();
        actAsync(new SecureFileCallable<Void>() {
            private static final long serialVersionUID = 1L;

            @Override
            public Void invoke(File f, VirtualChannel channel) throws IOException, InterruptedException {
                FileInputStream fis = null;
                try {
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418530230613/fstmerge_var1_8485682105652716733
                    fis = new FileInputStream(new File(remote));
                    Util.copyStream(fis, p.getOut());
                    return null;
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418530230613/fstmerge_base_4488946363466221658
                    fis = new FileInputStream(new File(remote));
                    Util.copyStream(fis,p.getOut());
                    return null;
=======
                    fis = new FileInputStream(reading(f));
                    Util.copyStream(fis, p.getOut());
                } catch (Exception x) {
                    p.error(x);
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418530230613/fstmerge_var2_731865595727743497
                } finally {
                    org.apache.commons.io.IOUtils.closeQuietly(fis);
                    org.apache.commons.io.IOUtils.closeQuietly(p.getOut());
                }
                return null;
            }
        });

        return p.getIn();
    }

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_56b87_97b2f/rev_56b87-97b2f/core/src/main/java/hudson/FilePath.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_b4a96_300b6/rev_b4a96-300b6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9b36e_6f9fc/rev_9b36e-6f9fc.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2394c_56b87/rev_2394c-56b87.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418531217483/fstmerge_var1_7973913842197938643
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418531217483/fstmerge_base_5307843293247230254
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418531217483/fstmerge_var2_9032984129860634855

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2394c_56b87/rev_2394c-56b87/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418531217978/fstmerge_var1_6620946489965238629
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418531217978/fstmerge_base_3288453502366108060
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418531217978/fstmerge_var2_4589961352712028277

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_2394c_56b87/rev_2394c-56b87/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3a7e1_f0658/rev_3a7e1-f0658.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cbf97_a1ff1/rev_cbf97-a1ff1.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418531855387/fstmerge_var1_5831597865463035603
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418531855387/fstmerge_base_6247495749246148844
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418531855387/fstmerge_var2_699481431425128254

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cbf97_a1ff1/rev_cbf97-a1ff1/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418531855861/fstmerge_var1_1544760660016394808
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418531855861/fstmerge_base_671921817679567879
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418531855861/fstmerge_var2_8229913894101486999

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cbf97_a1ff1/rev_cbf97-a1ff1/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_d7097_1671c/rev_d7097-1671c.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_16509_6ee4d/rev_16509-6ee4d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_ec2b7_8e0b8/rev_ec2b7-8e0b8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_34d59_a22e2/rev_34d59-a22e2.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4c1d0_3a7e1/rev_4c1d0-3a7e1.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_741e8_0434a/rev_741e8-0434a.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9a108_8c10c/rev_9a108-8c10c.revisions
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418534092550/fstmerge_var1_8627837091395768461
public TextAxis(String name, String... values) {
        super(name, values);
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418534092550/fstmerge_base_3246414613450095698
@DataBoundConstructor
    public TextAxis(String name, String valueString) {
        super(name, valueString);
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418534092550/fstmerge_var2_5435221185528870489

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9a108_8c10c/rev_9a108-8c10c/core/src/main/java/hudson/matrix/TextAxis.java
Conflict type: LineBasedMCFd
Conflict body: 
<<<<<<< /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418534092998/fstmerge_var1_4829677271479550629
public Axis(String name, String... values) {
        this(name,Arrays.asList(values));        
    }
||||||| /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418534092998/fstmerge_base_3584595677324086375
@DataBoundConstructor
    public Axis(String name, String valueString) {
        this.name = name;
        this.values = new ArrayList<String>(Arrays.asList(Util.tokenize(valueString)));
    }
=======
>>>>>>> /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/conflictsAnalyzer/fstmerge_tmp1418534092998/fstmerge_var2_8159704979125256533

File path: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9a108_8c10c/rev_9a108-8c10c/core/src/main/java/hudson/matrix/Axis.java

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_207bf_86ea6/rev_207bf-86ea6.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_dc547_3880e/rev_dc547-3880e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_3cd24_e0ce3/rev_3cd24-e0ce3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c577f_47b8d/rev_c577f-47b8d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_8a68e_38814/rev_8a68e-38814.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c426f_9bf29/rev_c426f-9bf29.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_316e6_8b71d/rev_316e6-8b71d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9e81b_24c5e/rev_9e81b-24c5e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e6c2e_24c5e/rev_e6c2e-24c5e.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e985e_ada84/rev_e985e-ada84.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_e4517_ae053/rev_e4517-ae053.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_34850_78fde/rev_34850-78fde.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_a501f_1a48d/rev_a501f-1a48d.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_c5636_e71d5/rev_c5636-e71d5.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_4f54c_9edf0/rev_4f54c-9edf0.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_0b0b8_d57e3/rev_0b0b8-d57e3.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_229ec_9a631/rev_229ec-9a631.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_07a19_fb8a8/rev_07a19-fb8a8.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_88f2e_4f0e9/rev_88f2e-4f0e9.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_9aaeb_4e561/rev_9aaeb-4e561.revisions

==================================================================================================================
Revision: /media/ines/b9d638e1-93ee-435a-af41-80d544917e00/gitClones/conflictsStudy/downloads/jenkins/revisions/rev_cac9f_dfe98/rev_cac9f-dfe98.revisions

=========================================================